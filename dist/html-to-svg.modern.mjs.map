{"version":3,"file":"html-to-svg.modern.mjs","sources":["../src/utils/dom-walk.js","../src/utils/dom-get-zindex.js","../src/utils/range-get-client-rects.js","../src/utils/dom-get-text-fragments.js","../src/utils/parse-transform.js","../src/utils/array-last.js","../src/utils/dom-render-svg.js","../src/renderers/canvas.js","../src/renderers/div.js","../src/renderers/image.js","../src/renderers/span.js","../src/renderers/svg.js","../src/renderers/text.js","../src/index.js"],"sourcesContent":["async function walk (element, callback, { sort = () => 1 } = {}, depth = 0, index = 0) {\n  await callback(element, depth, index)\n\n  const children = Array.from(element.children).sort(sort)\n  for (let index = 0; index < children.length; index++) {\n    await walk(children[index], callback, { sort }, depth + 1, index)\n  }\n}\n\nexport default walk\n","export default el => {\n  const zindex = window.getComputedStyle(el).getPropertyValue('z-index')\n  return zindex === 'auto' ? 0 : parseInt(zindex ?? 0)\n}\n","/* global DocumentFragment */\n\n// Return Range.clientRects with their corresponding DocumentFragment\nexport default function (node, text = node.innerText || node.textContent) {\n  const range = document.createRange()\n\n  const rects = []\n  for (let i = 0; i < node.length; i++) {\n    range.setStart(node, 0)\n    range.setEnd(node, (i + 1))\n\n    const clientRects = range.getClientRects()\n\n    const index = clientRects.length - 1\n    rects[index] = rects[index] ?? { text: '' }\n    rects[index].rect = clientRects[index]\n    rects[index].text += text.charAt(i)\n  }\n\n  return rects.map(rect => {\n    rect.fragment = new DocumentFragment()\n    rect.fragment.textContent = rect.text\n    return rect\n  })\n}\n","/* global Node */\nimport getClientRects from './range-get-client-rects'\n\nexport default function (element) {\n  if (!element) return\n  if (!element.innerText) return\n  if (!element.childNodes.length) return\n\n  let fragments = []\n\n  for (const node of element.childNodes) {\n    if (node.nodeType !== Node.TEXT_NODE) continue\n    if (!node.textContent.length) continue\n\n    // Text interface does not provide a .innerText method, which would be\n    // more appropriate than textContent as it skips non-rendered whitespaces\n    // Splitting white-space leading Text trick the browser to recompute\n    // the layout itself, dealing with implicit space between adjacent nodes\n    if (/^\\s/.test(node.textContent)) node.splitText(1)\n\n    fragments = fragments.concat(getClientRects(node))\n  }\n\n  return fragments\n}\n","import * as Transform from 'transformation-matrix'\n\nexport default function (value) {\n  if (!value || value === 'none' || value === '') return null\n\n  const matrix = Transform.fromString(value)\n  const { translate, scale, rotation } = Transform.decomposeTSR(matrix)\n\n  return {\n    raw: value,\n    translate,\n    scale,\n    rotation,\n    toSVGTransform: ({ x = 0, y = 0, origin = [0, 0] } = {}) => {\n      const cx = x + origin[0]\n      const cy = y + origin[1]\n\n      return Transform.toString(\n        Transform.compose(\n          Transform.translate(translate?.tx ?? 0, translate?.ty ?? 0),\n          Transform.scale(scale?.sx ?? 1, scale?.sy ?? scale?.sx ?? 1, cx, cy),\n          Transform.rotate(rotation?.angle ?? 0, cx, cy)\n        )\n      )\n    }\n  }\n}\n","export default arr => arr[arr.length - 1]\n","export default function (name, props = {}, parent, children = []) {\n  const NS = 'http://www.w3.org/2000/svg'\n\n  const element = document.createElementNS(NS, name)\n  if (name === 'svg') element.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns', NS)\n  for (const key in props) {\n    if (props[key] === null || props[key] === undefined) continue\n    element.setAttribute(key, props[key])\n  }\n\n  if (parent) parent.appendChild(element)\n\n  for (const child of children ?? []) element.appendChild(child)\n  return element\n}\n","import $ from '../utils/dom-render-svg'\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => $('image', {\n  x,\n  y,\n  width,\n  height,\n  href: element.toDataURL('image/png')\n})\n","import $ from '../utils/dom-render-svg'\nimport { parse as parseGradient } from 'gradient-parser'\nimport { uid } from 'uid'\n\nconst kebabToCamel = s => s.replace(/-./g, x => x[1].toUpperCase())\n\nfunction isTransparent (color) {\n  if (!color || color === 'none' || color === 'transparent') return true\n\n  if (color.startsWith('rgba')) {\n    const rgba = color.match(/[\\d.]+/g)\n    if (rgba[3] === '0') return true\n  }\n\n  return false\n}\n\nfunction parseBorders (s) {\n  let borders = null\n\n  for (const dir of ['top', 'right', 'bottom', 'left']) {\n    const color = s.getPropertyValue(`border-${dir}-color`)\n    const width = parseInt(s.getPropertyValue(`border-${dir}-width`))\n    const style = s.getPropertyValue(`border-${dir}-style`)\n\n    // Skip invisible\n    if (isTransparent(color)) continue\n    if (!width || isNaN(width)) continue\n    if (style === 'none' || style === 'hidden') continue\n\n    borders ??= {}\n    borders[dir] = { color, width, style }\n  }\n\n  return borders\n}\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style, defs }) => {\n  if (!width || !height) return\n\n  const backgroundColor = style.getPropertyValue('background-color')\n  const backgroundImage = style.getPropertyValue('background-image') ?? 'none'\n  const boxShadow = style.getPropertyValue('box-shadow') ?? 'none'\n  const borderRadius = parseInt(style.getPropertyValue('border-radius')) ?? null\n  const borders = parseBorders(style)\n\n  // Skip visually empty blocks\n  if (isTransparent(backgroundColor) && isTransparent(backgroundImage) && !borders) return\n\n  // Render initial rect\n  const g = $('g')\n  const rect = $('rect', {\n    x,\n    y,\n    width,\n    height,\n    fill: backgroundColor,\n    rx: borderRadius\n  }, g)\n\n  // Render background-image\n  if (!isTransparent(backgroundImage)) {\n    // TODO handle multiple gradients\n    const {\n      colorStops,\n      orientation,\n      type\n    } = parseGradient(backgroundImage)?.[0] ?? {}\n\n    // TODO handle repeating gradients type, SEE https://github.com/rafaelcaricio/gradient-parser?tab=readme-ov-file#ast\n    const gradient = $(kebabToCamel(type), {\n      id: 'gradient_' + uid(),\n      gradientUnits: 'objectBoundingBox', // Allow specifying rotation center in %\n      gradientTransform: orientation\n        ? (() => {\n            switch (orientation.type) {\n              case 'angular': return `rotate(${270 + parseFloat(orientation.value)}, 0.5, 0.5)`\n              case 'directional': {\n                switch (orientation.value) {\n                  case 'top': return 'rotate(270, 0.5, 0.5)'\n                  case 'right': return null\n                  case 'bottom': return 'rotate(90, 0.5, 0.5)'\n                  case 'left': return 'rotate(180, 0.5, 0.5)'\n                }\n              }\n            }\n          })()\n        : 'rotate(90, 0.5, 0.5)'\n    }, defs)\n\n    // Add color stops\n    for (let index = 0; index < colorStops.length; index++) {\n      const colorStop = colorStops[index]\n      const stop = $('stop', {\n        offset: colorStop.length\n          // TODO handle colorStop.length.type other than '%'\n          ? +colorStop.length.value / 100\n          : index / (colorStops.length - 1),\n        'stop-color': `${colorStop.type}(${colorStop.value})`\n      })\n\n      gradient.appendChild(stop)\n    }\n\n    rect.setAttribute('fill', `url(#${gradient.id})`)\n  }\n\n  // Render box shadow\n  if (boxShadow !== 'none') {\n    const filter = $('filter', { id: 'filter_' + uid() }, defs)\n    // This assumes browser consistency of the CSSStyleDeclaration.getPropertyValue returned string\n    const REGEX_SHADOW_DECLARATION = /rgba?\\(([\\d.]{1,3}(,\\s)?){3,4}\\)\\s(-?(\\d+)px\\s?){4}/g\n    const REGEX_SHADOW_DECLARATION_PARSER = /(rgba?\\((?:[\\d.]{1,3}(?:,\\s)?){3,4}\\))\\s(-?[\\d.]+)px\\s(-?[\\d.]+)px\\s(-?[\\d.]+)px\\s(-?[\\d.]+)px/\n\n    for (const shadowString of boxShadow.match(REGEX_SHADOW_DECLARATION) ?? []) {\n      let [\n        ,\n        color,\n        offx,\n        offy,\n        blur,\n        spread\n      ] = shadowString.match(REGEX_SHADOW_DECLARATION_PARSER)\n\n      offx = parseInt(offx)\n      offy = parseInt(offy)\n      spread = parseInt(spread)\n\n      filter.appendChild($('feGaussianBlur', { stdDeviation: blur / 2 }))\n\n      const shadow = $('rect', {\n        x: x + offx - spread,\n        y: y + offy - spread,\n        width: width + spread * 2,\n        height: height + spread * 2,\n        fill: color,\n        rx: borderRadius,\n        filter: `url(#${filter.id})`\n      })\n\n      g.prepend(shadow)\n    }\n  }\n\n  // Render border\n  if (!borderRadius) {\n    for (const [dir, border] of Object.entries(borders ?? {})) {\n      const geom = {}\n      switch (dir) {\n        case 'top':\n          geom.x1 = x\n          geom.x2 = x + width\n          geom.y1 = geom.y2 = y + parseInt(border.width) / 2\n          break\n\n        case 'right':\n          geom.x1 = geom.x2 = x + width - parseInt(border.width) / 2\n          geom.y1 = y\n          geom.y2 = y + height\n          break\n\n        case 'bottom':\n          geom.x1 = x\n          geom.x2 = x + width\n          geom.y1 = geom.y2 = y + height - parseInt(border.width) / 2\n          break\n\n        case 'left':\n          geom.x1 = geom.x2 = x + parseInt(border.width) / 2\n          geom.y1 = y\n          geom.y2 = y + height\n          break\n      }\n\n      $('line', {\n        ...geom,\n        stroke: border.color,\n        'stroke-width': border.width,\n        ...(() => {\n          switch (border.style) {\n            case 'dotted': return {\n              'stroke-dasharray': [0, border.width * 2].join(' '),\n              'stroke-dashoffset': 1,\n              'stroke-linejoin': 'round',\n              'stroke-linecap': 'round'\n            }\n\n            case 'dashed': return {\n              // https://developer.mozilla.org/en-US/docs/Web/CSS/border-style#dashed\n              'stroke-dasharray': [border.width * 2, 4].join(' ')\n            }\n\n            default: return {}\n          }\n        })()\n      }, g)\n    }\n  } else if (borders?.top) {\n    // Handle border-radius by drawing the whole border as a standard stroke\n    // TODO handle border-radius for specific border-dir.\n    // For now, we use borders.top as a placeholder for all borders\n    rect.setAttribute('stroke', borders.top.color)\n    rect.setAttribute('stroke-width', borders.top.width)\n\n    // Draw border from center\n    rect.setAttribute('rx', borderRadius - borders.top.width / 2)\n    rect.setAttribute('x', x + borders.top.width / 2)\n    rect.setAttribute('y', y + borders.top.width / 2)\n    rect.setAttribute('width', width - borders.top.width)\n    rect.setAttribute('height', height - borders.top.width)\n  }\n\n  return g\n}\n","import $ from '../utils/dom-render-svg'\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => {\n  if (!width || !height) return\n  if (!element.src) return\n\n  return $('image', {\n    x,\n    y,\n    width,\n    height,\n    href: element.src\n  })\n}\n","import $ from '../utils/dom-render-svg'\nimport getTextFragments from '../utils/dom-get-text-fragments'\n\nimport DivRenderer from './div'\n\nconst SpanRenderer = ({ debug, fonts }) => async (element, { x, y, width, height, style, viewBox }, options) => {\n  const g = $('g', null)\n\n  // Render every child node as a span\n  const renderSpan = SpanRenderer({ debug, fonts })\n  for (const node of element.childNodes) {\n    g.appendChild(await renderSpan(node, { x, y, width, height, style, viewBox }, options))\n  }\n\n  // Render every text fragment using the div renderer (background etc)\n  const renderDiv = DivRenderer({ debug, fonts })\n  for (const { rect } of getTextFragments(element) ?? []) {\n    const rendered = await renderDiv(element, {\n      x: rect.x - viewBox.x,\n      y: rect.y - viewBox.y,\n      width: rect.width,\n      height: rect.height,\n      style,\n      viewBox\n    }, options)\n\n    if (rendered) g.appendChild(rendered)\n  }\n\n  return g\n}\n\nexport default SpanRenderer\n","/* global FileReader, XMLSerializer, btoa, XMLHttpRequest */\nimport $ from '../utils/dom-render-svg'\n\nexport default ({ cache }) => async (element, { x, y, width, height, style }, {\n  rasterizeNestedSVG = true\n} = {}) => {\n  // Convert all image to dataURL to maximizime compatibility\n  for (const image of element.querySelectorAll('image[href]')) {\n    const src = image.getAttribute('href')\n\n    if (!cache.has(src)) {\n      // Fetch blob from image src\n      const blob = await new Promise(resolve => {\n        const request = new XMLHttpRequest()\n        request.open('GET', src, true)\n        request.responseType = 'blob'\n        request.onload = () => resolve(request.response)\n        request.send()\n      })\n\n      // Convert blob to dataURL using the FileReader API\n      const dataURL = await new Promise(resolve => {\n        const reader = new FileReader()\n        reader.onload = e => resolve(e.target.result)\n        reader.readAsDataURL(blob)\n      })\n\n      // Cache dataURL\n      cache.set(src, dataURL)\n    }\n\n    image.setAttribute('href', cache.get(src))\n  }\n\n  return rasterizeNestedSVG\n    ? $('image', {\n      x,\n      y,\n      width,\n      height,\n      href: 'data:image/svg+xml;base64,' + btoa(new XMLSerializer().serializeToString(element))\n    })\n    : (() => {\n        const svg = $('svg', {\n          x,\n          y,\n          width,\n          height,\n          viewbox: `0 0 ${width} ${height}`\n        })\n\n        svg.innerHTML = element.innerHTML\n        return svg\n      })()\n}\n","// TODO text-decoration\n\nimport $ from '../utils/dom-render-svg'\n\nconst matchFont = s => ({ family, style = 'normal', weight = '400' } = {}) =>\n  family === (s.getPropertyValue('font-family') ?? '').replace(/['\"]/g, '') &&\n    style === (s.getPropertyValue('font-style') ?? 'normal') &&\n    weight === (s.getPropertyValue('font-weight') ?? '400')\n\nexport default ({ debug, fonts }) => async (string, { x, y, width, height, style }, {\n  splitText = false\n}) => {\n  if (!string) return\n\n  const g = $('g', { class: 'text-fragment' })\n\n  // Find font\n  const font = fonts.find(matchFont(style))\n  if (!font) throw new Error(`Cannot find font '${style.getPropertyValue('font-family')} ${style.getPropertyValue('font-style')} ${style.getPropertyValue('font-weight')}'`)\n\n  // Extract font metrics\n  const { unitsPerEm } = font.opentype\n  const ascender = font.opentype.tables.hhea.ascender\n  const descender = font.opentype.tables.hhea.descender\n\n  // Extract CSS props\n  const letterSpacing = style.getPropertyValue('letter-spacing')\n  const fontSize = parseFloat(style.getPropertyValue('font-size'))\n\n  // Compute metrics\n  const lineBox = (ascender - descender) / unitsPerEm\n  const leading = (fontSize * lineBox) - Math.abs(descender / unitsPerEm) * fontSize\n\n  // Render various metrics for debug\n  line('start', 0, { orientation: 'vertical', stroke: 'red' })\n  line('end', width, { orientation: 'vertical', stroke: 'red' })\n  line('leading', leading, { stroke: '#4b96ff' })\n\n  if (letterSpacing !== 'normal' || splitText) {\n    const ls = letterSpacing === 'normal' ? 0 : parseFloat(letterSpacing)\n\n    // Render letter by letter in case of non-default letter-spacing or explicit split\n    for (const c of string) {\n      if (!c.match(/\\s/)) { // Do not render spaces\n        $('path', {\n          d: font.opentype.getPath(c, x, y + leading, fontSize).toPathData(3),\n          fill: style.getPropertyValue('color')\n        }, g)\n      }\n\n      x += font.opentype.getAdvanceWidth(c, fontSize) + ls\n    }\n  } else {\n    // Render string\n    $('path', {\n      d: font.opentype.getPath(string, x, y + leading, fontSize, {\n        features: {\n          // TODO extract from CSS props\n          liga: true,\n          rlig: true\n        }\n      }).toPathData(3),\n      fill: style.getPropertyValue('color')\n    }, g)\n  }\n\n  return g\n\n  function line (title, v, { orientation = 'horizontal', stroke = 'black' } = {}) {\n    return debug && $('line', {\n      title,\n      'data-value': v,\n      x1: orientation === 'horizontal' ? x : x + v,\n      x2: orientation === 'horizontal' ? x + width : x + v,\n      y1: orientation === 'horizontal' ? y + v : y,\n      y2: orientation === 'horizontal' ? y + v : y + height,\n      stroke,\n      class: 'debug'\n    }, g)\n  }\n}\n","import Opentype from 'opentype.js'\nimport { uid } from 'uid'\n\nimport walk from './utils/dom-walk'\nimport getZIndex from './utils/dom-get-zindex'\nimport getTextFragments from './utils/dom-get-text-fragments'\nimport parseTransform from './utils/parse-transform'\nimport lastOf from './utils/array-last'\n\nimport $ from './utils/dom-render-svg'\nimport * as RENDERERS from './renderers'\n\nexport default function ({\n  debug = false,\n  ignore = '',\n  fonts = []\n} = {}) {\n  const cache = new Map()\n  const detransformed = new Map()\n\n  // Init curried renderers\n  const renderers = {}\n  for (const k in RENDERERS) {\n    renderers[k] = RENDERERS[k]({ debug, fonts, cache })\n  }\n\n  // Restore all removed transformation if any\n  const cleanup = () => {\n    for (const [element, transform] of detransformed) {\n      element.style.transform = transform\n      detransformed.delete(element)\n    }\n  }\n\n  return {\n    get cache () { return cache },\n    cleanup,\n\n    // Preload all fonts before resolving\n    preload: async function () {\n      for (const font of fonts) {\n        if (font.opentype) continue\n        font.opentype = await new Promise(resolve => {\n          Opentype.load(font.url, (error, font) => {\n            if (error) throw error\n            resolve(font)\n          })\n        })\n      }\n    },\n\n    // Clear cache and delete all resources\n    destroy: function () {\n      cache.clear()\n      cleanup()\n      for (const font of fonts) delete font.opentype\n    },\n\n    // Render the HTML container as a shadow SVG\n    render: async function (root, options = {}, transform) {\n      cleanup()\n      const viewBox = root.getBoundingClientRect()\n\n      // Create the SVG container\n      const svg = $('svg', {\n        viewBox: `0 0 ${viewBox.width} ${viewBox.height}`,\n        width: viewBox.width,\n        height: viewBox.height,\n        preserveAspectRatio: 'none'\n      })\n\n      const defs = $('defs', null, svg)\n\n      // Set context to root SVG.\n      // Context will change during walk push/pop\n      const Context = (() => {\n        const stack = [svg]\n        const pop = () => stack.length > 0 && stack.pop()\n        const push = () => stack.push($('g', null, lastOf(stack)))\n        return {\n          pop,\n          push,\n          get current () { return lastOf(stack) },\n          apply: depth => {\n            const deltaDepth = depth - (stack.length - 1)\n            for (let i = 0; i < -deltaDepth; i++) pop()\n            for (let i = 0; i < deltaDepth; i++) push()\n          }\n        }\n      })()\n\n      // Render every children\n      await walk(root, async (element, depth, index) => {\n        if (ignore && element !== root && element.matches(ignore)) return\n        Context.apply(depth)\n\n        // Extract geometric and style data from element\n        const style = window.getComputedStyle(element)\n        const matrix = element !== root && parseTransform(style.getPropertyValue('transform'))\n        const opacity = style.getPropertyValue('opacity')\n        const clipPath = style.getPropertyValue('clip-path')\n        const overflow = style.getPropertyValue('overflow')\n\n        // Temporarily remove transformation to simplify coordinates calc\n        if (matrix) {\n          // WARNING this will cause issues with concurent renderings:\n          // <renderer>#cleanup is called before to ensure purity\n          detransformed.set(element, element.style.transform)\n          element.style.transform = 'none'\n        }\n\n        const { x, y, width, height } = element.getBoundingClientRect()\n\n        // Create a new context\n        if (\n          +opacity !== 1 ||\n          matrix ||\n          overflow === 'hidden' ||\n          clipPath !== 'none'\n        ) Context.push()\n\n        // Handle opacity\n        if (+opacity !== 1) {\n          Context.current.setAttribute('opacity', opacity)\n        }\n\n        // Handle transformation\n        if (matrix) {\n          Context.current.setAttribute('transform', matrix.toSVGTransform({\n            x: x - viewBox.x,\n            y: y - viewBox.y,\n            origin: style.getPropertyValue('transform-origin')\n              .split(' ')\n              .map(v => parseFloat(v))\n          }))\n        }\n\n        // Handle overflow: hidden\n        if (overflow === 'hidden') {\n          const clipPath = $('clipPath', { id: 'clip_' + uid() }, defs, [\n            $('rect', {\n              x: x - viewBox.x,\n              y: y - viewBox.y,\n              width,\n              height\n            })\n          ])\n\n          Context.current.setAttribute('clip-path', `url(#${clipPath.id})`)\n        }\n\n        // Handle CSS clip-path property\n        if (clipPath !== 'none') {\n          // WARNING: CSS clip-path implementation is not done yet on arnaudjuracek/svg-to-pdf\n          Context.current.setAttribute('style', `clip-path: ${clipPath.replace(/\"/g, \"'\")}`)\n        }\n\n        // Render element\n        const render = renderers[element.tagName] ?? renderers.div\n        let rendered = await render(element, {\n          x: x - viewBox.x,\n          y: y - viewBox.y,\n          width,\n          height,\n          style,\n          viewBox,\n          defs\n        }, options)\n\n        if (transform) rendered = await transform(element, rendered)\n        if (rendered) Context.current.appendChild(rendered)\n\n        // Render text nodes inside the element\n        const g = $('g', { class: 'text' })\n        for (const { rect, fragment } of getTextFragments(element) ?? []) {\n          try {\n            let text = await renderers.text(fragment.textContent.trimEnd(), {\n              x: rect.x - viewBox.x,\n              y: rect.y - viewBox.y,\n              width: rect.width,\n              height: rect.height,\n              style\n            }, options)\n\n            if (transform) text = await transform(element, text)\n            if (text) g.appendChild(text)\n          } catch (error) {\n            // TODO[improve] error handling\n            console.warn(new Error(`Rendering failed for the following text: '${fragment.textContent}'`, { cause: error }))\n            console.warn(error)\n          }\n        }\n\n        if (g.children.length) Context.current.appendChild(g)\n      }, {\n        sort: (a, b) => {\n          a.zIndex ??= getZIndex(a)\n          b.zIndex ??= getZIndex(b)\n          return a.zIndex - b.zIndex\n        }\n      })\n\n      cleanup()\n      return svg\n    }\n  }\n}\n"],"names":["walk","element","callback","sort","depth","index","children","Array","from","length","el","zindex","window","getComputedStyle","getPropertyValue","parseInt","node","text","innerText","textContent","range","document","createRange","rects","i","_rects$index","setStart","setEnd","clientRects","getClientRects","rect","charAt","map","fragment","DocumentFragment","childNodes","fragments","nodeType","Node","TEXT_NODE","test","splitText","concat","value","matrix","Transform","fromString","translate","scale","rotation","decomposeTSR","raw","toSVGTransform","x","y","origin","_translate$tx","_translate$ty","_scale$sx","_ref","_scale$sy","_rotation$angle","cx","cy","toString","compose","tx","ty","sx","sy","rotate","angle","arr","name","props","parent","NS","createElementNS","setAttributeNS","key","undefined","setAttribute","appendChild","child","debug","fonts","width","height","style","$","href","toDataURL","kebabToCamel","s","replace","toUpperCase","isTransparent","color","startsWith","rgba","match","parseBorders","borders","dir","_borders","isNaN","defs","_style$getPropertyVal","_style$getPropertyVal2","_parseInt","backgroundColor","backgroundImage","boxShadow","borderRadius","g","fill","rx","_parseGradient$","_parseGradient","colorStops","orientation","type","parseGradient","gradient","id","uid","gradientUnits","gradientTransform","parseFloat","colorStop","stop","offset","filter","REGEX_SHADOW_DECLARATION","REGEX_SHADOW_DECLARATION_PARSER","shadowString","_boxShadow$match","offx","offy","blur","spread","stdDeviation","shadow","prepend","border","Object","entries","geom","x1","x2","y1","y2","_extends","stroke","join","top","src","SpanRenderer","viewBox","options","renderSpan","renderDiv","DivRenderer","_getTextFragments","getTextFragments","rendered","cache","rasterizeNestedSVG","image","querySelectorAll","getAttribute","has","blob","Promise","resolve","request","XMLHttpRequest","open","responseType","onload","response","send","dataURL","reader","FileReader","e","target","result","readAsDataURL","set","get","btoa","XMLSerializer","serializeToString","svg","viewbox","innerHTML","matchFont","family","weight","_s$getPropertyValue","_s$getPropertyValue2","_s$getPropertyValue3","string","class","font","find","Error","unitsPerEm","opentype","ascender","tables","hhea","descender","letterSpacing","fontSize","lineBox","leading","Math","abs","line","ls","c","d","getPath","toPathData","getAdvanceWidth","features","liga","rlig","title","v","ignore","Map","detransformed","renderers","k","RENDERERS","cleanup","transform","delete","preload","Opentype","load","url","error","destroy","clear","render","root","getBoundingClientRect","preserveAspectRatio","Context","stack","pop","push","lastOf","current","apply","deltaDepth","_renderers$element$ta","matches","parseTransform","opacity","clipPath","overflow","split","tagName","div","trimEnd","console","warn","cause","a","b","_a$zIndex","_b$zIndex","zIndex","getZIndex"],"mappings":"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"}