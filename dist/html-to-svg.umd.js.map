{"version":3,"file":"html-to-svg.umd.js","sources":["../src/utils/dom-walk.js","../src/utils/dom-get-zindex.js","../src/utils/range-get-client-rects.js","../src/utils/dom-get-text-fragments.js","../src/utils/parse-transform.js","../src/utils/array-last.js","../src/utils/dom-render-svg.js","../src/renderers/canvas.js","../src/renderers/image.js","../src/renderers/div.js","../src/renderers/span.js","../src/renderers/svg.js","../src/renderers/text.js","../src/index.js"],"sourcesContent":["async function walk (element, callback, { sort = () => 1 } = {}, depth = 0, index = 0) {\n  await callback(element, depth, index)\n\n  const children = Array.from(element.children).sort(sort)\n  for (let index = 0; index < children.length; index++) {\n    await walk(children[index], callback, { sort }, depth + 1, index)\n  }\n}\n\nexport default walk\n","export default el => {\n  const zindex = window.getComputedStyle(el).getPropertyValue('z-index')\n  return zindex === 'auto' ? 0 : parseInt(zindex ?? 0)\n}\n","/* global DocumentFragment */\n\n// Return Range.clientRects with their corresponding DocumentFragment\nexport default function (node, text = node.innerText || node.textContent) {\n  const range = document.createRange()\n\n  const rects = []\n  for (let i = 0; i < node.length; i++) {\n    range.setStart(node, 0)\n    range.setEnd(node, (i + 1))\n\n    const clientRects = range.getClientRects()\n\n    const index = clientRects.length - 1\n    rects[index] = rects[index] ?? { text: '' }\n    rects[index].rect = clientRects[index]\n    rects[index].text += text.charAt(i)\n  }\n\n  return rects.map(rect => {\n    rect.fragment = new DocumentFragment()\n    rect.fragment.textContent = rect.text\n    return rect\n  })\n}\n","/* global Node */\nimport getClientRects from './range-get-client-rects'\n\nexport default function (element) {\n  if (!element) return\n  if (!element.innerText) return\n  if (!element.childNodes.length) return\n\n  let fragments = []\n\n  for (const node of element.childNodes) {\n    if (node.nodeType !== Node.TEXT_NODE) continue\n    if (!node.textContent.length) continue\n\n    // Text interface does not provide a .innerText method, which would be\n    // more appropriate than textContent as it skips non-rendered whitespaces\n    // Splitting white-space leading Text trick the browser to recompute\n    // the layout itself, dealing with implicit space between adjacent nodes\n    if (/^\\s/.test(node.textContent)) node.splitText(1)\n\n    fragments = fragments.concat(getClientRects(node))\n  }\n\n  return fragments\n}\n","import * as Transform from 'transformation-matrix'\n\nexport default function (value) {\n  if (!value || value === 'none' || value === '') return null\n\n  const matrix = Transform.fromString(value)\n  const { translate, scale, rotation } = Transform.decomposeTSR(matrix)\n\n  return {\n    raw: value,\n    translate,\n    scale,\n    rotation,\n    toSVGTransform: ({ x = 0, y = 0, origin = [0, 0] } = {}) => {\n      const cx = x + origin[0]\n      const cy = y + origin[1]\n\n      return Transform.toString(\n        Transform.compose(\n          Transform.translate(translate?.tx ?? 0, translate?.ty ?? 0),\n          Transform.scale(scale?.sx ?? 1, scale?.sy ?? scale?.sx ?? 1, cx, cy),\n          Transform.rotate(rotation?.angle ?? 0, cx, cy)\n        )\n      )\n    }\n  }\n}\n","export default arr => arr[arr.length - 1]\n","export default function (name, props = {}, parent, children = []) {\n  const NS = 'http://www.w3.org/2000/svg'\n\n  const element = document.createElementNS(NS, name)\n  if (name === 'svg') element.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns', NS)\n  for (const key in props) {\n    if (props[key] === null || props[key] === undefined) continue\n    element.setAttribute(key, props[key])\n  }\n\n  if (parent) parent.appendChild(element)\n\n  for (const child of children ?? []) element.appendChild(child)\n  return element\n}\n","import $ from '../utils/dom-render-svg'\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => $('image', {\n  x,\n  y,\n  width,\n  height,\n  href: element.toDataURL('image/png')\n})\n","import $ from '../utils/dom-render-svg'\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => {\n  if (!width || !height) return\n  if (!element.src) return\n\n  return $('image', {\n    x,\n    y,\n    width,\n    height,\n    href: element.src\n  })\n}\n","// TODO[refactor] split into smaller functions\n\nimport $ from '../utils/dom-render-svg'\nimport { parse as parseGradient } from 'gradient-parser'\nimport { uid } from 'uid'\n\nimport ImageRenderer from './image'\n\nconst kebabToCamel = s => s.replace(/-./g, x => x[1].toUpperCase())\n\nfunction isTransparent (color) {\n  if (!color || color === 'none' || color === 'transparent') return true\n\n  if (color.startsWith('rgba')) {\n    const rgba = color.match(/[\\d.]+/g)\n    if (rgba[3] === '0') return true\n  }\n\n  return false\n}\n\nfunction parseBorders (s) {\n  let borders = null\n\n  for (const dir of ['top', 'right', 'bottom', 'left']) {\n    const color = s.getPropertyValue(`border-${dir}-color`)\n    const width = parseInt(s.getPropertyValue(`border-${dir}-width`))\n    const style = s.getPropertyValue(`border-${dir}-style`)\n\n    // Skip invisible\n    if (isTransparent(color)) continue\n    if (!width || isNaN(width)) continue\n    if (style === 'none' || style === 'hidden') continue\n\n    borders ??= {}\n    borders[dir] = { color, width, style }\n  }\n\n  return borders\n}\n\nasync function getImageSize (url) {\n  return new Promise(resolve => {\n    const image = new Image()\n    image.onload = () => resolve({ width: image.width, height: image.height })\n    image.src = url\n  })\n}\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style, defs }) => {\n  if (!width || !height) return\n\n  const backgroundColor = style.getPropertyValue('background-color')\n  const backgroundImage = style.getPropertyValue('background-image') ?? 'none'\n  const boxShadow = style.getPropertyValue('box-shadow') ?? 'none'\n  const borderRadius = parseInt(style.getPropertyValue('border-radius')) ?? null\n  const borders = parseBorders(style)\n\n  // Skip visually empty blocks\n  if (isTransparent(backgroundColor) && isTransparent(backgroundImage) && !borders) return\n\n  // Render initial rect\n  const g = $('g')\n  const rect = $('rect', {\n    x,\n    y,\n    width,\n    height,\n    fill: backgroundColor,\n    rx: borderRadius\n  }, g)\n\n  // Render background-image\n  if (!isTransparent(backgroundImage)) {\n    const url = (backgroundImage.match(/url\\(\"?(.*?)\"?\\)/) ?? [])[1]\n\n    // Render background-image\n    if (url) {\n      const backgroundSize = style.getPropertyValue('background-size')\n      const renderImage = ImageRenderer({ debug, fonts })\n      // TODO handle background-size\n      // TODO handle background-repeat\n      const size = await getImageSize(url)\n      const image = await renderImage({ src: url }, {\n        x,\n        y,\n        width: Math.max(width, size.width),\n        height: Math.max(height, size.height)\n      })\n      const clipPath = $('clipPath', { id: 'clip_' + uid() }, defs, [$('rect', { x, y, width, height })])\n      image.setAttribute('clip-path', `url(#${clipPath.id})`)\n      g.appendChild(image)\n    } else {\n      // TODO handle multiple gradients\n      const {\n        colorStops,\n        orientation,\n        type\n      } = parseGradient(backgroundImage)?.[0] ?? {}\n\n      // TODO handle repeating gradients type, SEE https://github.com/rafaelcaricio/gradient-parser?tab=readme-ov-file#ast\n      const gradient = $(kebabToCamel(type), {\n        id: 'gradient_' + uid(),\n        gradientUnits: 'objectBoundingBox', // Allow specifying rotation center in %\n        gradientTransform: orientation\n          ? (() => {\n              switch (orientation.type) {\n                case 'angular': return `rotate(${270 + parseFloat(orientation.value)}, 0.5, 0.5)`\n                case 'directional': {\n                  switch (orientation.value) {\n                    case 'top': return 'rotate(270, 0.5, 0.5)'\n                    case 'right': return null\n                    case 'bottom': return 'rotate(90, 0.5, 0.5)'\n                    case 'left': return 'rotate(180, 0.5, 0.5)'\n                  }\n                }\n              }\n            })()\n          : 'rotate(90, 0.5, 0.5)'\n      }, defs)\n\n      // Add color stops\n      for (let index = 0; index < colorStops.length; index++) {\n        const colorStop = colorStops[index]\n        const stop = $('stop', {\n          offset: colorStop.length\n            // TODO handle colorStop.length.type other than '%'\n            ? +colorStop.length.value / 100\n            : index / (colorStops.length - 1),\n          'stop-color': `${colorStop.type}(${colorStop.value})`\n        })\n\n        gradient.appendChild(stop)\n      }\n\n      rect.setAttribute('fill', `url(#${gradient.id})`)\n    }\n  }\n\n  // Render box shadow\n  if (boxShadow !== 'none') {\n    const filter = $('filter', { id: 'filter_' + uid() }, defs)\n    // This assumes browser consistency of the CSSStyleDeclaration.getPropertyValue returned string\n    const REGEX_SHADOW_DECLARATION = /rgba?\\(([\\d.]{1,3}(,\\s)?){3,4}\\)\\s(-?(\\d+)px\\s?){4}/g\n    const REGEX_SHADOW_DECLARATION_PARSER = /(rgba?\\((?:[\\d.]{1,3}(?:,\\s)?){3,4}\\))\\s(-?[\\d.]+)px\\s(-?[\\d.]+)px\\s(-?[\\d.]+)px\\s(-?[\\d.]+)px/\n\n    for (const shadowString of boxShadow.match(REGEX_SHADOW_DECLARATION) ?? []) {\n      let [\n        ,\n        color,\n        offx,\n        offy,\n        blur,\n        spread\n      ] = shadowString.match(REGEX_SHADOW_DECLARATION_PARSER)\n\n      offx = parseInt(offx)\n      offy = parseInt(offy)\n      spread = parseInt(spread)\n\n      filter.appendChild($('feGaussianBlur', { stdDeviation: blur / 2 }))\n\n      const shadow = $('rect', {\n        x: x + offx - spread,\n        y: y + offy - spread,\n        width: width + spread * 2,\n        height: height + spread * 2,\n        fill: color,\n        rx: borderRadius,\n        filter: `url(#${filter.id})`\n      })\n\n      g.prepend(shadow)\n    }\n  }\n\n  // Render border\n  if (!borderRadius) {\n    for (const [dir, border] of Object.entries(borders ?? {})) {\n      const geom = {}\n      switch (dir) {\n        case 'top':\n          geom.x1 = x\n          geom.x2 = x + width\n          geom.y1 = geom.y2 = y + parseInt(border.width) / 2\n          break\n\n        case 'right':\n          geom.x1 = geom.x2 = x + width - parseInt(border.width) / 2\n          geom.y1 = y\n          geom.y2 = y + height\n          break\n\n        case 'bottom':\n          geom.x1 = x\n          geom.x2 = x + width\n          geom.y1 = geom.y2 = y + height - parseInt(border.width) / 2\n          break\n\n        case 'left':\n          geom.x1 = geom.x2 = x + parseInt(border.width) / 2\n          geom.y1 = y\n          geom.y2 = y + height\n          break\n      }\n\n      $('line', {\n        ...geom,\n        stroke: border.color,\n        'stroke-width': border.width,\n        ...(() => {\n          switch (border.style) {\n            case 'dotted': return {\n              'stroke-dasharray': [0, border.width * 2].join(' '),\n              'stroke-dashoffset': 1,\n              'stroke-linejoin': 'round',\n              'stroke-linecap': 'round'\n            }\n\n            case 'dashed': return {\n              // https://developer.mozilla.org/en-US/docs/Web/CSS/border-style#dashed\n              'stroke-dasharray': [border.width * 2, 4].join(' ')\n            }\n\n            default: return {}\n          }\n        })()\n      }, g)\n    }\n  } else if (borders?.top) {\n    // Handle border-radius by drawing the whole border as a standard stroke\n    // TODO handle border-radius for specific border-dir.\n    // For now, we use borders.top as a placeholder for all borders\n    rect.setAttribute('stroke', borders.top.color)\n    rect.setAttribute('stroke-width', borders.top.width)\n\n    // Draw border from center\n    rect.setAttribute('rx', borderRadius - borders.top.width / 2)\n    rect.setAttribute('x', x + borders.top.width / 2)\n    rect.setAttribute('y', y + borders.top.width / 2)\n    rect.setAttribute('width', width - borders.top.width)\n    rect.setAttribute('height', height - borders.top.width)\n  }\n\n  return g\n}\n","import $ from '../utils/dom-render-svg'\nimport getTextFragments from '../utils/dom-get-text-fragments'\n\nimport DivRenderer from './div'\n\nconst SpanRenderer = ({ debug, fonts }) => async (element, { x, y, width, height, style, viewBox }, options) => {\n  const g = $('g', null)\n\n  // Render every child node as a span\n  const renderSpan = SpanRenderer({ debug, fonts })\n  for (const node of element.childNodes) {\n    g.appendChild(await renderSpan(node, { x, y, width, height, style, viewBox }, options))\n  }\n\n  // Render every text fragment using the div renderer (background etc)\n  const renderDiv = DivRenderer({ debug, fonts })\n  for (const { rect } of getTextFragments(element) ?? []) {\n    const rendered = await renderDiv(element, {\n      x: rect.x - viewBox.x,\n      y: rect.y - viewBox.y,\n      width: rect.width,\n      height: rect.height,\n      style,\n      viewBox\n    }, options)\n\n    if (rendered) g.appendChild(rendered)\n  }\n\n  return g\n}\n\nexport default SpanRenderer\n","/* global FileReader, XMLSerializer, btoa, XMLHttpRequest */\nimport $ from '../utils/dom-render-svg'\n\nexport default ({ cache }) => async (element, { x, y, width, height, style }, {\n  rasterizeNestedSVG = true\n} = {}) => {\n  // Convert all image to dataURL to maximizime compatibility\n  for (const image of element.querySelectorAll('image[href]')) {\n    const src = image.getAttribute('href')\n\n    if (!cache.has(src)) {\n      // Fetch blob from image src\n      const blob = await new Promise(resolve => {\n        const request = new XMLHttpRequest()\n        request.open('GET', src, true)\n        request.responseType = 'blob'\n        request.onload = () => resolve(request.response)\n        request.send()\n      })\n\n      // Convert blob to dataURL using the FileReader API\n      const dataURL = await new Promise(resolve => {\n        const reader = new FileReader()\n        reader.onload = e => resolve(e.target.result)\n        reader.readAsDataURL(blob)\n      })\n\n      // Cache dataURL\n      cache.set(src, dataURL)\n    }\n\n    image.setAttribute('href', cache.get(src))\n  }\n\n  return rasterizeNestedSVG\n    ? $('image', {\n      x,\n      y,\n      width,\n      height,\n      href: 'data:image/svg+xml;base64,' + btoa(new XMLSerializer().serializeToString(element))\n    })\n    : (() => {\n        const svg = $('svg', {\n          x,\n          y,\n          width,\n          height,\n          viewbox: `0 0 ${width} ${height}`\n        })\n\n        svg.innerHTML = element.innerHTML\n        return svg\n      })()\n}\n","// TODO text-decoration\n\nimport $ from '../utils/dom-render-svg'\n\nconst matchFont = s => ({ family, style = 'normal', weight = '400' } = {}) =>\n  family === (s.getPropertyValue('font-family') ?? '').replace(/['\"]/g, '') &&\n    style === (s.getPropertyValue('font-style') ?? 'normal') &&\n    weight === (s.getPropertyValue('font-weight') ?? '400')\n\nexport default ({ debug, fonts }) => async (string, { x, y, width, height, style }, {\n  splitText = false\n}) => {\n  if (!string) return\n\n  const g = $('g', { class: 'text-fragment' })\n\n  // Find font\n  const font = fonts.find(matchFont(style))\n  if (!font) throw new Error(`Cannot find font '${style.getPropertyValue('font-family')} ${style.getPropertyValue('font-style')} ${style.getPropertyValue('font-weight')}'`)\n\n  // Extract font metrics\n  const { unitsPerEm } = font.opentype\n  const ascender = font.opentype.tables.hhea.ascender\n  const descender = font.opentype.tables.hhea.descender\n\n  // Extract CSS props\n  const letterSpacing = style.getPropertyValue('letter-spacing')\n  const fontSize = parseFloat(style.getPropertyValue('font-size'))\n\n  // Compute metrics\n  const lineBox = (ascender - descender) / unitsPerEm\n  const leading = (fontSize * lineBox) - Math.abs(descender / unitsPerEm) * fontSize\n\n  // Render various metrics for debug\n  line('start', 0, { orientation: 'vertical', stroke: 'red' })\n  line('end', width, { orientation: 'vertical', stroke: 'red' })\n  line('leading', leading, { stroke: '#4b96ff' })\n\n  if (letterSpacing !== 'normal' || splitText) {\n    const ls = letterSpacing === 'normal' ? 0 : parseFloat(letterSpacing)\n\n    // Render letter by letter in case of non-default letter-spacing or explicit split\n    for (const c of string) {\n      if (!c.match(/\\s/)) { // Do not render spaces\n        $('path', {\n          d: font.opentype.getPath(c, x, y + leading, fontSize).toPathData(3),\n          fill: style.getPropertyValue('color')\n        }, g)\n      }\n\n      x += font.opentype.getAdvanceWidth(c, fontSize) + ls\n    }\n  } else {\n    // Render string\n    $('path', {\n      d: font.opentype.getPath(string, x, y + leading, fontSize, {\n        features: {\n          // TODO extract from CSS props\n          liga: true,\n          rlig: true\n        }\n      }).toPathData(3),\n      fill: style.getPropertyValue('color')\n    }, g)\n  }\n\n  return g\n\n  function line (title, v, { orientation = 'horizontal', stroke = 'black' } = {}) {\n    return debug && $('line', {\n      title,\n      'data-value': v,\n      x1: orientation === 'horizontal' ? x : x + v,\n      x2: orientation === 'horizontal' ? x + width : x + v,\n      y1: orientation === 'horizontal' ? y + v : y,\n      y2: orientation === 'horizontal' ? y + v : y + height,\n      stroke,\n      class: 'debug'\n    }, g)\n  }\n}\n","import Opentype from 'opentype.js'\nimport { uid } from 'uid'\n\nimport walk from './utils/dom-walk'\nimport getZIndex from './utils/dom-get-zindex'\nimport getTextFragments from './utils/dom-get-text-fragments'\nimport parseTransform from './utils/parse-transform'\nimport lastOf from './utils/array-last'\n\nimport $ from './utils/dom-render-svg'\nimport * as RENDERERS from './renderers'\n\nexport default function ({\n  debug = false,\n  ignore = '',\n  fonts = []\n} = {}) {\n  const cache = new Map()\n  const detransformed = new Map()\n\n  // Init curried renderers\n  const renderers = {}\n  for (const k in RENDERERS) {\n    renderers[k] = RENDERERS[k]({ debug, fonts, cache })\n  }\n\n  // Restore all removed transformation if any\n  const cleanup = () => {\n    for (const [element, transform] of detransformed) {\n      element.style.transform = transform\n      detransformed.delete(element)\n    }\n  }\n\n  return {\n    get cache () { return cache },\n    cleanup,\n\n    // Preload all fonts before resolving\n    preload: async function () {\n      for (const font of fonts) {\n        if (font.opentype) continue\n        font.opentype = await new Promise(resolve => {\n          Opentype.load(font.url, (error, font) => {\n            if (error) throw error\n            resolve(font)\n          })\n        })\n      }\n    },\n\n    // Clear cache and delete all resources\n    destroy: function () {\n      cache.clear()\n      cleanup()\n      for (const font of fonts) delete font.opentype\n    },\n\n    // Render the HTML container as a shadow SVG\n    render: async function (root, options = {}, transform) {\n      cleanup()\n      const viewBox = root.getBoundingClientRect()\n\n      // Create the SVG container\n      const svg = $('svg', {\n        viewBox: `0 0 ${viewBox.width} ${viewBox.height}`,\n        width: viewBox.width,\n        height: viewBox.height,\n        preserveAspectRatio: 'none'\n      })\n\n      const defs = $('defs', null, svg)\n\n      // Set context to root SVG.\n      // Context will change during walk push/pop\n      const Context = (() => {\n        const stack = [svg]\n        const pop = () => stack.length > 0 && stack.pop()\n        const push = () => stack.push($('g', null, lastOf(stack)))\n        return {\n          pop,\n          push,\n          get current () { return lastOf(stack) },\n          apply: depth => {\n            const deltaDepth = depth - (stack.length - 1)\n            for (let i = 0; i < -deltaDepth; i++) pop()\n            for (let i = 0; i < deltaDepth; i++) push()\n          }\n        }\n      })()\n\n      // Render every children\n      await walk(root, async (element, depth, index) => {\n        if (ignore && element !== root && element.matches(ignore)) return\n        Context.apply(depth)\n\n        // Extract geometric and style data from element\n        const style = window.getComputedStyle(element)\n        const matrix = element !== root && parseTransform(style.getPropertyValue('transform'))\n        const opacity = style.getPropertyValue('opacity')\n        const mixBlendMode = style.getPropertyValue('mix-blend-mode')\n        const clipPath = style.getPropertyValue('clip-path')\n        const overflow = style.getPropertyValue('overflow')\n\n        // Temporarily remove transformation to simplify coordinates calc\n        if (matrix) {\n          // WARNING this will cause issues with concurent renderings:\n          // <renderer>#cleanup is called before to ensure purity\n          detransformed.set(element, element.style.transform)\n          element.style.transform = 'none'\n        }\n\n        const { x, y, width, height } = element.getBoundingClientRect()\n\n        // Create a new context\n        if (\n          +opacity !== 1 ||\n          matrix ||\n          mixBlendMode !== 'normal' ||\n          overflow === 'hidden' ||\n          clipPath !== 'none'\n        ) Context.push()\n\n        // Handle opacity\n        if (+opacity !== 1) {\n          Context.current.setAttribute('opacity', opacity)\n        }\n\n        // Handle mix-blend-mode\n        if (mixBlendMode !== 'normal') {\n          Context.current.style.mixBlendMode = mixBlendMode\n        }\n\n        // Handle transformation\n        if (matrix) {\n          Context.current.setAttribute('transform', matrix.toSVGTransform({\n            x: x - viewBox.x,\n            y: y - viewBox.y,\n            origin: style.getPropertyValue('transform-origin')\n              .split(' ')\n              .map(v => parseFloat(v))\n          }))\n        }\n\n        // Handle overflow: hidden\n        if (overflow === 'hidden') {\n          const clipPath = $('clipPath', { id: 'clip_' + uid() }, defs, [\n            $('rect', {\n              x: x - viewBox.x,\n              y: y - viewBox.y,\n              width,\n              height\n            })\n          ])\n\n          Context.current.setAttribute('clip-path', `url(#${clipPath.id})`)\n        }\n\n        // Handle CSS clip-path property\n        if (clipPath !== 'none') {\n          // WARNING: CSS clip-path implementation is not done yet on arnaudjuracek/svg-to-pdf\n          Context.current.setAttribute('style', `clip-path: ${clipPath.replace(/\"/g, \"'\")}`)\n        }\n\n        // Render element\n        const render = renderers[element.tagName] ?? renderers.div\n        let rendered = await render(element, {\n          x: x - viewBox.x,\n          y: y - viewBox.y,\n          width,\n          height,\n          style,\n          viewBox,\n          defs\n        }, options)\n\n        if (transform) rendered = await transform(element, rendered)\n        if (rendered) Context.current.appendChild(rendered)\n\n        // Render text nodes inside the element\n        const g = $('g', { class: 'text' })\n        for (const { rect, fragment } of getTextFragments(element) ?? []) {\n          try {\n            let text = await renderers.text(fragment.textContent.trimEnd(), {\n              x: rect.x - viewBox.x,\n              y: rect.y - viewBox.y,\n              width: rect.width,\n              height: rect.height,\n              style\n            }, options)\n\n            if (transform) text = await transform(element, text)\n            if (text) g.appendChild(text)\n          } catch (error) {\n            // TODO[improve] error handling\n            console.warn(new Error(`Rendering failed for the following text: '${fragment.textContent}'`, { cause: error }))\n            console.warn(error)\n          }\n        }\n\n        if (g.children.length) Context.current.appendChild(g)\n      }, {\n        sort: (a, b) => {\n          a.zIndex ??= getZIndex(a)\n          b.zIndex ??= getZIndex(b)\n          return a.zIndex - b.zIndex\n        }\n      })\n\n      cleanup()\n      return svg\n    }\n  }\n}\n"],"names":["_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","walk","element","callback","_temp2","depth","index","_ref","_ref$sort","sort","Promise","resolve","children","Array","from","_temp","_forTo","e","reject","prototype","onFulfilled","onRejected","result","_this","_isSettledPact","thenable","array","body","check","i","_cycle","length","el","zindex","window","getComputedStyle","getPropertyValue","parseInt","node","text","innerText","textContent","range","document","createRange","rects","_rects$index","setStart","setEnd","clientRects","getClientRects","rect","charAt","map","fragment","DocumentFragment","childNodes","fragments","_iterator","_createForOfIteratorHelperLoose","_step","done","nodeType","Node","TEXT_NODE","test","splitText","concat","matrix","Transform","fromString","_Transform$decomposeT","decomposeTSR","translate","scale","rotation","raw","toSVGTransform","_translate$tx","_translate$ty","_scale$sx","_ref2","_scale$sy","_rotation$angle","_ref$x","x","_ref$y","y","_ref$origin","origin","cx","cy","toString","compose","tx","ty","sx","sy","rotate","angle","arr","name","props","parent","NS","createElementNS","setAttributeNS","key","undefined","setAttribute","appendChild","_children","child","width","height","$","href","toDataURL","src","getImageSize","url","image","Image","onload","kebabToCamel","replace","toUpperCase","isTransparent","color","startsWith","rgba","match","parseBorders","borders","_i","_arr","_borders","dir","style","isNaN","debug","fonts","defs","_style$getPropertyVal","_style$getPropertyVal2","_parseInt","_temp3","boxShadow","filter","id","uid","REGEX_SHADOW_DECLARATION","REGEX_SHADOW_DECLARATION_PARSER","_boxShadow$match","shadowString","_shadowString$match","offx","offy","blur","spread","stdDeviation","shadow","fill","rx","borderRadius","g","prepend","_loop","_Object$entries$_i","_Object$entries","_i2","border","geom","x1","x2","y1","y2","_extends","stroke","join","Object","entries","top","backgroundColor","backgroundImage","_backgroundImage$matc","backgroundSize","renderImage","ImageRenderer","size","Math","max","clipPath","_parseGradient$","_parseGradient","_ref3","parseGradient","colorStops","orientation","type","gradient","gradientUnits","gradientTransform","parseFloat","colorStop","stop","offset","_iteratorSymbol","Symbol","iterator","SpanRenderer","options","viewBox","_getTextFragments","renderDiv","DivRenderer","_forOf","getTextFragments","rendered","renderSpan","_appendChild","_renderSpan","call","target","step","next","return","_fixup","TypeError","values","push","cache","_temp5","_ref3$rasterizeNested","rasterizeNestedSVG","_temp4","btoa","XMLSerializer","serializeToString","svg","viewbox","innerHTML","querySelectorAll","get","getAttribute","has","request","XMLHttpRequest","open","responseType","response","send","blob","reader","FileReader","readAsDataURL","dataURL","set","matchFont","_s$getPropertyValue","_s$getPropertyValue2","_s$getPropertyValue3","family","_ref$style","_ref$weight","weight","string","_ref4","_ref4$splitText","line","title","_ref5","_ref5$orientation","_ref5$stroke","font","find","Error","unitsPerEm","opentype","ascender","tables","hhea","descender","letterSpacing","fontSize","lineBox","leading","abs","ls","c","d","getPath","toPathData","getAdvanceWidth","features","liga","rlig","_catch","recover","_ref$debug","_ref$ignore","ignore","_ref$fonts","Map","detransformed","renderers","k","RENDERERS","cleanup","_step$value","transform","preload","Opentype","load","error","_Promise","destroy","clear","_iterator2","_step2","render","root","getBoundingClientRect","preserveAspectRatio","Context","stack","pop","lastOf","current","apply","deltaDepth","_renderers$element$ta","matches","parseTransform","opacity","mixBlendMode","overflow","_element$getBoundingC","split","tagName","div","_temp9","_temp7","_temp6","trimEnd","_transform2","console","warn","cause","_temp8","_transform","a","b","_a$zIndex","_b$zIndex","zIndex","getZIndex"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuCO,SAAAA,UAAiBC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE;EAC3C,EAAA,IAAI,CAACF,IAAI,CAACG,CAAC,EAAE;MACZ,IAAID,KAAK,YAAAE,OAAiB,EAAE;QAC3B,IAAIF,KAAK,CAACC,CAAC,EAAE;UACZ,IAAIF,KAAK,GAAG,CAAC,EAAE;YACdA,KAAK,GAAGC,KAAK,CAACC,CAAC,CAAA;EAChB,SAAA;UACAD,KAAK,GAAGA,KAAK,CAACG,CAAC,CAAA;EAChB,OAAC,MAAM;EACNH,QAAAA,KAAK,CAACI,CAAC,GAAGP,SAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAEC,KAAK,CAAC,CAAA;EACzC,QAAA,OAAA;EACD,OAAA;EACD,KAAA;EACA,IAAA,IAAIC,KAAK,IAAIA,KAAK,CAACM,IAAI,EAAE;QACxBN,KAAK,CAACM,IAAI,CAACT,SAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAEC,KAAK,CAAC,EAAEF,SAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;EACxE,MAAA,OAAA;EACD,KAAA;MACAA,IAAI,CAACG,CAAC,GAAGF,KAAK,CAAA;MACdD,IAAI,CAACK,CAAC,GAAGH,KAAK,CAAA;EACd,IAAA,IAAMO,QAAQ,GAAGT,IAAI,CAACM,CAAC,CAAA;EACvB,IAAA,IAAIG,QAAQ,EAAE;QACbA,QAAQ,CAACT,IAAI,CAAC,CAAA;EACf,KAAA;EACD,GAAA;EACD,CAAA;EAAC,IA/DcU,IAAI,GAAA,SAAJA,IAAIA,CAAEC,OAAO,EAAEC,QAAQ,EAAAC,MAAA,EAA2BC,KAAK,EAAMC,KAAK,EAAA;EAAA,EAAA,IAAAC,IAAA,GAAAH,MAAA,cAApB,EAAE,GAAAA,MAAA;MAAAI,SAAA,GAAAD,IAAA,CAArBE,IAAI;MAAJA,IAAI,GAAAD,SAAA,KAAG,KAAA,CAAA,GAAA,YAAA;EAAA,MAAA,OAAM,CAAC,CAAA;EAAA,KAAA,GAAAA,SAAA,CAAA;EAAA,EAAA,IAASH,KAAK,KAAA,KAAA,CAAA,EAAA;EAALA,IAAAA,KAAK,GAAG,CAAC,CAAA;EAAA,GAAA;EAAA,EAAA,IAAEC,KAAK,KAAA,KAAA,CAAA,EAAA;EAALA,IAAAA,KAAK,GAAG,CAAC,CAAA;EAAA,GAAA;IAAA,IAAE;EAAA,IAAA,OAAAI,OAAA,CAAAC,OAAA,CAC/ER,QAAQ,CAACD,OAAO,EAAEG,KAAK,EAAEC,KAAK,CAAC,EAAAP,IAAA,CAAA,YAAA;EAErC,MAAA,IAAMa,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACZ,OAAO,CAACU,QAAQ,CAAC,CAACH,IAAI,CAACA,IAAI,CAAC,CAAA;EAAA,MAAA,IAAAM,KAAA,GAAAC,QAAA,CAC5BJ,QAAQ,EAAA,UAA3BN,KAAK,EAAwC;EAAA,QAAA,OAAAI,OAAA,CAAAC,OAAA,CAC9CV,IAAI,CAACW,QAAQ,CAACN,KAAK,CAAC,EAAEH,QAAQ,EAAE;EAAEM,UAAAA,IAAI,EAAJA,IAAAA;WAAM,EAAEJ,KAAK,GAAG,CAAC,EAAEC,KAAK,CAAC,EAAAP,IAAA,CAAA,YAAA,EAAA,CAAA,CAAA;SAClE,CAAA,CAAA;QAAA,IAAAgB,KAAA,IAAAA,KAAA,CAAAhB,IAAA,EAAAgB,OAAAA,KAAA,CAAAhB,IAAA,CAAA,YAAA,EAAA,CAAA,CAAA;EAAA,KAAA,CAAA,CAAA;EACH,GAAC,QAAAkB,CAAA,EAAA;EAAA,IAAA,OAAAP,OAAA,CAAAQ,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,GAAA;EAAA,CAAA,CAAA;EANM,MAAMtB,OAAA,gBAAsB,YAAW;IAC7C,SAAAA,KAAAA,GAAiB,EAAC;IAClBA,KAAA,CAAMwB,SAAS,CAACpB,IAAI,GAAG,UAASqB,WAAW,EAAEC,UAAU,EAAE;EACxD,IAAA,MAAMC,MAAM,GAAG,IAAA3B,KAAA,EAAW,CAAA;EAC1B,IAAA,MAAMH,KAAK,GAAG,IAAI,CAACE,CAAC,CAAA;EACpB,IAAA,IAAIF,KAAK,EAAE;QACV,MAAMW,QAAQ,GAAGX,KAAK,GAAG,CAAC,GAAG4B,WAAW,GAAGC,UAAU,CAAA;EACrD,MAAA,IAAIlB,QAAQ,EAAE;UACb,IAAI;YACHb,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEnB,QAAQ,CAAC,IAAI,CAACP,CAAC,CAAC,CAAC,CAAA;WACpC,CAAC,OAAOqB,CAAC,EAAE;EACX3B,UAAAA,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEL,CAAC,CAAC,CAAA;EACtB,SAAA;EACA,QAAA,OAAOK,MAAM,CAAA;EACd,OAAC,MAAM;EACN,QAAA,OAAO,IAAI,CAAA;EACZ,OAAA;EACD,KAAA;EACA,IAAA,IAAI,CAACzB,CAAC,GAAG,UAAS0B,KAAK,EAAE;QACxB,IAAI;EACH,QAAA,MAAM9B,KAAK,GAAG8B,KAAK,CAAC3B,CAAC,CAAA;EACrB,QAAA,IAAI2B,KAAK,CAAC7B,CAAC,GAAG,CAAC,EAAE;EAChBJ,UAAAA,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEF,WAAW,GAAGA,WAAW,CAAC3B,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAA;WAC5D,MAAM,IAAI4B,UAAU,EAAE;YACtB/B,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAED,UAAU,CAAC5B,KAAK,CAAC,CAAC,CAAA;EACtC,SAAC,MAAM;EACNH,UAAAA,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAE7B,KAAK,CAAC,CAAA;EAC1B,SAAA;SACA,CAAC,OAAOwB,CAAC,EAAE;EACX3B,QAAAA,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEL,CAAC,CAAC,CAAA;EACtB,OAAA;OACA,CAAA;EACD,IAAA,OAAOK,MAAM,CAAA;KACb,CAAA;EACD,EAAA,OAAA3B,KAAA,CAAA;EACD,CAAC,EAAG,CAAA;EA6BG,SAAA6B,gBAAAA,CAAwBC,QAAQ,EAAE;IACxC,OAAOA,QAAQ,YAAA9B,OAAiB,IAAI8B,QAAQ,CAAC/B,CAAC,GAAG,CAAC,CAAA;EACnD,CAAA;EA+CO,SAAAsB,SAAgBU,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC1C,IAAIC,CAAC,GAAG,CAAC,CAAC;MAAEtC,IAAI;MAAE2B,MAAM,CAAA;IACxB,SAASY,MAAMA,CAACR,MAAM,EAAE;MACvB,IAAI;EACH,MAAA,OAAO,EAAEO,CAAC,GAAGH,KAAK,CAACK,MAAM,KAAK,CAACH,KAAK,IAAI,CAACA,KAAK,EAAE,CAAC,EAAE;EAClDN,QAAAA,MAAM,GAAGK,IAAI,CAACE,CAAC,CAAC,CAAA;EAChB,QAAA,IAAIP,MAAM,IAAIA,MAAM,CAACvB,IAAI,EAAE;EAC1B,UAAA,IAAIyB,gBAAA,CAAeF,MAAM,CAAC,EAAE;cAC3BA,MAAM,GAAGA,MAAM,CAAC1B,CAAC,CAAA;EAClB,WAAC,MAAM;cACN0B,MAAM,CAACvB,IAAI,CAAC+B,MAAM,EAAEZ,MAAM,KAAKA,MAAM,GAAG5B,SAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,GAAG,IAAAI,OAAA,EAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;EACnF,YAAA,OAAA;EACD,WAAA;EACD,SAAA;EACD,OAAA;EACA,MAAA,IAAIJ,IAAI,EAAE;EACTD,QAAAA,SAAA,CAAQC,IAAI,EAAE,CAAC,EAAE+B,MAAM,CAAC,CAAA;EACzB,OAAC,MAAM;EACN/B,QAAAA,IAAI,GAAG+B,MAAM,CAAA;EACd,OAAA;OACA,CAAC,OAAOL,CAAC,EAAE;EACX3B,MAAAA,SAAA,CAAQC,IAAI,KAAKA,IAAI,GAAG,IAAAI,OAAA,EAAW,CAAC,EAAE,CAAC,EAAEsB,CAAC,CAAC,CAAA;EAC5C,KAAA;EACD,GAAA;EACAa,EAAAA,MAAM,EAAE,CAAA;EACR,EAAA,OAAOvC,IAAI,CAAA;EACZ;;AC5IA,kBAAe,CAAA,UAAAyC,EAAE,EAAI;EACnB,EAAA,IAAMC,MAAM,GAAGC,MAAM,CAACC,gBAAgB,CAACH,EAAE,CAAC,CAACI,gBAAgB,CAAC,SAAS,CAAC,CAAA;EACtE,EAAA,OAAOH,MAAM,KAAK,MAAM,GAAG,CAAC,GAAGI,QAAQ,CAACJ,MAAM,IAAA,IAAA,GAANA,MAAM,GAAI,CAAC,CAAC,CAAA;EACtD,CAAC;;ECHD;;EAEA;EACe,uBAAUK,EAAAA,IAAI,EAAEC,IAAI,EAAuC;EAAA,EAAA,IAA3CA,IAAI,KAAA,KAAA,CAAA,EAAA;EAAJA,IAAAA,IAAI,GAAGD,IAAI,CAACE,SAAS,IAAIF,IAAI,CAACG,WAAW,CAAA;EAAA,GAAA;EACtE,EAAA,IAAMC,KAAK,GAAGC,QAAQ,CAACC,WAAW,EAAE,CAAA;IAEpC,IAAMC,KAAK,GAAG,EAAE,CAAA;EAChB,EAAA,KAAK,IAAIhB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGS,IAAI,CAACP,MAAM,EAAEF,CAAC,EAAE,EAAE;EAAA,IAAA,IAAAiB,YAAA,CAAA;EACpCJ,IAAAA,KAAK,CAACK,QAAQ,CAACT,IAAI,EAAE,CAAC,CAAC,CAAA;MACvBI,KAAK,CAACM,MAAM,CAACV,IAAI,EAAGT,CAAC,GAAG,CAAE,CAAC,CAAA;EAE3B,IAAA,IAAMoB,WAAW,GAAGP,KAAK,CAACQ,cAAc,EAAE,CAAA;EAE1C,IAAA,IAAM5C,KAAK,GAAG2C,WAAW,CAAClB,MAAM,GAAG,CAAC,CAAA;EACpCc,IAAAA,KAAK,CAACvC,KAAK,CAAC,GAAA,CAAAwC,YAAA,GAAGD,KAAK,CAACvC,KAAK,CAAC,KAAAwC,IAAAA,GAAAA,YAAA,GAAI;EAAEP,MAAAA,IAAI,EAAE,EAAA;OAAI,CAAA;MAC3CM,KAAK,CAACvC,KAAK,CAAC,CAAC6C,IAAI,GAAGF,WAAW,CAAC3C,KAAK,CAAC,CAAA;MACtCuC,KAAK,CAACvC,KAAK,CAAC,CAACiC,IAAI,IAAIA,IAAI,CAACa,MAAM,CAACvB,CAAC,CAAC,CAAA;EACrC,GAAA;EAEA,EAAA,OAAOgB,KAAK,CAACQ,GAAG,CAAC,UAAAF,IAAI,EAAI;EACvBA,IAAAA,IAAI,CAACG,QAAQ,GAAG,IAAIC,gBAAgB,EAAE,CAAA;EACtCJ,IAAAA,IAAI,CAACG,QAAQ,CAACb,WAAW,GAAGU,IAAI,CAACZ,IAAI,CAAA;EACrC,IAAA,OAAOY,IAAI,CAAA;EACb,GAAC,CAAC,CAAA;EACJ;;ECrBe,yBAAA,EAAUjD,OAAO,EAAE;IAChC,IAAI,CAACA,OAAO,EAAE,OAAA;EACd,EAAA,IAAI,CAACA,OAAO,CAACsC,SAAS,EAAE,OAAA;EACxB,EAAA,IAAI,CAACtC,OAAO,CAACsD,UAAU,CAACzB,MAAM,EAAE,OAAA;IAEhC,IAAI0B,SAAS,GAAG,EAAE,CAAA;EAElB,EAAA,KAAA,IAAAC,SAAA,GAAAC,+BAAA,CAAmBzD,OAAO,CAACsD,UAAU,CAAAI,EAAAA,KAAA,IAAAA,KAAA,GAAAF,SAAA,EAAA,EAAAG,IAAA,GAAE;EAAA,IAAA,IAA5BvB,IAAI,GAAAsB,KAAA,CAAAnE,KAAA,CAAA;EACb,IAAA,IAAI6C,IAAI,CAACwB,QAAQ,KAAKC,IAAI,CAACC,SAAS,EAAE,SAAA;EACtC,IAAA,IAAI,CAAC1B,IAAI,CAACG,WAAW,CAACV,MAAM,EAAE,SAAA;;EAE9B;EACA;EACA;EACA;EACA,IAAA,IAAI,KAAK,CAACkC,IAAI,CAAC3B,IAAI,CAACG,WAAW,CAAC,EAAEH,IAAI,CAAC4B,SAAS,CAAC,CAAC,CAAC,CAAA;MAEnDT,SAAS,GAAGA,SAAS,CAACU,MAAM,CAACjB,cAAc,CAACZ,IAAI,CAAC,CAAC,CAAA;EACpD,GAAA;EAEA,EAAA,OAAOmB,SAAS,CAAA;EAClB;;ECtBe,uBAAA,EAAUhE,KAAK,EAAE;EAC9B,EAAA,IAAI,CAACA,KAAK,IAAIA,KAAK,KAAK,MAAM,IAAIA,KAAK,KAAK,EAAE,EAAE,OAAO,IAAI,CAAA;EAE3D,EAAA,IAAM2E,MAAM,GAAGC,oBAAS,CAACC,UAAU,CAAC7E,KAAK,CAAC,CAAA;EAC1C,EAAA,IAAA8E,qBAAA,GAAuCF,oBAAS,CAACG,YAAY,CAACJ,MAAM,CAAC;MAA7DK,SAAS,GAAAF,qBAAA,CAATE,SAAS;MAAEC,KAAK,GAAAH,qBAAA,CAALG,KAAK;MAAEC,QAAQ,GAAAJ,qBAAA,CAARI,QAAQ,CAAA;IAElC,OAAO;EACLC,IAAAA,GAAG,EAAEnF,KAAK;EACVgF,IAAAA,SAAS,EAATA,SAAS;EACTC,IAAAA,KAAK,EAALA,KAAK;EACLC,IAAAA,QAAQ,EAARA,QAAQ;EACRE,IAAAA,cAAc,EAAE,SAAAA,cAAA9D,CAAAA,KAAA,EAA4C;QAAA,IAAA+D,aAAA,EAAAC,aAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,SAAA,EAAAC,eAAA,CAAA;EAAA,MAAA,IAAA5E,IAAA,GAAAQ,KAAA,cAAP,EAAE,GAAAA,KAAA;UAAAqE,MAAA,GAAA7E,IAAA,CAApC8E,CAAC;EAADA,QAAAA,CAAC,GAAAD,MAAA,KAAG,KAAA,CAAA,GAAA,CAAC,GAAAA,MAAA;UAAAE,MAAA,GAAA/E,IAAA,CAAEgF,CAAC;EAADA,QAAAA,CAAC,GAAAD,MAAA,KAAG,KAAA,CAAA,GAAA,CAAC,GAAAA,MAAA;UAAAE,WAAA,GAAAjF,IAAA,CAAEkF,MAAM;UAANA,MAAM,GAAAD,WAAA,KAAG,KAAA,CAAA,GAAA,CAAC,CAAC,EAAE,CAAC,CAAC,GAAAA,WAAA,CAAA;EAC9C,MAAA,IAAME,EAAE,GAAGL,CAAC,GAAGI,MAAM,CAAC,CAAC,CAAC,CAAA;EACxB,MAAA,IAAME,EAAE,GAAGJ,CAAC,GAAGE,MAAM,CAAC,CAAC,CAAC,CAAA;QAExB,OAAOpB,oBAAS,CAACuB,QAAQ,CACvBvB,oBAAS,CAACwB,OAAO,CACfxB,oBAAS,CAACI,SAAS,EAAAK,aAAA,GAACL,SAAS,IAATA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,SAAS,CAAEqB,EAAE,KAAA,IAAA,GAAAhB,aAAA,GAAI,CAAC,EAAA,CAAAC,aAAA,GAAEN,SAAS,oBAATA,SAAS,CAAEsB,EAAE,KAAAhB,IAAAA,GAAAA,aAAA,GAAI,CAAC,CAAC,EAC3DV,oBAAS,CAACK,KAAK,EAAAM,SAAA,GAACN,KAAK,IAALA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,KAAK,CAAEsB,EAAE,KAAAhB,IAAAA,GAAAA,SAAA,GAAI,CAAC,EAAA,CAAAC,KAAA,GAAAC,CAAAA,SAAA,GAAER,KAAK,IAAA,IAAA,GAAA,KAAA,CAAA,GAALA,KAAK,CAAEuB,EAAE,KAAA,IAAA,GAAAf,SAAA,GAAIR,KAAK,oBAALA,KAAK,CAAEsB,EAAE,KAAAf,IAAAA,GAAAA,KAAA,GAAI,CAAC,EAAES,EAAE,EAAEC,EAAE,CAAC,EACpEtB,oBAAS,CAAC6B,MAAM,CAAAf,CAAAA,eAAA,GAACR,QAAQ,IAARA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,QAAQ,CAAEwB,KAAK,KAAA,IAAA,GAAAhB,eAAA,GAAI,CAAC,EAAEO,EAAE,EAAEC,EAAE,CAC/C,CACF,CAAC,CAAA;EACH,KAAA;KACD,CAAA;EACH;;AC1BA,eAAA,CAAe,UAAAS,GAAG,EAAA;EAAA,EAAA,OAAIA,GAAG,CAACA,GAAG,CAACrE,MAAM,GAAG,CAAC,CAAC,CAAA;EAAA,CAAA;;ECA1B,UAAA,EAAUsE,IAAI,EAAEC,KAAK,EAAOC,MAAM,EAAE3F,QAAQ,EAAO;EAAA,EAAA,IAAnC0F,KAAK,KAAA,KAAA,CAAA,EAAA;MAALA,KAAK,GAAG,EAAE,CAAA;EAAA,GAAA;EAAA,EAAA,IAAU1F,QAAQ,KAAA,KAAA,CAAA,EAAA;EAARA,IAAAA,QAAQ,GAAG,EAAE,CAAA;EAAA,GAAA;IAC9D,IAAM4F,EAAE,GAAG,4BAA4B,CAAA;IAEvC,IAAMtG,OAAO,GAAGyC,QAAQ,CAAC8D,eAAe,CAACD,EAAE,EAAEH,IAAI,CAAC,CAAA;EAClD,EAAA,IAAIA,IAAI,KAAK,KAAK,EAAEnG,OAAO,CAACwG,cAAc,CAAC,+BAA+B,EAAE,OAAO,EAAEF,EAAE,CAAC,CAAA;EACxF,EAAA,KAAK,IAAMG,GAAG,IAAIL,KAAK,EAAE;EACvB,IAAA,IAAIA,KAAK,CAACK,GAAG,CAAC,KAAK,IAAI,IAAIL,KAAK,CAACK,GAAG,CAAC,KAAKC,SAAS,EAAE,SAAA;MACrD1G,OAAO,CAAC2G,YAAY,CAACF,GAAG,EAAEL,KAAK,CAACK,GAAG,CAAC,CAAC,CAAA;EACvC,GAAA;EAEA,EAAA,IAAIJ,MAAM,EAAEA,MAAM,CAACO,WAAW,CAAC5G,OAAO,CAAC,CAAA;EAEvC,EAAA,KAAA,IAAAwD,SAAA,GAAAC,+BAAA,EAAAoD,SAAA,GAAoBnG,QAAQ,KAAAmG,IAAAA,GAAAA,SAAA,GAAI,EAAE,CAAA,EAAAnD,KAAA,EAAAA,CAAAA,CAAAA,KAAA,GAAAF,SAAA,EAAA,EAAAG,IAAA,GAAE;EAAA,IAAA,IAAAkD,SAAA,CAAA;EAAA,IAAA,IAAzBC,KAAK,GAAApD,KAAA,CAAAnE,KAAA,CAAA;EAAoBS,IAAAA,OAAO,CAAC4G,WAAW,CAACE,KAAK,CAAC,CAAA;EAAD,GAAA;EAC7D,EAAA,OAAO9G,OAAO,CAAA;EAChB;;ACZA,eAAA,CAAe,UAAAK,IAAA,EAAA;IAER,OACML,UAAAA,OAAO,EAAA+E,KAAA,EAAA;EAAA,IAAA,IAAII,CAAC,GAAAJ,KAAA,CAADI,CAAC,CAAA;QAAEE,CAAC,GAAAN,KAAA,CAADM,CAAC,CAAA;QAAE0B,KAAK,GAAAhC,KAAA,CAALgC,KAAK,CAAA;QAAEC,MAAM,GAAAjC,KAAA,CAANiC,MAAM,CAAO;EAAA,IAAA,IAAA;EAAA,MAAA,OAAAxG,OAAA,CAAAC,OAAA,CAAOwG,CAAC,CAAC,OAAO,EAAE;EAClE9B,QAAAA,CAAC,EAADA,CAAC;EACDE,QAAAA,CAAC,EAADA,CAAC;EACD0B,QAAAA,KAAK,EAALA,KAAK;EACLC,QAAAA,MAAM,EAANA,MAAM;EACNE,QAAAA,IAAI,EAAElH,OAAO,CAACmH,SAAS,CAAC,WAAW,CAAA;EACrC,OAAC,CAAC,CAAA,CAAA;EAAA,KAAA,CAAA,OAAApG,CAAA,EAAA;EAAA,MAAA,OAAAP,OAAA,CAAAQ,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA,CAAA;EAAA,CAAA;;ACTF,sBAAA,CAAe,UAAAV,IAAA,EAAA;IAER,OACML,UAAAA,OAAO,EAAA+E,KAAA,EAAA;EAAA,IAAA,IAAII,CAAC,GAAAJ,KAAA,CAADI,CAAC,CAAA;QAAEE,CAAC,GAAAN,KAAA,CAADM,CAAC,CAAA;QAAE0B,KAAK,GAAAhC,KAAA,CAALgC,KAAK,CAAA;QAAEC,MAAM,GAAAjC,KAAA,CAANiC,MAAM,CAAO;MAAA,IAAO;QACvD,IAAI,CAACD,KAAK,IAAI,CAACC,MAAM,EAAE,OAAAxG,OAAA,CAAAC,OAAA,EAAA,CAAA;QACvB,IAAI,CAACT,OAAO,CAACoH,GAAG,EAAE,OAAA5G,OAAA,CAAAC,OAAA,EAAA,CAAA;EAElB,MAAA,OAAAD,OAAA,CAAAC,OAAA,CAAOwG,CAAC,CAAC,OAAO,EAAE;EAChB9B,QAAAA,CAAC,EAADA,CAAC;EACDE,QAAAA,CAAC,EAADA,CAAC;EACD0B,QAAAA,KAAK,EAALA,KAAK;EACLC,QAAAA,MAAM,EAANA,MAAM;UACNE,IAAI,EAAElH,OAAO,CAACoH,GAAAA;EAChB,OAAC,CAAC,CAAA,CAAA;EACJ,KAAC,QAAArG,CAAA,EAAA;EAAA,MAAA,OAAAP,OAAA,CAAAQ,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA,CAAA;EAAA,CAAA;;ECVkC,IAmCpBsG,YAAY,GAAA,SAAZA,YAAYA,CAAEC,GAAG,EAAA;IAAA,IAAE;MAChC,OAAA9G,OAAA,CAAAC,OAAA,CAAO,IAAID,OAAO,CAAC,UAAAC,OAAO,EAAI;EAC5B,MAAA,IAAM8G,KAAK,GAAG,IAAIC,KAAK,EAAE,CAAA;QACzBD,KAAK,CAACE,MAAM,GAAG,YAAA;EAAA,QAAA,OAAMhH,OAAO,CAAC;YAAEsG,KAAK,EAAEQ,KAAK,CAACR,KAAK;YAAEC,MAAM,EAAEO,KAAK,CAACP,MAAAA;EAAO,SAAC,CAAC,CAAA;EAAA,OAAA,CAAA;QAC1EO,KAAK,CAACH,GAAG,GAAGE,GAAG,CAAA;EACjB,KAAC,CAAC,CAAA,CAAA;EACJ,GAAC,QAAAvG,CAAA,EAAA;EAAA,IAAA,OAAAP,OAAA,CAAAQ,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,GAAA;EAAA,CAAA,CAAA;EAvCD,IAAM2G,YAAY,GAAG,SAAfA,YAAYA,CAAGlI,CAAC,EAAA;EAAA,EAAA,OAAIA,CAAC,CAACmI,OAAO,CAAC,KAAK,EAAE,UAAAxC,CAAC,EAAA;EAAA,IAAA,OAAIA,CAAC,CAAC,CAAC,CAAC,CAACyC,WAAW,EAAE,CAAA;KAAC,CAAA,CAAA;EAAA,CAAA,CAAA;EAEnE,SAASC,aAAaA,CAAEC,KAAK,EAAE;EAC7B,EAAA,IAAI,CAACA,KAAK,IAAIA,KAAK,KAAK,MAAM,IAAIA,KAAK,KAAK,aAAa,EAAE,OAAO,IAAI,CAAA;EAEtE,EAAA,IAAIA,KAAK,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE;EAC5B,IAAA,IAAMC,IAAI,GAAGF,KAAK,CAACG,KAAK,CAAC,SAAS,CAAC,CAAA;MACnC,IAAID,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,OAAO,IAAI,CAAA;EAClC,GAAA;EAEA,EAAA,OAAO,KAAK,CAAA;EACd,CAAA;EAEA,SAASE,YAAYA,CAAE1I,CAAC,EAAE;IACxB,IAAI2I,OAAO,GAAG,IAAI,CAAA;IAElB,KAAAC,IAAAA,EAAA,MAAAC,IAAA,GAAkB,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAAD,EAAA,GAAAC,IAAA,CAAAxG,MAAA,EAAAuG,EAAA,EAAE,EAAA;EAAA,IAAA,IAAAE,QAAA,CAAA;EAAjD,IAAA,IAAMC,GAAG,GAAAF,IAAA,CAAAD,EAAA,CAAA,CAAA;MACZ,IAAMN,KAAK,GAAGtI,CAAC,CAAC0C,gBAAgB,CAAWqG,SAAAA,GAAAA,GAAG,WAAQ,CAAC,CAAA;MACvD,IAAMxB,KAAK,GAAG5E,QAAQ,CAAC3C,CAAC,CAAC0C,gBAAgB,CAAWqG,SAAAA,GAAAA,GAAG,GAAQ,QAAA,CAAC,CAAC,CAAA;MACjE,IAAMC,KAAK,GAAGhJ,CAAC,CAAC0C,gBAAgB,CAAWqG,SAAAA,GAAAA,GAAG,WAAQ,CAAC,CAAA;;EAEvD;EACA,IAAA,IAAIV,aAAa,CAACC,KAAK,CAAC,EAAE,SAAA;EAC1B,IAAA,IAAI,CAACf,KAAK,IAAI0B,KAAK,CAAC1B,KAAK,CAAC,EAAE,SAAA;EAC5B,IAAA,IAAIyB,KAAK,KAAK,MAAM,IAAIA,KAAK,KAAK,QAAQ,EAAE,SAAA;MAE5C,CAAAF,QAAA,GAAAH,OAAO,KAAA,IAAA,GAAAG,QAAA,GAAPH,OAAO,GAAK,EAAE,CAAA;MACdA,OAAO,CAACI,GAAG,CAAC,GAAG;EAAET,MAAAA,KAAK,EAALA,KAAK;EAAEf,MAAAA,KAAK,EAALA,KAAK;EAAEyB,MAAAA,KAAK,EAALA,KAAAA;OAAO,CAAA;EACxC,GAAA;EAEA,EAAA,OAAOL,OAAO,CAAA;EAChB,CAAA;AAUA,oBAAA,CAAe,UAAA9H,IAAA,EAAA;EAAA,EAAA,IACbqI,KAAK,GAAArI,IAAA,CAALqI,KAAK;MACLC,KAAK,GAAAtI,IAAA,CAALsI,KAAK,CAAA;IAAA,OACM3I,UAAAA,OAAO,EAAA+E,KAAA,EAAA;EAAA,IAAA,IAAII,CAAC,GAAAJ,KAAA,CAADI,CAAC;QAAEE,CAAC,GAAAN,KAAA,CAADM,CAAC;QAAE0B,KAAK,GAAAhC,KAAA,CAALgC,KAAK;QAAEC,MAAM,GAAAjC,KAAA,CAANiC,MAAM;QAAEwB,KAAK,GAAAzD,KAAA,CAALyD,KAAK;QAAEI,IAAI,GAAA7D,KAAA,CAAJ6D,IAAI,CAAA;MAAA,IAAO;EAAA,MAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,SAAA,CAAA;QAAA,IAAAC,MAAA,YAAAA,MAAA,GAAA;EA0F7D;UACA,IAAIC,SAAS,KAAK,MAAM,EAAE;EACxB,UAAA,IAAMC,MAAM,GAAGjC,CAAC,CAAC,QAAQ,EAAE;EAAEkC,YAAAA,EAAE,EAAE,SAAS,GAAGC,OAAG,EAAC;aAAG,EAAER,IAAI,CAAC,CAAA;EAC3D;YACA,IAAMS,wBAAwB,GAAG,sDAAsD,CAAA;YACvF,IAAMC,+BAA+B,GAAG,gGAAgG,CAAA;YAExI,KAAA9F,IAAAA,SAAA,GAAAC,+BAAA,CAAA8F,CAAAA,gBAAA,GAA2BN,SAAS,CAAChB,KAAK,CAACoB,wBAAwB,CAAC,YAAAE,gBAAA,GAAI,EAAE,CAAA,EAAA7F,KAAA,EAAA,CAAA,CAAAA,KAAA,GAAAF,SAAA,EAAAG,EAAAA,IAAA,GAAE;EAAA,YAAA,IAAA4F,gBAAA,CAAA;EAAA,YAAA,IAAjEC,YAAY,GAAA9F,KAAA,CAAAnE,KAAA,CAAA;EACrB,YAAA,IAAAkK,mBAAA,GAOID,YAAY,CAACvB,KAAK,CAACqB,+BAA+B,CAAC;EALrDxB,cAAAA,KAAK,GAAA2B,mBAAA,CAAA,CAAA,CAAA;EACLC,cAAAA,IAAI,GAAAD,mBAAA,CAAA,CAAA,CAAA;EACJE,cAAAA,IAAI,GAAAF,mBAAA,CAAA,CAAA,CAAA;EACJG,cAAAA,IAAI,GAAAH,mBAAA,CAAA,CAAA,CAAA;EACJI,cAAAA,MAAM,GAAAJ,mBAAA,CAAA,CAAA,CAAA,CAAA;EAGRC,YAAAA,IAAI,GAAGvH,QAAQ,CAACuH,IAAI,CAAC,CAAA;EACrBC,YAAAA,IAAI,GAAGxH,QAAQ,CAACwH,IAAI,CAAC,CAAA;EACrBE,YAAAA,MAAM,GAAG1H,QAAQ,CAAC0H,MAAM,CAAC,CAAA;EAEzBX,YAAAA,MAAM,CAACtC,WAAW,CAACK,CAAC,CAAC,gBAAgB,EAAE;gBAAE6C,YAAY,EAAEF,IAAI,GAAG,CAAA;EAAE,aAAC,CAAC,CAAC,CAAA;EAEnE,YAAA,IAAMG,MAAM,GAAG9C,CAAC,CAAC,MAAM,EAAE;EACvB9B,cAAAA,CAAC,EAAEA,CAAC,GAAGuE,IAAI,GAAGG,MAAM;EACpBxE,cAAAA,CAAC,EAAEA,CAAC,GAAGsE,IAAI,GAAGE,MAAM;EACpB9C,cAAAA,KAAK,EAAEA,KAAK,GAAG8C,MAAM,GAAG,CAAC;EACzB7C,cAAAA,MAAM,EAAEA,MAAM,GAAG6C,MAAM,GAAG,CAAC;EAC3BG,cAAAA,IAAI,EAAElC,KAAK;EACXmC,cAAAA,EAAE,EAAEC,YAAY;gBAChBhB,MAAM,EAAA,OAAA,GAAUA,MAAM,CAACC,EAAE,GAAA,GAAA;EAC3B,aAAC,CAAC,CAAA;EAEFgB,YAAAA,CAAC,CAACC,OAAO,CAACL,MAAM,CAAC,CAAA;EACnB,WAAA;EACF,SAAA;;EAEA;UACA,IAAI,CAACG,YAAY,EAAE;YAAA,IAAAG,KAAA,GAAAA,SAAAA,KAAAA,GAC0C;EAAtD,YAAA,IAAAC,kBAAA,GAAAC,eAAA,CAAAC,GAAA,CAAA;EAAOjC,cAAAA,GAAG,GAAA+B,kBAAA,CAAA,CAAA,CAAA;EAAEG,cAAAA,MAAM,GAAAH,kBAAA,CAAA,CAAA,CAAA,CAAA;cACrB,IAAMI,IAAI,GAAG,EAAE,CAAA;EACf,YAAA,QAAQnC,GAAG;EACT,cAAA,KAAK,KAAK;kBACRmC,IAAI,CAACC,EAAE,GAAGxF,CAAC,CAAA;EACXuF,gBAAAA,IAAI,CAACE,EAAE,GAAGzF,CAAC,GAAG4B,KAAK,CAAA;EACnB2D,gBAAAA,IAAI,CAACG,EAAE,GAAGH,IAAI,CAACI,EAAE,GAAGzF,CAAC,GAAGlD,QAAQ,CAACsI,MAAM,CAAC1D,KAAK,CAAC,GAAG,CAAC,CAAA;EAClD,gBAAA,MAAA;EAEF,cAAA,KAAK,OAAO;EACV2D,gBAAAA,IAAI,CAACC,EAAE,GAAGD,IAAI,CAACE,EAAE,GAAGzF,CAAC,GAAG4B,KAAK,GAAG5E,QAAQ,CAACsI,MAAM,CAAC1D,KAAK,CAAC,GAAG,CAAC,CAAA;kBAC1D2D,IAAI,CAACG,EAAE,GAAGxF,CAAC,CAAA;EACXqF,gBAAAA,IAAI,CAACI,EAAE,GAAGzF,CAAC,GAAG2B,MAAM,CAAA;EACpB,gBAAA,MAAA;EAEF,cAAA,KAAK,QAAQ;kBACX0D,IAAI,CAACC,EAAE,GAAGxF,CAAC,CAAA;EACXuF,gBAAAA,IAAI,CAACE,EAAE,GAAGzF,CAAC,GAAG4B,KAAK,CAAA;EACnB2D,gBAAAA,IAAI,CAACG,EAAE,GAAGH,IAAI,CAACI,EAAE,GAAGzF,CAAC,GAAG2B,MAAM,GAAG7E,QAAQ,CAACsI,MAAM,CAAC1D,KAAK,CAAC,GAAG,CAAC,CAAA;EAC3D,gBAAA,MAAA;EAEF,cAAA,KAAK,MAAM;EACT2D,gBAAAA,IAAI,CAACC,EAAE,GAAGD,IAAI,CAACE,EAAE,GAAGzF,CAAC,GAAGhD,QAAQ,CAACsI,MAAM,CAAC1D,KAAK,CAAC,GAAG,CAAC,CAAA;kBAClD2D,IAAI,CAACG,EAAE,GAAGxF,CAAC,CAAA;EACXqF,gBAAAA,IAAI,CAACI,EAAE,GAAGzF,CAAC,GAAG2B,MAAM,CAAA;EACpB,gBAAA,MAAA;EACJ,aAAA;EAEAC,YAAAA,CAAC,CAAC,MAAM,EAAA8D,QAAA,KACHL,IAAI,EAAA;gBACPM,MAAM,EAAEP,MAAM,CAAC3C,KAAK;gBACpB,cAAc,EAAE2C,MAAM,CAAC1D,KAAAA;EAAK,aAAA,EACxB,YAAM;gBACR,QAAQ0D,MAAM,CAACjC,KAAK;EAClB,gBAAA,KAAK,QAAQ;oBAAE,OAAO;EACpB,oBAAA,kBAAkB,EAAE,CAAC,CAAC,EAAEiC,MAAM,CAAC1D,KAAK,GAAG,CAAC,CAAC,CAACkE,IAAI,CAAC,GAAG,CAAC;EACnD,oBAAA,mBAAmB,EAAE,CAAC;EACtB,oBAAA,iBAAiB,EAAE,OAAO;EAC1B,oBAAA,gBAAgB,EAAE,OAAA;qBACnB,CAAA;EAED,gBAAA,KAAK,QAAQ;oBAAE,OAAO;EACpB;EACA,oBAAA,kBAAkB,EAAE,CAACR,MAAM,CAAC1D,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACkE,IAAI,CAAC,GAAG,CAAA;qBACnD,CAAA;EAED,gBAAA;EAAS,kBAAA,OAAO,EAAE,CAAA;EACpB,eAAA;EACF,aAAC,EAAG,CACHd,EAAAA,CAAC,CAAC,CAAA;aACN,CAAA;YAlDD,KAAAK,IAAAA,GAAA,MAAAD,eAAA,GAA4BW,MAAM,CAACC,OAAO,CAAChD,OAAO,IAAPA,IAAAA,GAAAA,OAAO,GAAI,EAAE,CAAC,EAAAqC,GAAA,GAAAD,eAAA,CAAA1I,MAAA,EAAA2I,GAAA,EAAA,EAAA;cAAAH,KAAA,EAAA,CAAA;EAAA,WAAA;EAmD3D,SAAC,MAAM,IAAIlC,OAAO,YAAPA,OAAO,CAAEiD,GAAG,EAAE;EACvB;EACA;EACA;YACAnI,IAAI,CAAC0D,YAAY,CAAC,QAAQ,EAAEwB,OAAO,CAACiD,GAAG,CAACtD,KAAK,CAAC,CAAA;YAC9C7E,IAAI,CAAC0D,YAAY,CAAC,cAAc,EAAEwB,OAAO,CAACiD,GAAG,CAACrE,KAAK,CAAC,CAAA;;EAEpD;EACA9D,UAAAA,IAAI,CAAC0D,YAAY,CAAC,IAAI,EAAEuD,YAAY,GAAG/B,OAAO,CAACiD,GAAG,CAACrE,KAAK,GAAG,CAAC,CAAC,CAAA;EAC7D9D,UAAAA,IAAI,CAAC0D,YAAY,CAAC,GAAG,EAAExB,CAAC,GAAGgD,OAAO,CAACiD,GAAG,CAACrE,KAAK,GAAG,CAAC,CAAC,CAAA;EACjD9D,UAAAA,IAAI,CAAC0D,YAAY,CAAC,GAAG,EAAEtB,CAAC,GAAG8C,OAAO,CAACiD,GAAG,CAACrE,KAAK,GAAG,CAAC,CAAC,CAAA;EACjD9D,UAAAA,IAAI,CAAC0D,YAAY,CAAC,OAAO,EAAEI,KAAK,GAAGoB,OAAO,CAACiD,GAAG,CAACrE,KAAK,CAAC,CAAA;EACrD9D,UAAAA,IAAI,CAAC0D,YAAY,CAAC,QAAQ,EAAEK,MAAM,GAAGmB,OAAO,CAACiD,GAAG,CAACrE,KAAK,CAAC,CAAA;EACzD,SAAA;EAEA,QAAA,OAAOoD,CAAC,CAAA;EAAA,OAAA,CAAA;QAlMR,IAAI,CAACpD,KAAK,IAAI,CAACC,MAAM,EAAE,OAAAxG,OAAA,CAAAC,OAAA,EAAA,CAAA;EAEvB,MAAA,IAAM4K,eAAe,GAAG7C,KAAK,CAACtG,gBAAgB,CAAC,kBAAkB,CAAC,CAAA;EAClE,MAAA,IAAMoJ,eAAe,GAAA,CAAAzC,qBAAA,GAAGL,KAAK,CAACtG,gBAAgB,CAAC,kBAAkB,CAAC,KAAA2G,IAAAA,GAAAA,qBAAA,GAAI,MAAM,CAAA;EAC5E,MAAA,IAAMI,SAAS,GAAA,CAAAH,sBAAA,GAAGN,KAAK,CAACtG,gBAAgB,CAAC,YAAY,CAAC,KAAA4G,IAAAA,GAAAA,sBAAA,GAAI,MAAM,CAAA;EAChE,MAAA,IAAMoB,YAAY,GAAAnB,CAAAA,SAAA,GAAG5G,QAAQ,CAACqG,KAAK,CAACtG,gBAAgB,CAAC,eAAe,CAAC,CAAC,KAAA6G,IAAAA,GAAAA,SAAA,GAAI,IAAI,CAAA;EAC9E,MAAA,IAAMZ,OAAO,GAAGD,YAAY,CAACM,KAAK,CAAC,CAAA;;EAEnC;EACA,MAAA,IAAIX,aAAa,CAACwD,eAAe,CAAC,IAAIxD,aAAa,CAACyD,eAAe,CAAC,IAAI,CAACnD,OAAO,EAAE,OAAA3H,OAAA,CAAAC,OAAA,EAAA,CAAA;;EAElF;EACA,MAAA,IAAM0J,CAAC,GAAGlD,CAAC,CAAC,GAAG,CAAC,CAAA;EAChB,MAAA,IAAMhE,IAAI,GAAGgE,CAAC,CAAC,MAAM,EAAE;EACrB9B,QAAAA,CAAC,EAADA,CAAC;EACDE,QAAAA,CAAC,EAADA,CAAC;EACD0B,QAAAA,KAAK,EAALA,KAAK;EACLC,QAAAA,MAAM,EAANA,MAAM;EACNgD,QAAAA,IAAI,EAAEqB,eAAe;EACrBpB,QAAAA,EAAE,EAAEC,YAAAA;SACL,EAAEC,CAAC,CAAC,CAAA;;EAEL;EAAA,MAAA,IAAAjK,MAAA,GAAA,YAAA;EAAA,QAAA,IACI,CAAC2H,aAAa,CAACyD,eAAe,CAAC,EAAA;EAAA,UAAA,IAAAC,qBAAA,CAAA;EACjC,UAAA,IAAMjE,GAAG,GAAG,CAAA,CAAAiE,qBAAA,GAACD,eAAe,CAACrD,KAAK,CAAC,kBAAkB,CAAC,KAAAsD,IAAAA,GAAAA,qBAAA,GAAI,EAAE,EAAE,CAAC,CAAC,CAAA;;EAEhE;EAAA,UAAA,IAAA1K,KAAA,GAAA,YAAA;EAAA,YAAA,IACIyG,GAAG,EAAA;EACL,cAAA,IAAMkE,cAAc,GAAGhD,KAAK,CAACtG,gBAAgB,CAAC,iBAAiB,CAAC,CAAA;gBAChE,IAAMuJ,WAAW,GAAGC,aAAa,CAAC;EAAEhD,gBAAAA,KAAK,EAALA,KAAK;EAAEC,gBAAAA,KAAK,EAALA,KAAAA;EAAM,eAAC,CAAC,CAAA;EACnD;EACA;gBAAA,OAAAnI,OAAA,CAAAC,OAAA,CACmB4G,YAAY,CAACC,GAAG,CAAC,CAAA,CAAAzH,IAAA,CAAA,UAA9B8L,IAAI,EAAA;EAAA,gBAAA,OAAAnL,OAAA,CAAAC,OAAA,CACUgL,WAAW,CAAC;EAAErE,kBAAAA,GAAG,EAAEE,GAAAA;EAAI,iBAAC,EAAE;EAC5CnC,kBAAAA,CAAC,EAADA,CAAC;EACDE,kBAAAA,CAAC,EAADA,CAAC;oBACD0B,KAAK,EAAE6E,IAAI,CAACC,GAAG,CAAC9E,KAAK,EAAE4E,IAAI,CAAC5E,KAAK,CAAC;oBAClCC,MAAM,EAAE4E,IAAI,CAACC,GAAG,CAAC7E,MAAM,EAAE2E,IAAI,CAAC3E,MAAM,CAAA;EACtC,iBAAC,CAAC,CAAA,CAAAnH,IAAA,CAAA,UALI0H,KAAK,EAAA;EAMX,kBAAA,IAAMuE,QAAQ,GAAG7E,CAAC,CAAC,UAAU,EAAE;EAAEkC,oBAAAA,EAAE,EAAE,OAAO,GAAGC,OAAG,EAAC;EAAE,mBAAC,EAAER,IAAI,EAAE,CAAC3B,CAAC,CAAC,MAAM,EAAE;EAAE9B,oBAAAA,CAAC,EAADA,CAAC;EAAEE,oBAAAA,CAAC,EAADA,CAAC;EAAE0B,oBAAAA,KAAK,EAALA,KAAK;EAAEC,oBAAAA,MAAM,EAANA,MAAAA;qBAAQ,CAAC,CAAC,CAAC,CAAA;oBACnGO,KAAK,CAACZ,YAAY,CAAC,WAAW,YAAUmF,QAAQ,CAAC3C,EAAE,GAAA,GAAG,CAAC,CAAA;EACvDgB,kBAAAA,CAAC,CAACvD,WAAW,CAACW,KAAK,CAAC,CAAA;EAAA,iBAAA,CAAA,CAAA;EAAA,eAAA,CAAA,CAAA;EAAA,aAAA,MAAA;gBAAA,IAAAwE,eAAA,EAAAC,cAAA,CAAA;EAEpB;EACA,cAAA,IAAAC,KAAA,GAAAF,CAAAA,eAAA,IAAAC,cAAA,GAIIE,oBAAa,CAACZ,eAAe,CAAC,KAA9BU,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,cAAA,CAAiC,CAAC,CAAC,YAAAD,eAAA,GAAI,EAAE;kBAH3CI,UAAU,GAAAF,KAAA,CAAVE,UAAU;kBACVC,WAAW,GAAAH,KAAA,CAAXG,WAAW;kBACXC,IAAI,GAAAJ,KAAA,CAAJI,IAAI,CAAA;;EAGN;gBACA,IAAMC,QAAQ,GAAGrF,CAAC,CAACS,YAAY,CAAC2E,IAAI,CAAC,EAAE;EACrClD,gBAAAA,EAAE,EAAE,WAAW,GAAGC,OAAG,EAAE;EACvBmD,gBAAAA,aAAa,EAAE,mBAAmB;EAAE;kBACpCC,iBAAiB,EAAEJ,WAAW,GACzB,YAAM;oBACL,QAAQA,WAAW,CAACC,IAAI;EACtB,oBAAA,KAAK,SAAS;EAAE,sBAAA,OAAA,SAAA,IAAiB,GAAG,GAAGI,UAAU,CAACL,WAAW,CAAC7M,KAAK,CAAC,CAAA,GAAA,aAAA,CAAA;EACpE,oBAAA,KAAK,aAAa;EAAE,sBAAA;0BAClB,QAAQ6M,WAAW,CAAC7M,KAAK;EACvB,0BAAA,KAAK,KAAK;EAAE,4BAAA,OAAO,uBAAuB,CAAA;EAC1C,0BAAA,KAAK,OAAO;EAAE,4BAAA,OAAO,IAAI,CAAA;EACzB,0BAAA,KAAK,QAAQ;EAAE,4BAAA,OAAO,sBAAsB,CAAA;EAC5C,0BAAA,KAAK,MAAM;EAAE,4BAAA,OAAO,uBAAuB,CAAA;EAC7C,yBAAA;EACF,uBAAA;EACF,mBAAA;mBACD,EAAG,GACJ,sBAAA;iBACL,EAAEqJ,IAAI,CAAC,CAAA;;EAER;EACA,cAAA,KAAK,IAAIxI,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG+L,UAAU,CAACtK,MAAM,EAAEzB,KAAK,EAAE,EAAE;EACtD,gBAAA,IAAMsM,SAAS,GAAGP,UAAU,CAAC/L,KAAK,CAAC,CAAA;EACnC,gBAAA,IAAMuM,IAAI,GAAG1F,CAAC,CAAC,MAAM,EAAE;oBACrB2F,MAAM,EAAEF,SAAS,CAAC7K,MAAAA;EAChB;EAAA,oBACE,CAAC6K,SAAS,CAAC7K,MAAM,CAACtC,KAAK,GAAG,GAAG,GAC7Ba,KAAK,IAAI+L,UAAU,CAACtK,MAAM,GAAG,CAAC,CAAC;EACnC,kBAAA,YAAY,EAAK6K,SAAS,CAACL,IAAI,GAAIK,GAAAA,GAAAA,SAAS,CAACnN,KAAK,GAAA,GAAA;EACpD,iBAAC,CAAC,CAAA;EAEF+M,gBAAAA,QAAQ,CAAC1F,WAAW,CAAC+F,IAAI,CAAC,CAAA;EAC5B,eAAA;gBAEA1J,IAAI,CAAC0D,YAAY,CAAC,MAAM,YAAU2F,QAAQ,CAACnD,EAAE,GAAA,GAAG,CAAC,CAAA;EAAA,aAAA;EAAA,WAAA,EAAA,CAAA;YAAA,IAAAtI,KAAA,IAAAA,KAAA,CAAAhB,IAAA,EAAAgB,OAAAA,KAAA,CAAAhB,IAAA,CAAA,YAAA,EAAA,CAAA,CAAA;EAAA,SAAA;EAAA,OAAA,EAAA,CAAA;EAAA,MAAA,OAAAW,OAAA,CAAAC,OAAA,CAAAP,MAAA,IAAAA,MAAA,CAAAL,IAAA,GAAAK,MAAA,CAAAL,IAAA,CAAAmJ,MAAA,CAAAA,GAAAA,MAAA,CAAA9I,MAAA,CAAA,CAAA,CAAA;EA8GvD,KAAC,QAAAa,CAAA,EAAA;EAAA,MAAA,OAAAP,OAAA,CAAAQ,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA,CAAA;EAAA,CAAA;;ECrP8B,IAiKlB8L,iBAAA,GAAgC,OAAOC,MAAM,KAAK,WAAW,GAAIA,MAAM,CAACC,QAAQ,KAAKD,MAAM,CAACC,QAAQ,GAAGD,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAI,YAAY,CAAA;EA7HvJ,SAAS1N,SAAOA,CAACC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE;EAC3C,EAAA,IAAI,CAACF,IAAI,CAACG,CAAC,EAAE;MACZ,IAAID,KAAK,YAAYE,OAAK,EAAE;QAC3B,IAAIF,KAAK,CAACC,CAAC,EAAE;UACZ,IAAIF,KAAK,GAAG,CAAC,EAAE;YACdA,KAAK,GAAGC,KAAK,CAACC,CAAC,CAAA;EAChB,SAAA;UACAD,KAAK,GAAGA,KAAK,CAACG,CAAC,CAAA;EAChB,OAAC,MAAM;EACNH,QAAAA,KAAK,CAACI,CAAC,GAAGP,SAAO,CAACQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAEC,KAAK,CAAC,CAAA;EACzC,QAAA,OAAA;EACD,OAAA;EACD,KAAA;EACA,IAAA,IAAIC,KAAK,IAAIA,KAAK,CAACM,IAAI,EAAE;QACxBN,KAAK,CAACM,IAAI,CAACT,SAAO,CAACQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAEC,KAAK,CAAC,EAAEF,SAAO,CAACQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;EACxE,MAAA,OAAA;EACD,KAAA;MACAA,IAAI,CAACG,CAAC,GAAGF,KAAK,CAAA;MACdD,IAAI,CAACK,CAAC,GAAGH,KAAK,CAAA;EACd,IAAA,IAAMO,QAAQ,GAAGT,IAAI,CAACM,CAAC,CAAA;EACvB,IAAA,IAAIG,QAAQ,EAAE;QACbA,QAAQ,CAACT,IAAI,CAAC,CAAA;EACf,KAAA;EACD,GAAA;EACD,CAAA;EAAC,IA9DYI,OAAA,gBAAsB,YAAW;IAC7C,SAAAA,KAAAA,GAAiB,EAAC;IAClBA,KAAA,CAAMwB,SAAS,CAACpB,IAAI,GAAG,UAASqB,WAAW,EAAEC,UAAU,EAAE;EACxD,IAAA,IAAMC,MAAM,GAAG,IAAA3B,KAAA,EAAW,CAAA;EAC1B,IAAA,IAAMH,KAAK,GAAG,IAAI,CAACE,CAAC,CAAA;EACpB,IAAA,IAAIF,KAAK,EAAE;QACV,IAAMW,QAAQ,GAAGX,KAAK,GAAG,CAAC,GAAG4B,WAAW,GAAGC,UAAU,CAAA;EACrD,MAAA,IAAIlB,QAAQ,EAAE;UACb,IAAI;YACHb,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEnB,QAAQ,CAAC,IAAI,CAACP,CAAC,CAAC,CAAC,CAAA;WACpC,CAAC,OAAOqB,CAAC,EAAE;EACX3B,UAAAA,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEL,CAAC,CAAC,CAAA;EACtB,SAAA;EACA,QAAA,OAAOK,MAAM,CAAA;EACd,OAAC,MAAM;EACN,QAAA,OAAO,IAAI,CAAA;EACZ,OAAA;EACD,KAAA;EACA,IAAA,IAAI,CAACzB,CAAC,GAAG,UAAS0B,KAAK,EAAE;QACxB,IAAI;EACH,QAAA,IAAM9B,KAAK,GAAG8B,KAAK,CAAC3B,CAAC,CAAA;EACrB,QAAA,IAAI2B,KAAK,CAAC7B,CAAC,GAAG,CAAC,EAAE;EAChBJ,UAAAA,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEF,WAAW,GAAGA,WAAW,CAAC3B,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAA;WAC5D,MAAM,IAAI4B,UAAU,EAAE;YACtB/B,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAED,UAAU,CAAC5B,KAAK,CAAC,CAAC,CAAA;EACtC,SAAC,MAAM;EACNH,UAAAA,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAE7B,KAAK,CAAC,CAAA;EAC1B,SAAA;SACA,CAAC,OAAOwB,CAAC,EAAE;EACX3B,QAAAA,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEL,CAAC,CAAC,CAAA;EACtB,OAAA;OACA,CAAA;EACD,IAAA,OAAOK,MAAM,CAAA;KACb,CAAA;EACD,EAAA,OAAA3B,KAAA,CAAA;EACD,CAAC,EAAG,CAAA;EA6BG,SAAS6B,gBAAcA,CAACC,QAAQ,EAAE;IACxC,OAAOA,QAAQ,YAAY9B,OAAK,IAAI8B,QAAQ,CAAC/B,CAAC,GAAG,CAAC,CAAA;EACnD,CAAA;EA+CO,SAASsB,QAAMA,CAACU,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC1C,IAAIC,CAAC,GAAG,CAAC,CAAC;MAAEtC,IAAI;MAAE2B,MAAM,CAAA;IACxB,SAASY,MAAMA,CAACR,MAAM,EAAE;MACvB,IAAI;EACH,MAAA,OAAO,EAAEO,CAAC,GAAGH,KAAK,CAACK,MAAM,KAAK,CAACH,KAAK,IAAI,CAACA,KAAK,EAAE,CAAC,EAAE;EAClDN,QAAAA,MAAM,GAAGK,IAAI,CAACE,CAAC,CAAC,CAAA;EAChB,QAAA,IAAIP,MAAM,IAAIA,MAAM,CAACvB,IAAI,EAAE;EAC1B,UAAA,IAAIyB,gBAAc,CAACF,MAAM,CAAC,EAAE;cAC3BA,MAAM,GAAGA,MAAM,CAAC1B,CAAC,CAAA;EAClB,WAAC,MAAM;cACN0B,MAAM,CAACvB,IAAI,CAAC+B,MAAM,EAAEZ,MAAM,KAAKA,MAAM,GAAG5B,SAAO,CAACQ,IAAI,CAAC,IAAI,EAAEP,IAAI,GAAG,IAAII,OAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;EACnF,YAAA,OAAA;EACD,WAAA;EACD,SAAA;EACD,OAAA;EACA,MAAA,IAAIJ,IAAI,EAAE;EACTD,QAAAA,SAAO,CAACC,IAAI,EAAE,CAAC,EAAE+B,MAAM,CAAC,CAAA;EACzB,OAAC,MAAM;EACN/B,QAAAA,IAAI,GAAG+B,MAAM,CAAA;EACd,OAAA;OACA,CAAC,OAAOL,CAAC,EAAE;EACX3B,MAAAA,SAAO,CAACC,IAAI,KAAKA,IAAI,GAAG,IAAII,OAAK,EAAE,CAAC,EAAE,CAAC,EAAEsB,CAAC,CAAC,CAAA;EAC5C,KAAA;EACD,GAAA;EACAa,EAAAA,MAAM,EAAE,CAAA;EACR,EAAA,OAAOvC,IAAI,CAAA;EACZ,CAAA;EAAC,IAvIK2N,YAAY,GAAG,SAAfA,YAAYA,CAAA3M,IAAA,EAAA;EAAA,EAAA,IAAMqI,KAAK,GAAArI,IAAA,CAALqI,KAAK;MAAEC,KAAK,GAAAtI,IAAA,CAALsI,KAAK,CAAA;EAAA,EAAA,OAAA,UAAc3I,OAAO,EAAAiM,KAAA,EAA2CgB,OAAO,EAAA;EAAA,IAAA,IAA9C9H,CAAC,GAAA8G,KAAA,CAAD9G,CAAC;QAAEE,CAAC,GAAA4G,KAAA,CAAD5G,CAAC;QAAE0B,KAAK,GAAAkF,KAAA,CAALlF,KAAK;QAAEC,MAAM,GAAAiF,KAAA,CAANjF,MAAM;QAAEwB,KAAK,GAAAyD,KAAA,CAALzD,KAAK;QAAE0E,OAAO,GAAAjB,KAAA,CAAPiB,OAAO,CAAA;MAAA,IAAgB;QAAA,IAAAlE,MAAA,YAAAA,MAAA,GAAA;EAAA,QAAA,IAAAmE,iBAAA,CAAA;EAS9G;UACA,IAAMC,SAAS,GAAGC,WAAW,CAAC;EAAE3E,UAAAA,KAAK,EAALA,KAAK;EAAEC,UAAAA,KAAK,EAALA,KAAAA;EAAM,SAAC,CAAC,CAAA;EAAA,QAAA,IAAA9H,KAAA,GAAAyM,QAAA,CAAAH,CAAAA,iBAAA,GACxBI,gBAAgB,CAACvN,OAAO,CAAC,YAAAmN,iBAAA,GAAI,EAAE,EAAA,UAAApI,KAAA,EAAE;EAAA,UAAA,IAA3C9B,IAAI,GAAA8B,KAAA,CAAJ9B,IAAI,CAAA;EAAA,UAAA,OAAAzC,OAAA,CAAAC,OAAA,CACQ2M,SAAS,CAACpN,OAAO,EAAE;EACxCmF,YAAAA,CAAC,EAAElC,IAAI,CAACkC,CAAC,GAAG+H,OAAO,CAAC/H,CAAC;EACrBE,YAAAA,CAAC,EAAEpC,IAAI,CAACoC,CAAC,GAAG6H,OAAO,CAAC7H,CAAC;cACrB0B,KAAK,EAAE9D,IAAI,CAAC8D,KAAK;cACjBC,MAAM,EAAE/D,IAAI,CAAC+D,MAAM;EACnBwB,YAAAA,KAAK,EAALA,KAAK;EACL0E,YAAAA,OAAO,EAAPA,OAAAA;EACF,WAAC,EAAED,OAAO,CAAC,CAAApN,CAAAA,IAAA,WAPL2N,QAAQ,EAAA;EASd,YAAA,IAAIA,QAAQ,EAAErD,CAAC,CAACvD,WAAW,CAAC4G,QAAQ,CAAC,CAAA;EAAA,WAAA,CAAA,CAAA;WACtC,CAAA,CAAA;UAAA,OAAA3M,KAAA,IAAAA,KAAA,CAAAhB,IAAA,GAAAgB,KAAA,CAAAhB,IAAA,CAAA,YAAA;EAED,UAAA,OAAOsK,CAAC,CAAA;EAAA,SAAA,CAAA,GAADA,CAAC,CAAA;EAAA,OAAA,CAAA;EAvBR,MAAA,IAAMA,CAAC,GAAGlD,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;;EAEtB;QACA,IAAMwG,UAAU,GAAGT,YAAY,CAAC;EAAEtE,QAAAA,KAAK,EAALA,KAAK;EAAEC,QAAAA,KAAK,EAALA,KAAAA;EAAM,OAAC,CAAC,CAAA;QAAA,IAAAzI,MAAA,GAAAoN,QAAA,CAC9BtN,OAAO,CAACsD,UAAU,EAA1BlB,UAAAA,IAAI,EAAwB;EAAA,QAAA,IAAAsL,YAAA,GACrCvD,CAAC,CAACvD,WAAW,CAAA;EAAA,QAAA,OAAApG,OAAA,CAAAC,OAAA,CAAOgN,UAAU,CAACrL,IAAI,EAAE;EAAE+C,UAAAA,CAAC,EAADA,CAAC;EAAEE,UAAAA,CAAC,EAADA,CAAC;EAAE0B,UAAAA,KAAK,EAALA,KAAK;EAAEC,UAAAA,MAAM,EAANA,MAAM;EAAEwB,UAAAA,KAAK,EAALA,KAAK;EAAE0E,UAAAA,OAAO,EAAPA,OAAAA;EAAQ,SAAC,EAAED,OAAO,CAAC,CAAApN,CAAAA,IAAA,WAAA8N,WAAA,EAAA;EAAtFD,UAAAA,YAAA,CAAAE,IAAA,CAAAzD,CAAC,EAAAwD,WAAA,CAAA,CAAA;EAAsF,SAAA,CAAA,CAAA;SACxF,CAAA,CAAA;EAAA,MAAA,OAAAnN,OAAA,CAAAC,OAAA,CAAAP,MAAA,IAAAA,MAAA,CAAAL,IAAA,GAAAK,MAAA,CAAAL,IAAA,CAAAmJ,MAAA,CAAAA,GAAAA,MAAA,CAAA9I,MAAA,CAAA,CAAA,CAAA;EAkBH,KAAC,QAAAa,CAAA,EAAA;EAAA,MAAA,OAAAP,OAAA,CAAAQ,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA,CAAA;EAAA,CAAA,CAAA;EA0IM,SAAAuM,SAAgBO,MAAM,EAAEpM,IAAI,EAAEC,KAAK,EAAE;EAC3C,EAAA,IAAI,OAAOmM,MAAM,CAAAhB,iBAAA,CAAiB,KAAK,UAAU,EAAE;EAClD,IAAA,IAAIE,QAAQ,GAAGc,MAAM,CAAAhB,iBAAA,CAAiB,EAAE;QAAEiB,IAAI;QAAEzO,IAAI;QAAE2B,MAAM,CAAA;MAC5D,SAASY,MAAMA,CAACR,MAAM,EAAE;QACvB,IAAI;UACH,OAAO,CAAC,CAAC0M,IAAI,GAAGf,QAAQ,CAACgB,IAAI,EAAE,EAAEpK,IAAI,KAAK,CAACjC,KAAK,IAAI,CAACA,KAAK,EAAE,CAAC,EAAE;EAC9DN,UAAAA,MAAM,GAAGK,IAAI,CAACqM,IAAI,CAACvO,KAAK,CAAC,CAAA;EACzB,UAAA,IAAI6B,MAAM,IAAIA,MAAM,CAACvB,IAAI,EAAE;EAC1B,YAAA,IAAIyB,gBAAA,CAAeF,MAAM,CAAC,EAAE;gBAC3BA,MAAM,GAAGA,MAAM,CAAC1B,CAAC,CAAA;EAClB,aAAC,MAAM;gBACN0B,MAAM,CAACvB,IAAI,CAAC+B,MAAM,EAAEZ,MAAM,KAAKA,MAAM,GAAG5B,SAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,GAAG,IAAAI,OAAA,EAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;EACnF,cAAA,OAAA;EACD,aAAA;EACD,WAAA;EACD,SAAA;EACA,QAAA,IAAIJ,IAAI,EAAE;EACTD,UAAAA,SAAA,CAAQC,IAAI,EAAE,CAAC,EAAE+B,MAAM,CAAC,CAAA;EACzB,SAAC,MAAM;EACN/B,UAAAA,IAAI,GAAG+B,MAAM,CAAA;EACd,SAAA;SACA,CAAC,OAAOL,CAAC,EAAE;EACX3B,QAAAA,SAAA,CAAQC,IAAI,KAAKA,IAAI,GAAG,IAAAI,OAAA,EAAW,CAAC,EAAE,CAAC,EAAEsB,CAAC,CAAC,CAAA;EAC5C,OAAA;EACD,KAAA;EACAa,IAAAA,MAAM,EAAE,CAAA;MACR,IAAImL,QAAQ,CAACiB,MAAM,EAAE;EACpB,MAAA,IAAIC,MAAM,GAAG,UAAS1O,KAAK,EAAE;UAC5B,IAAI;EACH,UAAA,IAAI,CAACuO,IAAI,CAACnK,IAAI,EAAE;cACfoJ,QAAQ,CAACiB,MAAM,EAAE,CAAA;EAClB,WAAA;EACD,SAAC,CAAC,OAAMjN,CAAC,EAAE,EACX;EACA,QAAA,OAAOxB,KAAK,CAAA;SACZ,CAAA;EACD,MAAA,IAAIF,IAAI,IAAIA,IAAI,CAACQ,IAAI,EAAE;UACtB,OAAOR,IAAI,CAACQ,IAAI,CAACoO,MAAM,EAAE,UAASlN,CAAC,EAAE;YACpC,MAAMkN,MAAM,CAAClN,CAAC,CAAC,CAAA;EAChB,SAAC,CAAC,CAAA;EACH,OAAA;EACAkN,MAAAA,MAAM,EAAE,CAAA;EACT,KAAA;EACA,IAAA,OAAO5O,IAAI,CAAA;EACZ,GAAA;EACA;EACA,EAAA,IAAI,EAAE,QAAQ,IAAIwO,MAAM,CAAC,EAAE;EAC1B,IAAA,MAAM,IAAIK,SAAS,CAAC,wBAAwB,CAAC,CAAA;EAC9C,GAAA;EACA;IACA,IAAIC,MAAM,GAAG,EAAE,CAAA;EACf,EAAA,KAAK,IAAIxM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkM,MAAM,CAAChM,MAAM,EAAEF,CAAC,EAAE,EAAE;EACvCwM,IAAAA,MAAM,CAACC,IAAI,CAACP,MAAM,CAAClM,CAAC,CAAC,CAAC,CAAA;EACvB,GAAA;EACA,EAAA,OAAOb,QAAA,CAAOqN,MAAM,EAAE,UAASxM,CAAC,EAAE;EAAE,IAAA,OAAOF,IAAI,CAAC0M,MAAM,CAACxM,CAAC,CAAC,CAAC,CAAA;KAAG,EAAED,KAAK,CAAC,CAAA;EACtE;;EC/NA;EAoKO,MAAMmL,iBAAA,GAAgC,OAAOC,MAAM,KAAK,WAAW,GAAIA,MAAM,CAACC,QAAQ,KAAKD,MAAM,CAACC,QAAQ,GAAGD,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAI,YAAY,CAAA;EA7HvJ,SAAA1N,UAAiBC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE;EAC3C,EAAA,IAAI,CAACF,IAAI,CAACG,CAAC,EAAE;MACZ,IAAID,KAAK,YAAAE,OAAiB,EAAE;QAC3B,IAAIF,KAAK,CAACC,CAAC,EAAE;UACZ,IAAIF,KAAK,GAAG,CAAC,EAAE;YACdA,KAAK,GAAGC,KAAK,CAACC,CAAC,CAAA;EAChB,SAAA;UACAD,KAAK,GAAGA,KAAK,CAACG,CAAC,CAAA;EAChB,OAAC,MAAM;EACNH,QAAAA,KAAK,CAACI,CAAC,GAAGP,SAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAEC,KAAK,CAAC,CAAA;EACzC,QAAA,OAAA;EACD,OAAA;EACD,KAAA;EACA,IAAA,IAAIC,KAAK,IAAIA,KAAK,CAACM,IAAI,EAAE;QACxBN,KAAK,CAACM,IAAI,CAACT,SAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAEC,KAAK,CAAC,EAAEF,SAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;EACxE,MAAA,OAAA;EACD,KAAA;MACAA,IAAI,CAACG,CAAC,GAAGF,KAAK,CAAA;MACdD,IAAI,CAACK,CAAC,GAAGH,KAAK,CAAA;EACd,IAAA,IAAMO,QAAQ,GAAGT,IAAI,CAACM,CAAC,CAAA;EACvB,IAAA,IAAIG,QAAQ,EAAE;QACbA,QAAQ,CAACT,IAAI,CAAC,CAAA;EACf,KAAA;EACD,GAAA;EACD,CAAA;EA9DO,IAAMI,OAAA,gBAAsB,YAAW;IAC7C,SAAAA,KAAAA,GAAiB,EAAC;IAClBA,KAAA,CAAMwB,SAAS,CAACpB,IAAI,GAAG,UAASqB,WAAW,EAAEC,UAAU,EAAE;EACxD,IAAA,IAAMC,MAAM,GAAG,IAAA3B,KAAA,EAAW,CAAA;EAC1B,IAAA,IAAMH,KAAK,GAAG,IAAI,CAACE,CAAC,CAAA;EACpB,IAAA,IAAIF,KAAK,EAAE;QACV,IAAMW,QAAQ,GAAGX,KAAK,GAAG,CAAC,GAAG4B,WAAW,GAAGC,UAAU,CAAA;EACrD,MAAA,IAAIlB,QAAQ,EAAE;UACb,IAAI;YACHb,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEnB,QAAQ,CAAC,IAAI,CAACP,CAAC,CAAC,CAAC,CAAA;WACpC,CAAC,OAAOqB,CAAC,EAAE;EACX3B,UAAAA,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEL,CAAC,CAAC,CAAA;EACtB,SAAA;EACA,QAAA,OAAOK,MAAM,CAAA;EACd,OAAC,MAAM;EACN,QAAA,OAAO,IAAI,CAAA;EACZ,OAAA;EACD,KAAA;EACA,IAAA,IAAI,CAACzB,CAAC,GAAG,UAAS0B,KAAK,EAAE;QACxB,IAAI;EACH,QAAA,IAAM9B,KAAK,GAAG8B,KAAK,CAAC3B,CAAC,CAAA;EACrB,QAAA,IAAI2B,KAAK,CAAC7B,CAAC,GAAG,CAAC,EAAE;EAChBJ,UAAAA,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEF,WAAW,GAAGA,WAAW,CAAC3B,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAA;WAC5D,MAAM,IAAI4B,UAAU,EAAE;YACtB/B,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAED,UAAU,CAAC5B,KAAK,CAAC,CAAC,CAAA;EACtC,SAAC,MAAM;EACNH,UAAAA,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAE7B,KAAK,CAAC,CAAA;EAC1B,SAAA;SACA,CAAC,OAAOwB,CAAC,EAAE;EACX3B,QAAAA,SAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEL,CAAC,CAAC,CAAA;EACtB,OAAA;OACA,CAAA;EACD,IAAA,OAAOK,MAAM,CAAA;KACb,CAAA;EACD,EAAA,OAAA3B,KAAA,CAAA;EACD,CAAC,EAAG,CAAA;EA6BG,SAAA6B,gBAAAA,CAAwBC,QAAQ,EAAE;IACxC,OAAOA,QAAQ,YAAA9B,OAAiB,IAAI8B,QAAQ,CAAC/B,CAAC,GAAG,CAAC,CAAA;EACnD,CAAA;EA+CO,SAAAsB,SAAgBU,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC1C,IAAIC,CAAC,GAAG,CAAC,CAAC;MAAEtC,IAAI;MAAE2B,MAAM,CAAA;IACxB,SAASY,MAAMA,CAACR,MAAM,EAAE;MACvB,IAAI;EACH,MAAA,OAAO,EAAEO,CAAC,GAAGH,KAAK,CAACK,MAAM,KAAK,CAACH,KAAK,IAAI,CAACA,KAAK,EAAE,CAAC,EAAE;EAClDN,QAAAA,MAAM,GAAGK,IAAI,CAACE,CAAC,CAAC,CAAA;EAChB,QAAA,IAAIP,MAAM,IAAIA,MAAM,CAACvB,IAAI,EAAE;EAC1B,UAAA,IAAIyB,gBAAA,CAAeF,MAAM,CAAC,EAAE;cAC3BA,MAAM,GAAGA,MAAM,CAAC1B,CAAC,CAAA;EAClB,WAAC,MAAM;cACN0B,MAAM,CAACvB,IAAI,CAAC+B,MAAM,EAAEZ,MAAM,KAAKA,MAAM,GAAG5B,SAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,GAAG,IAAAI,OAAA,EAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;EACnF,YAAA,OAAA;EACD,WAAA;EACD,SAAA;EACD,OAAA;EACA,MAAA,IAAIJ,IAAI,EAAE;EACTD,QAAAA,SAAA,CAAQC,IAAI,EAAE,CAAC,EAAE+B,MAAM,CAAC,CAAA;EACzB,OAAC,MAAM;EACN/B,QAAAA,IAAI,GAAG+B,MAAM,CAAA;EACd,OAAA;OACA,CAAC,OAAOL,CAAC,EAAE;EACX3B,MAAAA,SAAA,CAAQC,IAAI,KAAKA,IAAI,GAAG,IAAAI,OAAA,EAAW,CAAC,EAAE,CAAC,EAAEsB,CAAC,CAAC,CAAA;EAC5C,KAAA;EACD,GAAA;EACAa,EAAAA,MAAM,EAAE,CAAA;EACR,EAAA,OAAOvC,IAAI,CAAA;EACZ,CAAA;EA4BO,SAAAiO,SAAgBO,MAAM,EAAEpM,IAAI,EAAEC,KAAK,EAAE;EAC3C,EAAA,IAAI,OAAOmM,MAAM,CAAAhB,iBAAA,CAAiB,KAAK,UAAU,EAAE;EAAA,IAAA,IAEzCjL,MAAM,GAAf,SAASA,MAAMA,CAACR,MAAM,EAAE;QACvB,IAAI;UACH,OAAO,CAAC,CAAC0M,IAAI,GAAGf,QAAQ,CAACgB,IAAI,EAAE,EAAEpK,IAAI,KAAK,CAACjC,KAAK,IAAI,CAACA,KAAK,EAAE,CAAC,EAAE;EAC9DN,UAAAA,MAAM,GAAGK,IAAI,CAACqM,IAAI,CAACvO,KAAK,CAAC,CAAA;EACzB,UAAA,IAAI6B,MAAM,IAAIA,MAAM,CAACvB,IAAI,EAAE;EAC1B,YAAA,IAAIyB,gBAAA,CAAeF,MAAM,CAAC,EAAE;gBAC3BA,MAAM,GAAGA,MAAM,CAAC1B,CAAC,CAAA;EAClB,aAAC,MAAM;gBACN0B,MAAM,CAACvB,IAAI,CAAC+B,MAAM,EAAEZ,MAAM,KAAKA,MAAM,GAAG5B,SAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,GAAG,IAAAI,OAAA,EAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;EACnF,cAAA,OAAA;EACD,aAAA;EACD,WAAA;EACD,SAAA;EACA,QAAA,IAAIJ,IAAI,EAAE;EACTD,UAAAA,SAAA,CAAQC,IAAI,EAAE,CAAC,EAAE+B,MAAM,CAAC,CAAA;EACzB,SAAC,MAAM;EACN/B,UAAAA,IAAI,GAAG+B,MAAM,CAAA;EACd,SAAA;SACA,CAAC,OAAOL,CAAC,EAAE;EACX3B,QAAAA,SAAA,CAAQC,IAAI,KAAKA,IAAI,GAAG,IAAAI,OAAA,EAAW,CAAC,EAAE,CAAC,EAAEsB,CAAC,CAAC,CAAA;EAC5C,OAAA;OACA,CAAA;EAtBD,IAAA,IAAIgM,QAAQ,GAAGc,MAAM,CAAAhB,iBAAA,CAAiB,EAAE;QAAEiB,IAAI;QAAEzO,IAAI;QAAE2B,MAAM,CAAA;EAuB5DY,IAAAA,MAAM,EAAE,CAAA;MACR,IAAImL,QAAQ,UAAO,EAAE;EACpB,MAAA,IAAIkB,MAAM,GAAG,SAATA,MAAMA,CAAY1O,KAAK,EAAE;UAC5B,IAAI;EACH,UAAA,IAAI,CAACuO,IAAI,CAACnK,IAAI,EAAE;cACfoJ,QAAQ,CAAA,QAAA,CAAO,EAAE,CAAA;EAClB,WAAA;EACD,SAAC,CAAC,OAAMhM,CAAC,EAAE,EACX;EACA,QAAA,OAAOxB,KAAK,CAAA;SACZ,CAAA;EACD,MAAA,IAAIF,IAAI,IAAIA,IAAI,CAACQ,IAAI,EAAE;UACtB,OAAOR,IAAI,CAACQ,IAAI,CAACoO,MAAM,EAAE,UAASlN,CAAC,EAAE;YACpC,MAAMkN,MAAM,CAAClN,CAAC,CAAC,CAAA;EAChB,SAAC,CAAC,CAAA;EACH,OAAA;EACAkN,MAAAA,MAAM,EAAE,CAAA;EACT,KAAA;EACA,IAAA,OAAO5O,IAAI,CAAA;EACZ,GAAA;EACA;EACA,EAAA,IAAI,EAAE,QAAQ,IAAIwO,MAAM,CAAC,EAAE;EAC1B,IAAA,MAAM,IAAIK,SAAS,CAAC,wBAAwB,CAAC,CAAA;EAC9C,GAAA;EACA;IACA,IAAIC,MAAM,GAAG,EAAE,CAAA;EACf,EAAA,KAAK,IAAIxM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkM,MAAM,CAAChM,MAAM,EAAEF,CAAC,EAAE,EAAE;EACvCwM,IAAAA,MAAM,CAACC,IAAI,CAACP,MAAM,CAAClM,CAAC,CAAC,CAAC,CAAA;EACvB,GAAA;EACA,EAAA,OAAOb,QAAA,CAAOqN,MAAM,EAAE,UAASxM,CAAC,EAAE;EAAE,IAAA,OAAOF,IAAI,CAAC0M,MAAM,CAACxM,CAAC,CAAC,CAAC,CAAA;KAAG,EAAED,KAAK,CAAC,CAAA;EACtE,CAAA;AA5NA,YAAA,CAAe,UAAArB,IAAA,EAAA;EAAA,EAAA,IAAGgO,KAAK,GAAAhO,IAAA,CAALgO,KAAK,CAAA;EAAA,EAAA,OAAA,UAAcrO,OAAO,EAAA+E,KAAA,EAAAuJ,MAAA,EAAA;EAAA,IAAA,IAAInJ,CAAC,GAAAJ,KAAA,CAADI,CAAC,CAAA;QAAEE,CAAC,GAAAN,KAAA,CAADM,CAAC,CAAA;QAAE0B,KAAK,GAAAhC,KAAA,CAALgC,KAAK,CAAA;QAAEC,MAAM,GAAAjC,KAAA,CAANiC,MAAM,CAAO;EAAA,IAAA,IAAAiF,KAAA,GAAAqC,MAAA,cAEtE,EAAE,GAAAA,MAAA;QAAAC,qBAAA,GAAAtC,KAAA,CADJuC,kBAAkB;EAAlBA,MAAAA,kBAAkB,GAAAD,qBAAA,KAAG,KAAA,CAAA,GAAA,IAAI,GAAAA,qBAAA,CAAA;MAAA,IAChB;QAAA,IAAAE,MAAA,YAAAA,MAAA,GAAA;EA6BT,QAAA,OAAOD,kBAAkB,GACrBvH,CAAC,CAAC,OAAO,EAAE;EACX9B,UAAAA,CAAC,EAADA,CAAC;EACDE,UAAAA,CAAC,EAADA,CAAC;EACD0B,UAAAA,KAAK,EAALA,KAAK;EACLC,UAAAA,MAAM,EAANA,MAAM;EACNE,UAAAA,IAAI,EAAE,4BAA4B,GAAGwH,IAAI,CAAC,IAAIC,aAAa,EAAE,CAACC,iBAAiB,CAAC5O,OAAO,CAAC,CAAA;WACzF,CAAC,GACC,YAAM;EACL,UAAA,IAAM6O,GAAG,GAAG5H,CAAC,CAAC,KAAK,EAAE;EACnB9B,YAAAA,CAAC,EAADA,CAAC;EACDE,YAAAA,CAAC,EAADA,CAAC;EACD0B,YAAAA,KAAK,EAALA,KAAK;EACLC,YAAAA,MAAM,EAANA,MAAM;cACN8H,OAAO,EAAA,MAAA,GAAS/H,KAAK,GAAIC,GAAAA,GAAAA,MAAAA;EAC3B,WAAC,CAAC,CAAA;EAEF6H,UAAAA,GAAG,CAACE,SAAS,GAAG/O,OAAO,CAAC+O,SAAS,CAAA;EACjC,UAAA,OAAOF,GAAG,CAAA;EACZ,SAAC,EAAG,CAAA;EAAA,OAAA,CAAA;EAAA,MAAA,IAAA7F,MAAA,GAAAsE,QAAA,CA9CYtN,OAAO,CAACgP,gBAAgB,CAAC,aAAa,CAAC,EAAhDzH,UAAAA,KAAK,EAA6C;EAAA,QAAA,SAAArH,MAAA,GAAA;YAwB3DqH,KAAK,CAACZ,YAAY,CAAC,MAAM,EAAE0H,KAAK,CAACY,GAAG,CAAC7H,GAAG,CAAC,CAAC,CAAA;EAAA,SAAA;EAvB1C,QAAA,IAAMA,GAAG,GAAGG,KAAK,CAAC2H,YAAY,CAAC,MAAM,CAAC,CAAA;EAAA,QAAA,IAAArO,KAAA,GAAA,YAAA;EAAA,UAAA,IAElC,CAACwN,KAAK,CAACc,GAAG,CAAC/H,GAAG,CAAC,EAAA;EACjB;cAAA,OAAA5G,OAAA,CAAAC,OAAA,CACmB,IAAID,OAAO,CAAC,UAAAC,OAAO,EAAI;EACxC,cAAA,IAAM2O,OAAO,GAAG,IAAIC,cAAc,EAAE,CAAA;gBACpCD,OAAO,CAACE,IAAI,CAAC,KAAK,EAAElI,GAAG,EAAE,IAAI,CAAC,CAAA;gBAC9BgI,OAAO,CAACG,YAAY,GAAG,MAAM,CAAA;gBAC7BH,OAAO,CAAC3H,MAAM,GAAG,YAAA;EAAA,gBAAA,OAAMhH,OAAO,CAAC2O,OAAO,CAACI,QAAQ,CAAC,CAAA;EAAA,eAAA,CAAA;gBAChDJ,OAAO,CAACK,IAAI,EAAE,CAAA;EAChB,aAAC,CAAC,CAAA,CAAA5P,IAAA,CAAA,UANI6P,IAAI,EAAA;EAQV;gBAAA,OAAAlP,OAAA,CAAAC,OAAA,CACsB,IAAID,OAAO,CAAC,UAAAC,OAAO,EAAI;EAC3C,gBAAA,IAAMkP,MAAM,GAAG,IAAIC,UAAU,EAAE,CAAA;EAC/BD,gBAAAA,MAAM,CAAClI,MAAM,GAAG,UAAA1G,CAAC,EAAA;EAAA,kBAAA,OAAIN,OAAO,CAACM,CAAC,CAAC8M,MAAM,CAACzM,MAAM,CAAC,CAAA;EAAA,iBAAA,CAAA;EAC7CuO,gBAAAA,MAAM,CAACE,aAAa,CAACH,IAAI,CAAC,CAAA;EAC5B,eAAC,CAAC,CAAA,CAAA7P,IAAA,CAAA,UAJIiQ,OAAO,EAAA;EAMb;EACAzB,gBAAAA,KAAK,CAAC0B,GAAG,CAAC3I,GAAG,EAAE0I,OAAO,CAAC,CAAA;EAAA,eAAA,CAAA,CAAA;EAAA,aAAA,CAAA,CAAA;EAAA,WAAA;EAAA,SAAA,EAAA,CAAA;EAAA,QAAA,OAAAjP,KAAA,IAAAA,KAAA,CAAAhB,IAAA,GAAAgB,KAAA,CAAAhB,IAAA,CAAAK,MAAA,CAAAA,GAAAA,MAAA,CAAAW,KAAA,CAAA,CAAA;SAI1B,CAAA,CAAA;EA1BD;EAAA,MAAA,OAAAL,OAAA,CAAAC,OAAA,CAAAuI,MAAA,IAAAA,MAAA,CAAAnJ,IAAA,GAAAmJ,MAAA,CAAAnJ,IAAA,CAAA4O,MAAA,CAAAA,GAAAA,MAAA,CAAAzF,MAAA,CAAA,CAAA,CAAA;EAgDF,KAAC,QAAAjI,CAAA,EAAA;EAAA,MAAA,OAAAP,OAAA,CAAAQ,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA,CAAA;EAAA,CAAA;;EClDD,IAAMiP,SAAS,GAAG,SAAZA,SAASA,CAAGxQ,CAAC,EAAA;EAAA,EAAA,OAAI,UAAAqB,KAAA,EAAA;EAAA,IAAA,IAAAoP,mBAAA,EAAAC,oBAAA,EAAAC,oBAAA,CAAA;EAAA,IAAA,IAAA9P,IAAA,GAAAQ,KAAA,cAAgD,EAAE,GAAAA,KAAA;QAA/CuP,MAAM,GAAA/P,IAAA,CAAN+P,MAAM;QAAAC,UAAA,GAAAhQ,IAAA,CAAEmI,KAAK;EAALA,MAAAA,KAAK,GAAA6H,UAAA,KAAG,KAAA,CAAA,GAAA,QAAQ,GAAAA,UAAA;QAAAC,WAAA,GAAAjQ,IAAA,CAAEkQ,MAAM;EAANA,MAAAA,MAAM,GAAAD,WAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,WAAA,CAAA;MAAA,OAChEF,MAAM,KAAK,CAAA,CAAAH,mBAAA,GAACzQ,CAAC,CAAC0C,gBAAgB,CAAC,aAAa,CAAC,KAAA,IAAA,GAAA+N,mBAAA,GAAI,EAAE,EAAEtI,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,IACvEa,KAAK,MAAA0H,CAAAA,oBAAA,GAAM1Q,CAAC,CAAC0C,gBAAgB,CAAC,YAAY,CAAC,YAAAgO,oBAAA,GAAI,QAAQ,CAAC,IACxDK,MAAM,OAAAJ,oBAAA,GAAM3Q,CAAC,CAAC0C,gBAAgB,CAAC,aAAa,CAAC,KAAAiO,IAAAA,GAAAA,oBAAA,GAAI,KAAK,CAAC,CAAA;EAAA,GAAA,CAAA;EAAA,CAAA,CAAA;AAE3D,aAAA,CAAe,UAAApL,KAAA,EAAA;EAAA,EAAA,IAAG2D,KAAK,GAAA3D,KAAA,CAAL2D,KAAK;MAAEC,KAAK,GAAA5D,KAAA,CAAL4D,KAAK,CAAA;EAAA,EAAA,OAAA,UAAc6H,MAAM,EAAAvE,KAAA,EAAAwE,KAAA,EAAA;EAAA,IAAA,IAAItL,CAAC,GAAA8G,KAAA,CAAD9G,CAAC;QAAEE,CAAC,GAAA4G,KAAA,CAAD5G,CAAC;QAAE0B,KAAK,GAAAkF,KAAA,CAALlF,KAAK;QAAEC,MAAM,GAAAiF,KAAA,CAANjF,MAAM;QAAEwB,KAAK,GAAAyD,KAAA,CAALzD,KAAK,CAAA;EAAA,IAAA,IAAAkI,eAAA,GAAAD,KAAA,CAC9EzM,SAAS;EAATA,MAAAA,SAAS,GAAA0M,eAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,eAAA,CAAA;MAAA,IACb;QAAA,IAyDKC,IAAI,GAAb,SAASA,IAAIA,CAAEC,KAAK,EAAElR,CAAC,EAAAQ,MAAA,EAAyD;EAAA,QAAA,IAAA2Q,KAAA,GAAA3Q,MAAA,cAAJ,EAAE,GAAAA,MAAA;YAAA4Q,iBAAA,GAAAD,KAAA,CAAnDzE,WAAW;EAAXA,UAAAA,WAAW,GAAA0E,iBAAA,KAAG,KAAA,CAAA,GAAA,YAAY,GAAAA,iBAAA;YAAAC,YAAA,GAAAF,KAAA,CAAE7F,MAAM;EAANA,UAAAA,MAAM,GAAA+F,YAAA,KAAG,KAAA,CAAA,GAAA,OAAO,GAAAA,YAAA,CAAA;EACrE,QAAA,OAAOrI,KAAK,IAAIzB,CAAC,CAAC,MAAM,EAAE;EACxB2J,UAAAA,KAAK,EAALA,KAAK;EACL,UAAA,YAAY,EAAElR,CAAC;YACfiL,EAAE,EAAEyB,WAAW,KAAK,YAAY,GAAGjH,CAAC,GAAGA,CAAC,GAAGzF,CAAC;YAC5CkL,EAAE,EAAEwB,WAAW,KAAK,YAAY,GAAGjH,CAAC,GAAG4B,KAAK,GAAG5B,CAAC,GAAGzF,CAAC;YACpDmL,EAAE,EAAEuB,WAAW,KAAK,YAAY,GAAG/G,CAAC,GAAG3F,CAAC,GAAG2F,CAAC;YAC5CyF,EAAE,EAAEsB,WAAW,KAAK,YAAY,GAAG/G,CAAC,GAAG3F,CAAC,GAAG2F,CAAC,GAAG2B,MAAM;EACrDgE,UAAAA,MAAM,EAANA,MAAM;YACN,OAAO,EAAA,OAAA;WACR,EAAEb,CAAC,CAAC,CAAA;SACN,CAAA;EAnED,MAAA,IAAI,CAACqG,MAAM,EAAE,OAAAhQ,OAAA,CAAAC,OAAA,EAAA,CAAA;EAEb,MAAA,IAAM0J,CAAC,GAAGlD,CAAC,CAAC,GAAG,EAAE;UAAE,OAAO,EAAA,eAAA;EAAgB,OAAC,CAAC,CAAA;;EAE5C;QACA,IAAM+J,IAAI,GAAGrI,KAAK,CAACsI,IAAI,CAACjB,SAAS,CAACxH,KAAK,CAAC,CAAC,CAAA;EACzC,MAAA,IAAI,CAACwI,IAAI,EAAE,MAAM,IAAIE,KAAK,CAAsB1I,oBAAAA,GAAAA,KAAK,CAACtG,gBAAgB,CAAC,aAAa,CAAC,GAAA,GAAA,GAAIsG,KAAK,CAACtG,gBAAgB,CAAC,YAAY,CAAC,GAAIsG,GAAAA,GAAAA,KAAK,CAACtG,gBAAgB,CAAC,aAAa,CAAC,GAAA,GAAG,CAAC,CAAA;;EAE1K;EACA,MAAA,IAAQiP,UAAU,GAAKH,IAAI,CAACI,QAAQ,CAA5BD,UAAU,CAAA;QAClB,IAAME,QAAQ,GAAGL,IAAI,CAACI,QAAQ,CAACE,MAAM,CAACC,IAAI,CAACF,QAAQ,CAAA;QACnD,IAAMG,SAAS,GAAGR,IAAI,CAACI,QAAQ,CAACE,MAAM,CAACC,IAAI,CAACC,SAAS,CAAA;;EAErD;EACA,MAAA,IAAMC,aAAa,GAAGjJ,KAAK,CAACtG,gBAAgB,CAAC,gBAAgB,CAAC,CAAA;QAC9D,IAAMwP,QAAQ,GAAGjF,UAAU,CAACjE,KAAK,CAACtG,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAA;;EAEhE;EACA,MAAA,IAAMyP,OAAO,GAAG,CAACN,QAAQ,GAAGG,SAAS,IAAIL,UAAU,CAAA;EACnD,MAAA,IAAMS,OAAO,GAAIF,QAAQ,GAAGC,OAAO,GAAI/F,IAAI,CAACiG,GAAG,CAACL,SAAS,GAAGL,UAAU,CAAC,GAAGO,QAAQ,CAAA;;EAElF;EACAf,MAAAA,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE;EAAEvE,QAAAA,WAAW,EAAE,UAAU;EAAEpB,QAAAA,MAAM,EAAE,KAAA;EAAM,OAAC,CAAC,CAAA;EAC5D2F,MAAAA,IAAI,CAAC,KAAK,EAAE5J,KAAK,EAAE;EAAEqF,QAAAA,WAAW,EAAE,UAAU;EAAEpB,QAAAA,MAAM,EAAE,KAAA;EAAM,OAAC,CAAC,CAAA;EAC9D2F,MAAAA,IAAI,CAAC,SAAS,EAAEiB,OAAO,EAAE;EAAE5G,QAAAA,MAAM,EAAE,SAAA;EAAU,OAAC,CAAC,CAAA;EAE/C,MAAA,IAAIyG,aAAa,KAAK,QAAQ,IAAIzN,SAAS,EAAE;UAC3C,IAAM8N,EAAE,GAAGL,aAAa,KAAK,QAAQ,GAAG,CAAC,GAAGhF,UAAU,CAACgF,aAAa,CAAC,CAAA;;EAErE;EACA,QAAA,KAAA,IAAAjO,SAAA,GAAAC,+BAAA,CAAgB+M,MAAM,CAAA,EAAA9M,KAAA,EAAA,CAAA,CAAAA,KAAA,GAAAF,SAAA,EAAA,EAAAG,IAAA,GAAE;EAAA,UAAA,IAAboO,CAAC,GAAArO,KAAA,CAAAnE,KAAA,CAAA;EACV,UAAA,IAAI,CAACwS,CAAC,CAAC9J,KAAK,CAAC,IAAI,CAAC,EAAE;EAAE;cACpBhB,CAAC,CAAC,MAAM,EAAE;gBACR+K,CAAC,EAAEhB,IAAI,CAACI,QAAQ,CAACa,OAAO,CAACF,CAAC,EAAE5M,CAAC,EAAEE,CAAC,GAAGuM,OAAO,EAAEF,QAAQ,CAAC,CAACQ,UAAU,CAAC,CAAC,CAAC;EACnElI,cAAAA,IAAI,EAAExB,KAAK,CAACtG,gBAAgB,CAAC,OAAO,CAAA;eACrC,EAAEiI,CAAC,CAAC,CAAA;EACP,WAAA;EAEAhF,UAAAA,CAAC,IAAI6L,IAAI,CAACI,QAAQ,CAACe,eAAe,CAACJ,CAAC,EAAEL,QAAQ,CAAC,GAAGI,EAAE,CAAA;EACtD,SAAA;EACF,OAAC,MAAM;EACL;UACA7K,CAAC,CAAC,MAAM,EAAE;EACR+K,UAAAA,CAAC,EAAEhB,IAAI,CAACI,QAAQ,CAACa,OAAO,CAACzB,MAAM,EAAErL,CAAC,EAAEE,CAAC,GAAGuM,OAAO,EAAEF,QAAQ,EAAE;EACzDU,YAAAA,QAAQ,EAAE;EACR;EACAC,cAAAA,IAAI,EAAE,IAAI;EACVC,cAAAA,IAAI,EAAE,IAAA;EACR,aAAA;EACF,WAAC,CAAC,CAACJ,UAAU,CAAC,CAAC,CAAC;EAChBlI,UAAAA,IAAI,EAAExB,KAAK,CAACtG,gBAAgB,CAAC,OAAO,CAAA;WACrC,EAAEiI,CAAC,CAAC,CAAA;EACP,OAAA;EAEA,MAAA,OAAA3J,OAAA,CAAAC,OAAA,CAAO0J,CAAC,CAAA,CAAA;EAcV,KAAC,QAAApJ,CAAA,EAAA;EAAA,MAAA,OAAAP,OAAA,CAAAQ,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,KAAA;EAAA,GAAA,CAAA;EAAA,CAAA;;;;;;;;;;;;;;;ECoFM,MAAM8L,eAAA,GAAgC,OAAOC,MAAM,KAAK,WAAW,GAAIA,MAAM,CAACC,QAAQ,KAAKD,MAAM,CAACC,QAAQ,GAAGD,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAI,YAAY,CAAA;EA7HvJ,SAAA1N,QAAiBC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE;EAC3C,EAAA,IAAI,CAACF,IAAI,CAACG,CAAC,EAAE;MACZ,IAAID,KAAK,YAAAE,KAAiB,EAAE;QAC3B,IAAIF,KAAK,CAACC,CAAC,EAAE;UACZ,IAAIF,KAAK,GAAG,CAAC,EAAE;YACdA,KAAK,GAAGC,KAAK,CAACC,CAAC,CAAA;EAChB,SAAA;UACAD,KAAK,GAAGA,KAAK,CAACG,CAAC,CAAA;EAChB,OAAC,MAAM;EACNH,QAAAA,KAAK,CAACI,CAAC,GAAGP,OAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAEC,KAAK,CAAC,CAAA;EACzC,QAAA,OAAA;EACD,OAAA;EACD,KAAA;EACA,IAAA,IAAIC,KAAK,IAAIA,KAAK,CAACM,IAAI,EAAE;QACxBN,KAAK,CAACM,IAAI,CAACT,OAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAEC,KAAK,CAAC,EAAEF,OAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;EACxE,MAAA,OAAA;EACD,KAAA;MACAA,IAAI,CAACG,CAAC,GAAGF,KAAK,CAAA;MACdD,IAAI,CAACK,CAAC,GAAGH,KAAK,CAAA;EACd,IAAA,IAAMO,QAAQ,GAAGT,IAAI,CAACM,CAAC,CAAA;EACvB,IAAA,IAAIG,QAAQ,EAAE;QACbA,QAAQ,CAACT,IAAI,CAAC,CAAA;EACf,KAAA;EACD,GAAA;EACD,CAAA;EA9DO,IAAMI,KAAA,gBAAsB,YAAW;IAC7C,SAAAA,KAAAA,GAAiB,EAAC;IAClBA,KAAA,CAAMwB,SAAS,CAACpB,IAAI,GAAG,UAASqB,WAAW,EAAEC,UAAU,EAAE;EACxD,IAAA,IAAMC,MAAM,GAAG,IAAA3B,KAAA,EAAW,CAAA;EAC1B,IAAA,IAAMH,KAAK,GAAG,IAAI,CAACE,CAAC,CAAA;EACpB,IAAA,IAAIF,KAAK,EAAE;QACV,IAAMW,QAAQ,GAAGX,KAAK,GAAG,CAAC,GAAG4B,WAAW,GAAGC,UAAU,CAAA;EACrD,MAAA,IAAIlB,QAAQ,EAAE;UACb,IAAI;YACHb,OAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEnB,QAAQ,CAAC,IAAI,CAACP,CAAC,CAAC,CAAC,CAAA;WACpC,CAAC,OAAOqB,CAAC,EAAE;EACX3B,UAAAA,OAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEL,CAAC,CAAC,CAAA;EACtB,SAAA;EACA,QAAA,OAAOK,MAAM,CAAA;EACd,OAAC,MAAM;EACN,QAAA,OAAO,IAAI,CAAA;EACZ,OAAA;EACD,KAAA;EACA,IAAA,IAAI,CAACzB,CAAC,GAAG,UAAS0B,KAAK,EAAE;QACxB,IAAI;EACH,QAAA,IAAM9B,KAAK,GAAG8B,KAAK,CAAC3B,CAAC,CAAA;EACrB,QAAA,IAAI2B,KAAK,CAAC7B,CAAC,GAAG,CAAC,EAAE;EAChBJ,UAAAA,OAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEF,WAAW,GAAGA,WAAW,CAAC3B,KAAK,CAAC,GAAGA,KAAK,CAAC,CAAA;WAC5D,MAAM,IAAI4B,UAAU,EAAE;YACtB/B,OAAA,CAAQgC,MAAM,EAAE,CAAC,EAAED,UAAU,CAAC5B,KAAK,CAAC,CAAC,CAAA;EACtC,SAAC,MAAM;EACNH,UAAAA,OAAA,CAAQgC,MAAM,EAAE,CAAC,EAAE7B,KAAK,CAAC,CAAA;EAC1B,SAAA;SACA,CAAC,OAAOwB,CAAC,EAAE;EACX3B,QAAAA,OAAA,CAAQgC,MAAM,EAAE,CAAC,EAAEL,CAAC,CAAC,CAAA;EACtB,OAAA;OACA,CAAA;EACD,IAAA,OAAOK,MAAM,CAAA;KACb,CAAA;EACD,EAAA,OAAA3B,KAAA,CAAA;EACD,CAAC,EAAG,CAAA;EA6BG,SAAA6B,cAAAA,CAAwBC,QAAQ,EAAE;IACxC,OAAOA,QAAQ,YAAA9B,KAAiB,IAAI8B,QAAQ,CAAC/B,CAAC,GAAG,CAAC,CAAA;EACnD,CAAA;EA+CO,SAAAsB,OAAgBU,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAE;IAC1C,IAAIC,CAAC,GAAG,CAAC,CAAC;MAAEtC,IAAI;MAAE2B,MAAM,CAAA;IACxB,SAASY,MAAMA,CAACR,MAAM,EAAE;MACvB,IAAI;EACH,MAAA,OAAO,EAAEO,CAAC,GAAGH,KAAK,CAACK,MAAM,KAAK,CAACH,KAAK,IAAI,CAACA,KAAK,EAAE,CAAC,EAAE;EAClDN,QAAAA,MAAM,GAAGK,IAAI,CAACE,CAAC,CAAC,CAAA;EAChB,QAAA,IAAIP,MAAM,IAAIA,MAAM,CAACvB,IAAI,EAAE;EAC1B,UAAA,IAAIyB,cAAA,CAAeF,MAAM,CAAC,EAAE;cAC3BA,MAAM,GAAGA,MAAM,CAAC1B,CAAC,CAAA;EAClB,WAAC,MAAM;cACN0B,MAAM,CAACvB,IAAI,CAAC+B,MAAM,EAAEZ,MAAM,KAAKA,MAAM,GAAG5B,OAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,GAAG,IAAAI,KAAA,EAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;EACnF,YAAA,OAAA;EACD,WAAA;EACD,SAAA;EACD,OAAA;EACA,MAAA,IAAIJ,IAAI,EAAE;EACTD,QAAAA,OAAA,CAAQC,IAAI,EAAE,CAAC,EAAE+B,MAAM,CAAC,CAAA;EACzB,OAAC,MAAM;EACN/B,QAAAA,IAAI,GAAG+B,MAAM,CAAA;EACd,OAAA;OACA,CAAC,OAAOL,CAAC,EAAE;EACX3B,MAAAA,OAAA,CAAQC,IAAI,KAAKA,IAAI,GAAG,IAAAI,KAAA,EAAW,CAAC,EAAE,CAAC,EAAEsB,CAAC,CAAC,CAAA;EAC5C,KAAA;EACD,GAAA;EACAa,EAAAA,MAAM,EAAE,CAAA;EACR,EAAA,OAAOvC,IAAI,CAAA;EACZ,CAAA;EA4BO,SAAAiO,OAAgBO,MAAM,EAAEpM,IAAI,EAAEC,KAAK,EAAE;EAC3C,EAAA,IAAI,OAAOmM,MAAM,CAAAhB,eAAA,CAAiB,KAAK,UAAU,EAAE;EAAA,IAAA,IAEzCjL,MAAM,GAAf,SAASA,MAAMA,CAACR,MAAM,EAAE;QACvB,IAAI;UACH,OAAO,CAAC,CAAC0M,IAAI,GAAGf,QAAQ,CAACgB,IAAI,EAAE,EAAEpK,IAAI,KAAK,CAACjC,KAAK,IAAI,CAACA,KAAK,EAAE,CAAC,EAAE;EAC9DN,UAAAA,MAAM,GAAGK,IAAI,CAACqM,IAAI,CAACvO,KAAK,CAAC,CAAA;EACzB,UAAA,IAAI6B,MAAM,IAAIA,MAAM,CAACvB,IAAI,EAAE;EAC1B,YAAA,IAAIyB,cAAA,CAAeF,MAAM,CAAC,EAAE;gBAC3BA,MAAM,GAAGA,MAAM,CAAC1B,CAAC,CAAA;EAClB,aAAC,MAAM;gBACN0B,MAAM,CAACvB,IAAI,CAAC+B,MAAM,EAAEZ,MAAM,KAAKA,MAAM,GAAG5B,OAAA,CAAQQ,IAAI,CAAC,IAAI,EAAEP,IAAI,GAAG,IAAAI,KAAA,EAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;EACnF,cAAA,OAAA;EACD,aAAA;EACD,WAAA;EACD,SAAA;EACA,QAAA,IAAIJ,IAAI,EAAE;EACTD,UAAAA,OAAA,CAAQC,IAAI,EAAE,CAAC,EAAE+B,MAAM,CAAC,CAAA;EACzB,SAAC,MAAM;EACN/B,UAAAA,IAAI,GAAG+B,MAAM,CAAA;EACd,SAAA;SACA,CAAC,OAAOL,CAAC,EAAE;EACX3B,QAAAA,OAAA,CAAQC,IAAI,KAAKA,IAAI,GAAG,IAAAI,KAAA,EAAW,CAAC,EAAE,CAAC,EAAEsB,CAAC,CAAC,CAAA;EAC5C,OAAA;OACA,CAAA;EAtBD,IAAA,IAAIgM,QAAQ,GAAGc,MAAM,CAAAhB,eAAA,CAAiB,EAAE;QAAEiB,IAAI;QAAEzO,IAAI;QAAE2B,MAAM,CAAA;EAuB5DY,IAAAA,MAAM,EAAE,CAAA;MACR,IAAImL,QAAQ,UAAO,EAAE;EACpB,MAAA,IAAIkB,MAAM,GAAG,SAATA,MAAMA,CAAY1O,KAAK,EAAE;UAC5B,IAAI;EACH,UAAA,IAAI,CAACuO,IAAI,CAACnK,IAAI,EAAE;cACfoJ,QAAQ,CAAA,QAAA,CAAO,EAAE,CAAA;EAClB,WAAA;EACD,SAAC,CAAC,OAAMhM,CAAC,EAAE,EACX;EACA,QAAA,OAAOxB,KAAK,CAAA;SACZ,CAAA;EACD,MAAA,IAAIF,IAAI,IAAIA,IAAI,CAACQ,IAAI,EAAE;UACtB,OAAOR,IAAI,CAACQ,IAAI,CAACoO,MAAM,EAAE,UAASlN,CAAC,EAAE;YACpC,MAAMkN,MAAM,CAAClN,CAAC,CAAC,CAAA;EAChB,SAAC,CAAC,CAAA;EACH,OAAA;EACAkN,MAAAA,MAAM,EAAE,CAAA;EACT,KAAA;EACA,IAAA,OAAO5O,IAAI,CAAA;EACZ,GAAA;EACA;EACA,EAAA,IAAI,EAAE,QAAQ,IAAIwO,MAAM,CAAC,EAAE;EAC1B,IAAA,MAAM,IAAIK,SAAS,CAAC,wBAAwB,CAAC,CAAA;EAC9C,GAAA;EACA;IACA,IAAIC,MAAM,GAAG,EAAE,CAAA;EACf,EAAA,KAAK,IAAIxM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkM,MAAM,CAAChM,MAAM,EAAEF,CAAC,EAAE,EAAE;EACvCwM,IAAAA,MAAM,CAACC,IAAI,CAACP,MAAM,CAAClM,CAAC,CAAC,CAAC,CAAA;EACvB,GAAA;EACA,EAAA,OAAOb,MAAA,CAAOqN,MAAM,EAAE,UAASxM,CAAC,EAAE;EAAE,IAAA,OAAOF,IAAI,CAAC0M,MAAM,CAACxM,CAAC,CAAC,CAAC,CAAA;KAAG,EAAED,KAAK,CAAC,CAAA;EACtE,CAAA;EAmVO,SAAA6Q,MAAgB9Q,CAAAA,IAAI,EAAE+Q,OAAO,EAAE;IACrC,IAAI;EACH,IAAA,IAAIpR,MAAM,GAAGK,IAAI,EAAE,CAAA;KACnB,CAAC,OAAMV,CAAC,EAAE;MACV,OAAOyR,OAAO,CAACzR,CAAC,CAAC,CAAA;EAClB,GAAA;EACA,EAAA,IAAIK,MAAM,IAAIA,MAAM,CAACvB,IAAI,EAAE;MAC1B,OAAOuB,MAAM,CAACvB,IAAI,CAAC,KAAK,CAAC,EAAE2S,OAAO,CAAC,CAAA;EACpC,GAAA;EACA,EAAA,OAAOpR,MAAM,CAAA;EACd,CAAA;EAhjBe,cAAA,EAAAP,KAAA,EAIP;EAAA,EAAA,IAAAR,IAAA,GAAAQ,KAAA,cAAJ,EAAE,GAAAA,KAAA;MAAA4R,UAAA,GAAApS,IAAA,CAHJqI,KAAK;EAALA,IAAAA,KAAK,GAAA+J,UAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,UAAA;MAAAC,WAAA,GAAArS,IAAA,CACbsS,MAAM;EAANA,IAAAA,MAAM,GAAAD,WAAA,KAAG,KAAA,CAAA,GAAA,EAAE,GAAAA,WAAA;MAAAE,UAAA,GAAAvS,IAAA,CACXsI,KAAK;EAALA,IAAAA,KAAK,GAAAiK,UAAA,KAAG,KAAA,CAAA,GAAA,EAAE,GAAAA,UAAA,CAAA;EAEV,EAAA,IAAMvE,KAAK,GAAG,IAAIwE,GAAG,EAAE,CAAA;EACvB,EAAA,IAAMC,aAAa,GAAG,IAAID,GAAG,EAAE,CAAA;;EAE/B;IACA,IAAME,SAAS,GAAG,EAAE,CAAA;EACpB,EAAA,KAAK,IAAMC,CAAC,IAAIC,SAAS,EAAE;MACzBF,SAAS,CAACC,CAAC,CAAC,GAAGC,SAAS,CAACD,CAAC,CAAC,CAAC;EAAEtK,MAAAA,KAAK,EAALA,KAAK;EAAEC,MAAAA,KAAK,EAALA,KAAK;EAAE0F,MAAAA,KAAK,EAALA,KAAAA;EAAM,KAAC,CAAC,CAAA;EACtD,GAAA;;EAEA;EACA,EAAA,IAAM6E,OAAO,GAAG,SAAVA,OAAOA,GAAS;EACpB,IAAA,KAAA,IAAA1P,SAAA,GAAAC,+BAAA,CAAmCqP,aAAa,CAAA,EAAApP,KAAA,EAAA,CAAA,CAAAA,KAAA,GAAAF,SAAA,EAAA,EAAAG,IAAA,GAAE;EAAA,MAAA,IAAAwP,WAAA,GAAAzP,KAAA,CAAAnE,KAAA;EAAtCS,QAAAA,OAAO,GAAAmT,WAAA,CAAA,CAAA,CAAA;EAAEC,QAAAA,SAAS,GAAAD,WAAA,CAAA,CAAA,CAAA,CAAA;EAC5BnT,MAAAA,OAAO,CAACwI,KAAK,CAAC4K,SAAS,GAAGA,SAAS,CAAA;QACnCN,aAAa,CAAA,QAAA,CAAO,CAAC9S,OAAO,CAAC,CAAA;EAC/B,KAAA;KACD,CAAA;IAED,OAAO;MACL,IAAIqO,KAAKA,GAAI;EAAE,MAAA,OAAOA,KAAK,CAAA;OAAE;EAC7B6E,IAAAA,OAAO,EAAPA,OAAO;EAEP;EACAG,IAAAA,OAAO,WAAAA,OAAA,GAAA;QAAA,IAAoB;EAAA,QAAA,IAAAnT,MAAA,GAAAoN,MAAA,CACN3E,KAAK,EAAA,UAAbqI,IAAI,EAAW;YACxB,IAAIA,IAAI,CAACI,QAAQ,EAAA,OAAA;YAAU,OAAA5Q,OAAA,CAAAC,OAAA,CACL,IAAID,OAAO,CAAC,UAAAC,OAAO,EAAI;cAC3C6S,4BAAQ,CAACC,IAAI,CAACvC,IAAI,CAAC1J,GAAG,EAAE,UAACkM,KAAK,EAAExC,IAAI,EAAK;gBACvC,IAAIwC,KAAK,EAAE,MAAMA,KAAK,CAAA;gBACtB/S,OAAO,CAACuQ,IAAI,CAAC,CAAA;EACf,aAAC,CAAC,CAAA;EACJ,WAAC,CAAC,CAAA,CAAAnR,IAAA,CAAA,UAAA4T,QAAA,EAAA;cALFzC,IAAI,CAACI,QAAQ,GAAAqC,QAKX,CAAA;EAAA,WAAA,CAAA,CAAA;WACH,CAAA,CAAA;EAAA,QAAA,OAAAjT,OAAA,CAAAC,OAAA,CAAAP,MAAA,IAAAA,MAAA,CAAAL,IAAA,GAAAK,MAAA,CAAAL,IAAA,CAAA,YAAA,EAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA;EACH,OAAC,QAAAkB,CAAA,EAAA;EAAA,QAAA,OAAAP,OAAA,CAAAQ,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,OAAA;EAAA,KAAA;EAED;MACA2S,OAAO,EAAE,SAAAA,OAAAA,GAAY;QACnBrF,KAAK,CAACsF,KAAK,EAAE,CAAA;EACbT,MAAAA,OAAO,EAAE,CAAA;EACT,MAAA,KAAA,IAAAU,UAAA,GAAAnQ,+BAAA,CAAmBkF,KAAK,CAAA,EAAAkL,MAAA,EAAA,CAAA,CAAAA,MAAA,GAAAD,UAAA,EAAA,EAAAjQ,IAAA,GAAE;EAAA,QAAA,IAAfqN,IAAI,GAAA6C,MAAA,CAAAtU,KAAA,CAAA;UAAW,OAAOyR,IAAI,CAACI,QAAQ,CAAA;EAAD,OAAA;OAC9C;EAED;EACA0C,IAAAA,MAAM,WAAAA,MAAkBC,CAAAA,IAAI,EAAE9G,OAAO,EAAOmG,SAAS,EAAA;EAAA,MAAA,IAAvBnG,OAAO,KAAA,KAAA,CAAA,EAAA;UAAPA,OAAO,GAAG,EAAE,CAAA;EAAA,OAAA;QAAA,IAAa;EACrDiG,QAAAA,OAAO,EAAE,CAAA;EACT,QAAA,IAAMhG,OAAO,GAAG6G,IAAI,CAACC,qBAAqB,EAAE,CAAA;;EAE5C;EACA,QAAA,IAAMnF,GAAG,GAAG5H,CAAC,CAAC,KAAK,EAAE;EACnBiG,UAAAA,OAAO,WAASA,OAAO,CAACnG,KAAK,GAAImG,GAAAA,GAAAA,OAAO,CAAClG,MAAQ;YACjDD,KAAK,EAAEmG,OAAO,CAACnG,KAAK;YACpBC,MAAM,EAAEkG,OAAO,CAAClG,MAAM;EACtBiN,UAAAA,mBAAmB,EAAE,MAAA;EACvB,SAAC,CAAC,CAAA;UAEF,IAAMrL,IAAI,GAAG3B,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE4H,GAAG,CAAC,CAAA;;EAEjC;EACA;UACA,IAAMqF,OAAO,GAAI,YAAM;EACrB,UAAA,IAAMC,KAAK,GAAG,CAACtF,GAAG,CAAC,CAAA;EACnB,UAAA,IAAMuF,GAAG,GAAG,SAANA,GAAGA,GAAA;cAAA,OAASD,KAAK,CAACtS,MAAM,GAAG,CAAC,IAAIsS,KAAK,CAACC,GAAG,EAAE,CAAA;EAAA,WAAA,CAAA;EACjD,UAAA,IAAMhG,IAAI,GAAG,SAAPA,IAAIA,GAAA;EAAA,YAAA,OAAS+F,KAAK,CAAC/F,IAAI,CAACnH,CAAC,CAAC,GAAG,EAAE,IAAI,EAAEoN,MAAM,CAACF,KAAK,CAAC,CAAC,CAAC,CAAA;EAAA,WAAA,CAAA;YAC1D,OAAO;EACLC,YAAAA,GAAG,EAAHA,GAAG;EACHhG,YAAAA,IAAI,EAAJA,IAAI;cACJ,IAAIkG,OAAOA,GAAI;gBAAE,OAAOD,MAAM,CAACF,KAAK,CAAC,CAAA;eAAE;EACvCI,YAAAA,KAAK,EAAE,SAAAA,KAAApU,CAAAA,KAAK,EAAI;gBACd,IAAMqU,UAAU,GAAGrU,KAAK,IAAIgU,KAAK,CAACtS,MAAM,GAAG,CAAC,CAAC,CAAA;EAC7C,cAAA,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC6S,UAAU,EAAE7S,CAAC,EAAE,EAAEyS,GAAG,EAAE,CAAA;EAC3C,cAAA,KAAK,IAAIzS,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG6S,UAAU,EAAE7S,EAAC,EAAE,EAAEyM,IAAI,EAAE,CAAA;EAC7C,aAAA;aACD,CAAA;EACH,SAAC,EAAG,CAAA;;EAEJ;EAAA,QAAA,OAAA5N,OAAA,CAAAC,OAAA,CACMV,IAAI,CAACgU,IAAI,EAAA,UAAS/T,OAAO,EAAEG,KAAK,EAAEC,KAAK,EAAA;YAAA,IAAK;EAAA,YAAA,IAAAqU,qBAAA,CAAA;EAChD,YAAA,IAAI9B,MAAM,IAAI3S,OAAO,KAAK+T,IAAI,IAAI/T,OAAO,CAAC0U,OAAO,CAAC/B,MAAM,CAAC,EAAE,OAAAnS,OAAA,CAAAC,OAAA,EAAA,CAAA;EAC3DyT,YAAAA,OAAO,CAACK,KAAK,CAACpU,KAAK,CAAC,CAAA;;EAEpB;EACA,YAAA,IAAMqI,KAAK,GAAGxG,MAAM,CAACC,gBAAgB,CAACjC,OAAO,CAAC,CAAA;EAC9C,YAAA,IAAMkE,MAAM,GAAGlE,OAAO,KAAK+T,IAAI,IAAIY,cAAc,CAACnM,KAAK,CAACtG,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAA;EACtF,YAAA,IAAM0S,OAAO,GAAGpM,KAAK,CAACtG,gBAAgB,CAAC,SAAS,CAAC,CAAA;EACjD,YAAA,IAAM2S,YAAY,GAAGrM,KAAK,CAACtG,gBAAgB,CAAC,gBAAgB,CAAC,CAAA;EAC7D,YAAA,IAAM4J,QAAQ,GAAGtD,KAAK,CAACtG,gBAAgB,CAAC,WAAW,CAAC,CAAA;EACpD,YAAA,IAAM4S,QAAQ,GAAGtM,KAAK,CAACtG,gBAAgB,CAAC,UAAU,CAAC,CAAA;;EAEnD;EACA,YAAA,IAAIgC,MAAM,EAAE;EACV;EACA;gBACA4O,aAAa,CAAC/C,GAAG,CAAC/P,OAAO,EAAEA,OAAO,CAACwI,KAAK,CAAC4K,SAAS,CAAC,CAAA;EACnDpT,cAAAA,OAAO,CAACwI,KAAK,CAAC4K,SAAS,GAAG,MAAM,CAAA;EAClC,aAAA;EAEA,YAAA,IAAA2B,qBAAA,GAAgC/U,OAAO,CAACgU,qBAAqB,EAAE;gBAAvD7O,CAAC,GAAA4P,qBAAA,CAAD5P,CAAC;gBAAEE,CAAC,GAAA0P,qBAAA,CAAD1P,CAAC;gBAAE0B,KAAK,GAAAgO,qBAAA,CAALhO,KAAK;gBAAEC,MAAM,GAAA+N,qBAAA,CAAN/N,MAAM,CAAA;;EAE3B;cACA,IACE,CAAC4N,OAAO,KAAK,CAAC,IACd1Q,MAAM,IACN2Q,YAAY,KAAK,QAAQ,IACzBC,QAAQ,KAAK,QAAQ,IACrBhJ,QAAQ,KAAK,MAAM,EACnBoI,OAAO,CAAC9F,IAAI,EAAE,CAAA;;EAEhB;EACA,YAAA,IAAI,CAACwG,OAAO,KAAK,CAAC,EAAE;gBAClBV,OAAO,CAACI,OAAO,CAAC3N,YAAY,CAAC,SAAS,EAAEiO,OAAO,CAAC,CAAA;EAClD,aAAA;;EAEA;cACA,IAAIC,YAAY,KAAK,QAAQ,EAAE;EAC7BX,cAAAA,OAAO,CAACI,OAAO,CAAC9L,KAAK,CAACqM,YAAY,GAAGA,YAAY,CAAA;EACnD,aAAA;;EAEA;EACA,YAAA,IAAI3Q,MAAM,EAAE;gBACVgQ,OAAO,CAACI,OAAO,CAAC3N,YAAY,CAAC,WAAW,EAAEzC,MAAM,CAACS,cAAc,CAAC;EAC9DQ,gBAAAA,CAAC,EAAEA,CAAC,GAAG+H,OAAO,CAAC/H,CAAC;EAChBE,gBAAAA,CAAC,EAAEA,CAAC,GAAG6H,OAAO,CAAC7H,CAAC;EAChBE,gBAAAA,MAAM,EAAEiD,KAAK,CAACtG,gBAAgB,CAAC,kBAAkB,CAAC,CAC/C8S,KAAK,CAAC,GAAG,CAAC,CACV7R,GAAG,CAAC,UAAAzD,CAAC,EAAA;oBAAA,OAAI+M,UAAU,CAAC/M,CAAC,CAAC,CAAA;EAAA,iBAAA,CAAA;EAC3B,eAAC,CAAC,CAAC,CAAA;EACL,aAAA;;EAEA;cACA,IAAIoV,QAAQ,KAAK,QAAQ,EAAE;EACzB,cAAA,IAAMhJ,SAAQ,GAAG7E,CAAC,CAAC,UAAU,EAAE;EAAEkC,gBAAAA,EAAE,EAAE,OAAO,GAAGC,OAAG,EAAC;EAAE,eAAC,EAAER,IAAI,EAAE,CAC5D3B,CAAC,CAAC,MAAM,EAAE;EACR9B,gBAAAA,CAAC,EAAEA,CAAC,GAAG+H,OAAO,CAAC/H,CAAC;EAChBE,gBAAAA,CAAC,EAAEA,CAAC,GAAG6H,OAAO,CAAC7H,CAAC;EAChB0B,gBAAAA,KAAK,EAALA,KAAK;EACLC,gBAAAA,MAAM,EAANA,MAAAA;iBACD,CAAC,CACH,CAAC,CAAA;gBAEFkN,OAAO,CAACI,OAAO,CAAC3N,YAAY,CAAC,WAAW,EAAA,OAAA,GAAUmF,SAAQ,CAAC3C,EAAE,GAAA,GAAG,CAAC,CAAA;EACnE,aAAA;;EAEA;cACA,IAAI2C,QAAQ,KAAK,MAAM,EAAE;EACvB;EACAoI,cAAAA,OAAO,CAACI,OAAO,CAAC3N,YAAY,CAAC,OAAO,EAAA,aAAA,GAAgBmF,QAAQ,CAACnE,OAAO,CAAC,IAAI,EAAE,GAAG,CAAG,CAAC,CAAA;EACpF,aAAA;;EAEA;EACA,YAAA,IAAMmM,MAAM,GAAA,CAAAW,qBAAA,GAAG1B,SAAS,CAAC/S,OAAO,CAACiV,OAAO,CAAC,KAAAR,IAAAA,GAAAA,qBAAA,GAAI1B,SAAS,CAACmC,GAAG,CAAA;EAAA,YAAA,OAAA1U,OAAA,CAAAC,OAAA,CACrCqT,MAAM,CAAC9T,OAAO,EAAE;EACnCmF,cAAAA,CAAC,EAAEA,CAAC,GAAG+H,OAAO,CAAC/H,CAAC;EAChBE,cAAAA,CAAC,EAAEA,CAAC,GAAG6H,OAAO,CAAC7H,CAAC;EAChB0B,cAAAA,KAAK,EAALA,KAAK;EACLC,cAAAA,MAAM,EAANA,MAAM;EACNwB,cAAAA,KAAK,EAALA,KAAK;EACL0E,cAAAA,OAAO,EAAPA,OAAO;EACPtE,cAAAA,IAAI,EAAJA,IAAAA;EACF,aAAC,EAAEqE,OAAO,CAAC,CAAApN,CAAAA,IAAA,WARP2N,QAAQ,EAAA;EAAA,cAAA,SAAA2H,MAAA,GAAA;EAAA,gBAAA,IAAAhI,iBAAA,CAAA;EAAA,gBAAA,SAAAiI,MAAA,GAAA;EAkCZ,kBAAA,IAAIjL,CAAC,CAACzJ,QAAQ,CAACmB,MAAM,EAAEqS,OAAO,CAACI,OAAO,CAAC1N,WAAW,CAACuD,CAAC,CAAC,CAAA;EAAA,iBAAA;kBAvBrD,IAAIqD,QAAQ,EAAE0G,OAAO,CAACI,OAAO,CAAC1N,WAAW,CAAC4G,QAAQ,CAAC,CAAA;;EAEnD;EACA,gBAAA,IAAMrD,CAAC,GAAGlD,CAAC,CAAC,GAAG,EAAE;oBAAE,OAAO,EAAA,MAAA;EAAO,iBAAC,CAAC,CAAA;EAAA,gBAAA,IAAAoO,MAAA,GAAA/H,MAAA,CAAAH,CAAAA,iBAAA,GACFI,gBAAgB,CAACvN,OAAO,CAAC,YAAAmN,iBAAA,GAAI,EAAE,EAAA,UAAApI,KAAA,EAAE;EAAA,kBAAA,IAArD9B,IAAI,GAAA8B,KAAA,CAAJ9B,IAAI;sBAAEG,QAAQ,GAAA2B,KAAA,CAAR3B,QAAQ,CAAA;oBAAA,IAAAkL,MAAA,GAAAiE,MAAA,CACrB,YAAA;EAAA,oBAAA,OAAA/R,OAAA,CAAAC,OAAA,CACesS,SAAS,CAAC1Q,IAAI,CAACe,QAAQ,CAACb,WAAW,CAAC+S,OAAO,EAAE,EAAE;EAC9DnQ,sBAAAA,CAAC,EAAElC,IAAI,CAACkC,CAAC,GAAG+H,OAAO,CAAC/H,CAAC;EACrBE,sBAAAA,CAAC,EAAEpC,IAAI,CAACoC,CAAC,GAAG6H,OAAO,CAAC7H,CAAC;wBACrB0B,KAAK,EAAE9D,IAAI,CAAC8D,KAAK;wBACjBC,MAAM,EAAE/D,IAAI,CAAC+D,MAAM;EACnBwB,sBAAAA,KAAK,EAALA,KAAAA;EACF,qBAAC,EAAEyE,OAAO,CAAC,CAAApN,CAAAA,IAAA,WANPwC,IAAI,EAAA;EAAA,sBAAA,SAAAoM,MAAA,GAAA;EASR,wBAAA,IAAIpM,IAAI,EAAE8H,CAAC,CAACvD,WAAW,CAACvE,IAAI,CAAC,CAAA;EAAA,uBAAA;EAAA,sBAAA,IAAA2G,MAAA,GAAA,YAAA;EAD7B,wBAAA,IAAIoK,SAAS,EAAA,OAAA5S,OAAA,CAAAC,OAAA,CAAe2S,SAAS,CAACpT,OAAO,EAAEqC,IAAI,CAAC,CAAAxC,CAAAA,IAAA,WAAA0V,WAAA,EAAA;EAArClT,0BAAAA,IAAI,GAAAkT,WAAiC,CAAA;EAAA,yBAAA,CAAA,CAAA;EAAA,uBAAA,EAAA,CAAA;EAAA,sBAAA,OAAAvM,MAAA,IAAAA,MAAA,CAAAnJ,IAAA,GAAAmJ,MAAA,CAAAnJ,IAAA,CAAA4O,MAAA,CAAAA,GAAAA,MAAA,CAAAzF,MAAA,CAAA,CAAA;EAAA,qBAAA,CAAA,CAAA;qBAErD,EAAA,UAAQwK,KAAK,EAAE;EACd;sBACAgC,OAAO,CAACC,IAAI,CAAC,IAAIvE,KAAK,CAA8C9N,4CAAAA,GAAAA,QAAQ,CAACb,WAAW,GAAK,GAAA,EAAA;EAAEmT,sBAAAA,KAAK,EAAElC,KAAAA;EAAM,qBAAC,CAAC,CAAC,CAAA;EAC/GgC,oBAAAA,OAAO,CAACC,IAAI,CAACjC,KAAK,CAAC,CAAA;qBACpB,CAAA,CAAA;oBAAA,IAAAlF,MAAA,IAAAA,MAAA,CAAAzO,IAAA,EAAAyO,OAAAA,MAAA,CAAAzO,IAAA,CAAA,YAAA,EAAA,CAAA,CAAA;mBACF,CAAA,CAAA;EAAA,gBAAA,OAAAwV,MAAA,IAAAA,MAAA,CAAAxV,IAAA,GAAAwV,MAAA,CAAAxV,IAAA,CAAAuV,MAAA,CAAAA,GAAAA,MAAA,CAAAC,MAAA,CAAA,CAAA;EAAA,eAAA;EAAA,cAAA,IAAAM,MAAA,GAAA,YAAA;EAtBD,gBAAA,IAAIvC,SAAS,EAAA,OAAA5S,OAAA,CAAAC,OAAA,CAAmB2S,SAAS,CAACpT,OAAO,EAAEwN,QAAQ,CAAC,CAAA3N,CAAAA,IAAA,WAAA+V,UAAA,EAAA;EAA7CpI,kBAAAA,QAAQ,GAAAoI,UAAqC,CAAA;EAAA,iBAAA,CAAA,CAAA;EAAA,eAAA,EAAA,CAAA;EAAA,cAAA,OAAAD,MAAA,IAAAA,MAAA,CAAA9V,IAAA,GAAA8V,MAAA,CAAA9V,IAAA,CAAAsV,MAAA,CAAAA,GAAAA,MAAA,CAAAQ,MAAA,CAAA,CAAA;EAAA,aAAA,CAAA,CAAA;EAyB9D,WAAC,QAAA5U,CAAA,EAAA;EAAA,YAAA,OAAAP,OAAA,CAAAQ,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,WAAA;WAAE,EAAA;EACDR,UAAAA,IAAI,EAAE,SAAAA,IAAAA,CAACsV,CAAC,EAAEC,CAAC,EAAK;cAAA,IAAAC,SAAA,EAAAC,SAAA,CAAA;EACd,YAAA,CAAAD,SAAA,GAAAF,CAAC,CAACI,MAAM,KAAAF,IAAAA,GAAAA,SAAA,GAARF,CAAC,CAACI,MAAM,GAAKC,SAAS,CAACL,CAAC,CAAC,CAAA;EACzB,YAAA,CAAAG,SAAA,GAAAF,CAAC,CAACG,MAAM,KAAAD,IAAAA,GAAAA,SAAA,GAARF,CAAC,CAACG,MAAM,GAAKC,SAAS,CAACJ,CAAC,CAAC,CAAA;EACzB,YAAA,OAAOD,CAAC,CAACI,MAAM,GAAGH,CAAC,CAACG,MAAM,CAAA;EAC5B,WAAA;WACD,CAAC,EAAApW,IAAA,CAAA,YAAA;EAEFqT,UAAAA,OAAO,EAAE,CAAA;EACT,UAAA,OAAOrE,GAAG,CAAA;EAAA,SAAA,CAAA,CAAA;EACZ,OAAC,QAAA9N,CAAA,EAAA;EAAA,QAAA,OAAAP,OAAA,CAAAQ,MAAA,CAAAD,CAAA,CAAA,CAAA;EAAA,OAAA;EAAA,KAAA;KACF,CAAA;EACH;;;;;;;;"}