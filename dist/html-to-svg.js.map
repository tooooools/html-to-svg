{"version":3,"file":"html-to-svg.js","sources":["../src/utils/dom-walk.js","../src/utils/dom-get-zindex.js","../src/utils/range-get-client-rects.js","../src/utils/dom-get-text-fragments.js","../src/utils/parse-transform.js","../src/utils/array-last.js","../src/utils/dom-render-svg.js","../src/renderers/canvas.js","../src/renderers/div.js","../src/renderers/image.js","../src/renderers/span.js","../src/renderers/svg.js","../src/renderers/text.js","../src/index.js"],"sourcesContent":["async function walk (element, callback, { sort = () => 1 } = {}, depth = 0, index = 0) {\n  await callback(element, depth, index)\n\n  const children = Array.from(element.children).sort(sort)\n  for (let index = 0; index < children.length; index++) {\n    await walk(children[index], callback, { sort }, depth + 1, index)\n  }\n}\n\nexport default walk\n","export default el => {\n  const zindex = window.getComputedStyle(el).getPropertyValue('z-index')\n  return zindex === 'auto' ? 0 : parseInt(zindex ?? 0)\n}\n","/* global DocumentFragment */\n\n// Return Range.clientRects with their corresponding DocumentFragment\nexport default function (node, text = node.innerText || node.textContent) {\n  const range = document.createRange()\n\n  const rects = []\n  for (let i = 0; i < node.length; i++) {\n    range.setStart(node, 0)\n    range.setEnd(node, (i + 1))\n\n    const clientRects = range.getClientRects()\n\n    const index = clientRects.length - 1\n    rects[index] = rects[index] ?? { text: '' }\n    rects[index].rect = clientRects[index]\n    rects[index].text += text.charAt(i)\n  }\n\n  return rects.map(rect => {\n    rect.fragment = new DocumentFragment()\n    rect.fragment.textContent = rect.text\n    return rect\n  })\n}\n","/* global Node */\nimport getClientRects from './range-get-client-rects'\n\nexport default function (element) {\n  if (!element) return\n  if (!element.innerText) return\n  if (!element.childNodes.length) return\n\n  let fragments = []\n\n  for (const node of element.childNodes) {\n    if (node.nodeType !== Node.TEXT_NODE) continue\n    if (!node.textContent.length) continue\n\n    // Text interface does not provide a .innerText method, which would be\n    // more appropriate than textContent as it skips non-rendered whitespaces\n    // Splitting white-space leading Text trick the browser to recompute\n    // the layout itself, dealing with implicit space between adjacent nodes\n    if (/^\\s/.test(node.textContent)) node.splitText(1)\n\n    fragments = fragments.concat(getClientRects(node))\n  }\n\n  return fragments\n}\n","import * as Transform from 'transformation-matrix'\n\nexport default function (value) {\n  if (!value || value === 'none' || value === '') return null\n\n  const matrix = Transform.fromString(value)\n  const { translate, scale, rotation } = Transform.decomposeTSR(matrix)\n\n  return {\n    raw: value,\n    translate,\n    scale,\n    rotation,\n    toSVGTransform: ({ x = 0, y = 0, origin = [0, 0] } = {}) => {\n      const cx = x + origin[0]\n      const cy = y + origin[1]\n\n      return Transform.toString(\n        Transform.compose(\n          Transform.translate(translate?.tx ?? 0, translate?.ty ?? 0),\n          Transform.scale(scale?.sx ?? 1, scale?.sy ?? scale?.sx ?? 1, cx, cy),\n          Transform.rotate(rotation?.angle ?? 0, cx, cy)\n        )\n      )\n    }\n  }\n}\n","export default arr => arr[arr.length - 1]\n","export default function (name, props = {}, parent, children = []) {\n  const NS = 'http://www.w3.org/2000/svg'\n\n  const element = document.createElementNS(NS, name)\n  if (name === 'svg') element.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns', NS)\n  for (const key in props) {\n    if (props[key] === null || props[key] === undefined) continue\n    element.setAttribute(key, props[key])\n  }\n\n  if (parent) parent.appendChild(element)\n\n  for (const child of children ?? []) element.appendChild(child)\n  return element\n}\n","import $ from '../utils/dom-render-svg'\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => $('image', {\n  x,\n  y,\n  width,\n  height,\n  href: element.toDataURL('image/png')\n})\n","import $ from '../utils/dom-render-svg'\nimport { parse as parseGradient } from 'gradient-parser'\nimport { uid } from 'uid'\n\nconst kebabToCamel = s => s.replace(/-./g, x => x[1].toUpperCase())\n\nfunction isTransparent (color) {\n  if (!color || color === 'none' || color === 'transparent') return true\n\n  if (color.startsWith('rgba')) {\n    const rgba = color.match(/[\\d.]+/g)\n    if (rgba[3] === '0') return true\n  }\n\n  return false\n}\n\nfunction parseBorders (s) {\n  let borders = null\n\n  for (const dir of ['top', 'right', 'bottom', 'left']) {\n    const color = s.getPropertyValue(`border-${dir}-color`)\n    const width = parseInt(s.getPropertyValue(`border-${dir}-width`))\n    const style = s.getPropertyValue(`border-${dir}-style`)\n\n    // Skip invisible\n    if (isTransparent(color)) continue\n    if (!width || isNaN(width)) continue\n    if (style === 'none' || style === 'hidden') continue\n\n    borders ??= {}\n    borders[dir] = { color, width, style }\n  }\n\n  return borders\n}\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style, defs }) => {\n  if (!width || !height) return\n\n  const backgroundColor = style.getPropertyValue('background-color')\n  const backgroundImage = style.getPropertyValue('background-image') ?? 'none'\n  const boxShadow = style.getPropertyValue('box-shadow') ?? 'none'\n  const borderRadius = parseInt(style.getPropertyValue('border-radius')) ?? null\n  const borders = parseBorders(style)\n\n  // Skip visually empty blocks\n  if (isTransparent(backgroundColor) && isTransparent(backgroundImage) && !borders) return\n\n  // Render initial rect\n  const g = $('g')\n  const rect = $('rect', {\n    x,\n    y,\n    width,\n    height,\n    fill: backgroundColor,\n    rx: borderRadius\n  }, g)\n\n  // Render background-image\n  if (!isTransparent(backgroundImage)) {\n    // TODO handle multiple gradients\n    const {\n      colorStops,\n      orientation,\n      type\n    } = parseGradient(backgroundImage)?.[0] ?? {}\n\n    // TODO handle repeating gradients type, SEE https://github.com/rafaelcaricio/gradient-parser?tab=readme-ov-file#ast\n    const gradient = $(kebabToCamel(type), {\n      id: 'gradient_' + uid(),\n      gradientUnits: 'objectBoundingBox', // Allow specifying rotation center in %\n      gradientTransform: orientation\n        ? (() => {\n            switch (orientation.type) {\n              case 'angular': return `rotate(${270 + parseFloat(orientation.value)}, 0.5, 0.5)`\n              case 'directional': {\n                switch (orientation.value) {\n                  case 'top': return 'rotate(270, 0.5, 0.5)'\n                  case 'right': return null\n                  case 'bottom': return 'rotate(90, 0.5, 0.5)'\n                  case 'left': return 'rotate(180, 0.5, 0.5)'\n                }\n              }\n            }\n          })()\n        : 'rotate(90, 0.5, 0.5)'\n    }, defs)\n\n    // Add color stops\n    for (let index = 0; index < colorStops.length; index++) {\n      const colorStop = colorStops[index]\n      const stop = $('stop', {\n        offset: colorStop.length\n          // TODO handle colorStop.length.type other than '%'\n          ? +colorStop.length.value / 100\n          : index / (colorStops.length - 1),\n        'stop-color': `${colorStop.type}(${colorStop.value})`\n      })\n\n      gradient.appendChild(stop)\n    }\n\n    rect.setAttribute('fill', `url(#${gradient.id})`)\n  }\n\n  // Render box shadow\n  if (boxShadow !== 'none') {\n    const filter = $('filter', { id: 'filter_' + uid() }, defs)\n    // This assumes browser consistency of the CSSStyleDeclaration.getPropertyValue returned string\n    const REGEX_SHADOW_DECLARATION = /rgba?\\(([\\d.]{1,3}(,\\s)?){3,4}\\)\\s(-?(\\d+)px\\s?){4}/g\n    const REGEX_SHADOW_DECLARATION_PARSER = /(rgba?\\((?:[\\d.]{1,3}(?:,\\s)?){3,4}\\))\\s(-?[\\d.]+)px\\s(-?[\\d.]+)px\\s(-?[\\d.]+)px\\s(-?[\\d.]+)px/\n\n    for (const shadowString of boxShadow.match(REGEX_SHADOW_DECLARATION) ?? []) {\n      let [\n        ,\n        color,\n        offx,\n        offy,\n        blur,\n        spread\n      ] = shadowString.match(REGEX_SHADOW_DECLARATION_PARSER)\n\n      offx = parseInt(offx)\n      offy = parseInt(offy)\n      spread = parseInt(spread)\n\n      filter.appendChild($('feGaussianBlur', { stdDeviation: blur / 2 }))\n\n      const shadow = $('rect', {\n        x: x + offx - spread,\n        y: y + offy - spread,\n        width: width + spread * 2,\n        height: height + spread * 2,\n        fill: color,\n        rx: borderRadius,\n        filter: `url(#${filter.id})`\n      })\n\n      g.prepend(shadow)\n    }\n  }\n\n  // Render border\n  if (!borderRadius) {\n    for (const [dir, border] of Object.entries(borders ?? {})) {\n      const geom = {}\n      switch (dir) {\n        case 'top':\n          geom.x1 = x\n          geom.x2 = x + width\n          geom.y1 = geom.y2 = y + parseInt(border.width) / 2\n          break\n\n        case 'right':\n          geom.x1 = geom.x2 = x + width - parseInt(border.width) / 2\n          geom.y1 = y\n          geom.y2 = y + height\n          break\n\n        case 'bottom':\n          geom.x1 = x\n          geom.x2 = x + width\n          geom.y1 = geom.y2 = y + height - parseInt(border.width) / 2\n          break\n\n        case 'left':\n          geom.x1 = geom.x2 = x + parseInt(border.width) / 2\n          geom.y1 = y\n          geom.y2 = y + height\n          break\n      }\n\n      $('line', {\n        ...geom,\n        stroke: border.color,\n        'stroke-width': border.width,\n        ...(() => {\n          switch (border.style) {\n            case 'dotted': return {\n              'stroke-dasharray': [0, border.width * 2].join(' '),\n              'stroke-dashoffset': 1,\n              'stroke-linejoin': 'round',\n              'stroke-linecap': 'round'\n            }\n\n            case 'dashed': return {\n              // https://developer.mozilla.org/en-US/docs/Web/CSS/border-style#dashed\n              'stroke-dasharray': [border.width * 2, 4].join(' ')\n            }\n\n            default: return {}\n          }\n        })()\n      }, g)\n    }\n  } else if (borders?.top) {\n    // Handle border-radius by drawing the whole border as a standard stroke\n    // TODO handle border-radius for specific border-dir.\n    // For now, we use borders.top as a placeholder for all borders\n    rect.setAttribute('stroke', borders.top.color)\n    rect.setAttribute('stroke-width', borders.top.width)\n\n    // Draw border from center\n    rect.setAttribute('rx', borderRadius - borders.top.width / 2)\n    rect.setAttribute('x', x + borders.top.width / 2)\n    rect.setAttribute('y', y + borders.top.width / 2)\n    rect.setAttribute('width', width - borders.top.width)\n    rect.setAttribute('height', height - borders.top.width)\n  }\n\n  return g\n}\n","import $ from '../utils/dom-render-svg'\n\nexport default ({\n  debug,\n  fonts\n}) => async (element, { x, y, width, height, style }) => {\n  if (!width || !height) return\n  if (!element.src) return\n\n  return $('image', {\n    x,\n    y,\n    width,\n    height,\n    href: element.src\n  })\n}\n","import $ from '../utils/dom-render-svg'\nimport getTextFragments from '../utils/dom-get-text-fragments'\n\nimport DivRenderer from './div'\n\nconst SpanRenderer = ({ debug, fonts }) => async (element, { x, y, width, height, style, viewBox }, options) => {\n  const g = $('g', null)\n\n  // Render every child node as a span\n  const renderSpan = SpanRenderer({ debug, fonts })\n  for (const node of element.childNodes) {\n    g.appendChild(await renderSpan(node, { x, y, width, height, style, viewBox }, options))\n  }\n\n  // Render every text fragment using the div renderer (background etc)\n  const renderDiv = DivRenderer({ debug, fonts })\n  for (const { rect } of getTextFragments(element) ?? []) {\n    const rendered = await renderDiv(element, {\n      x: rect.x - viewBox.x,\n      y: rect.y - viewBox.y,\n      width: rect.width,\n      height: rect.height,\n      style,\n      viewBox\n    }, options)\n\n    if (rendered) g.appendChild(rendered)\n  }\n\n  return g\n}\n\nexport default SpanRenderer\n","/* global FileReader, XMLSerializer, btoa, XMLHttpRequest */\nimport $ from '../utils/dom-render-svg'\n\nexport default ({ cache }) => async (element, { x, y, width, height, style }, {\n  rasterizeNestedSVG = true\n} = {}) => {\n  // Convert all image to dataURL to maximizime compatibility\n  for (const image of element.querySelectorAll('image[href]')) {\n    const src = image.getAttribute('href')\n\n    if (!cache.has(src)) {\n      // Fetch blob from image src\n      const blob = await new Promise(resolve => {\n        const request = new XMLHttpRequest()\n        request.open('GET', src, true)\n        request.responseType = 'blob'\n        request.onload = () => resolve(request.response)\n        request.send()\n      })\n\n      // Convert blob to dataURL using the FileReader API\n      const dataURL = await new Promise(resolve => {\n        const reader = new FileReader()\n        reader.onload = e => resolve(e.target.result)\n        reader.readAsDataURL(blob)\n      })\n\n      // Cache dataURL\n      cache.set(src, dataURL)\n    }\n\n    image.setAttribute('href', cache.get(src))\n  }\n\n  return rasterizeNestedSVG\n    ? $('image', {\n      x,\n      y,\n      width,\n      height,\n      href: 'data:image/svg+xml;base64,' + btoa(new XMLSerializer().serializeToString(element))\n    })\n    : (() => {\n        const svg = $('svg', {\n          x,\n          y,\n          width,\n          height,\n          viewbox: `0 0 ${width} ${height}`\n        })\n\n        svg.innerHTML = element.innerHTML\n        return svg\n      })()\n}\n","// TODO text-decoration\n\nimport $ from '../utils/dom-render-svg'\n\nconst matchFont = s => ({ family, style = 'normal', weight = '400' } = {}) =>\n  family === (s.getPropertyValue('font-family') ?? '').replace(/['\"]/g, '') &&\n    style === (s.getPropertyValue('font-style') ?? 'normal') &&\n    weight === (s.getPropertyValue('font-weight') ?? '400')\n\nexport default ({ debug, fonts }) => async (string, { x, y, width, height, style }, {\n  splitText = false\n}) => {\n  if (!string) return\n\n  const g = $('g', { class: 'text-fragment' })\n\n  // Find font\n  const font = fonts.find(matchFont(style))\n  if (!font) throw new Error(`Cannot find font '${style.getPropertyValue('font-family')} ${style.getPropertyValue('font-style')} ${style.getPropertyValue('font-weight')}'`)\n\n  // Extract font metrics\n  const { unitsPerEm } = font.opentype\n  const ascender = font.opentype.tables.hhea.ascender\n  const descender = font.opentype.tables.hhea.descender\n\n  // Extract CSS props\n  const letterSpacing = style.getPropertyValue('letter-spacing')\n  const fontSize = parseFloat(style.getPropertyValue('font-size'))\n\n  // Compute metrics\n  const lineBox = (ascender - descender) / unitsPerEm\n  const leading = (fontSize * lineBox) - Math.abs(descender / unitsPerEm) * fontSize\n\n  // Render various metrics for debug\n  line('start', 0, { orientation: 'vertical', stroke: 'red' })\n  line('end', width, { orientation: 'vertical', stroke: 'red' })\n  line('leading', leading, { stroke: '#4b96ff' })\n\n  if (letterSpacing !== 'normal' || splitText) {\n    const ls = letterSpacing === 'normal' ? 0 : parseFloat(letterSpacing)\n\n    // Render letter by letter in case of non-default letter-spacing or explicit split\n    for (const c of string) {\n      if (!c.match(/\\s/)) { // Do not render spaces\n        $('path', {\n          d: font.opentype.getPath(c, x, y + leading, fontSize).toPathData(3),\n          fill: style.getPropertyValue('color')\n        }, g)\n      }\n\n      x += font.opentype.getAdvanceWidth(c, fontSize) + ls\n    }\n  } else {\n    // Render string\n    $('path', {\n      d: font.opentype.getPath(string, x, y + leading, fontSize, {\n        features: {\n          // TODO extract from CSS props\n          liga: true,\n          rlig: true\n        }\n      }).toPathData(3),\n      fill: style.getPropertyValue('color')\n    }, g)\n  }\n\n  return g\n\n  function line (title, v, { orientation = 'horizontal', stroke = 'black' } = {}) {\n    return debug && $('line', {\n      title,\n      'data-value': v,\n      x1: orientation === 'horizontal' ? x : x + v,\n      x2: orientation === 'horizontal' ? x + width : x + v,\n      y1: orientation === 'horizontal' ? y + v : y,\n      y2: orientation === 'horizontal' ? y + v : y + height,\n      stroke,\n      class: 'debug'\n    }, g)\n  }\n}\n","import Opentype from 'opentype.js'\nimport { uid } from 'uid'\n\nimport walk from './utils/dom-walk'\nimport getZIndex from './utils/dom-get-zindex'\nimport getTextFragments from './utils/dom-get-text-fragments'\nimport parseTransform from './utils/parse-transform'\nimport lastOf from './utils/array-last'\n\nimport $ from './utils/dom-render-svg'\nimport * as RENDERERS from './renderers'\n\nexport default function ({\n  debug = false,\n  ignore = '',\n  fonts = []\n} = {}) {\n  const cache = new Map()\n  const detransformed = new Map()\n\n  // Init curried renderers\n  const renderers = {}\n  for (const k in RENDERERS) {\n    renderers[k] = RENDERERS[k]({ debug, fonts, cache })\n  }\n\n  // Restore all removed transformation if any\n  const cleanup = () => {\n    for (const [element, transform] of detransformed) {\n      element.style.transform = transform\n      detransformed.delete(element)\n    }\n  }\n\n  return {\n    get cache () { return cache },\n    cleanup,\n\n    // Preload all fonts before resolving\n    preload: async function () {\n      for (const font of fonts) {\n        if (font.opentype) continue\n        font.opentype = await new Promise(resolve => {\n          Opentype.load(font.url, (error, font) => {\n            if (error) throw error\n            resolve(font)\n          })\n        })\n      }\n    },\n\n    // Clear cache and delete all resources\n    destroy: function () {\n      cache.clear()\n      cleanup()\n      for (const font of fonts) delete font.opentype\n    },\n\n    // Render the HTML container as a shadow SVG\n    render: async function (root, options = {}, transform) {\n      cleanup()\n      const viewBox = root.getBoundingClientRect()\n\n      // Create the SVG container\n      const svg = $('svg', {\n        viewBox: `0 0 ${viewBox.width} ${viewBox.height}`,\n        width: viewBox.width,\n        height: viewBox.height,\n        preserveAspectRatio: 'none'\n      })\n\n      const defs = $('defs', null, svg)\n\n      // Set context to root SVG.\n      // Context will change during walk push/pop\n      const Context = (() => {\n        const stack = [svg]\n        const pop = () => stack.length > 0 && stack.pop()\n        const push = () => stack.push($('g', null, lastOf(stack)))\n        return {\n          pop,\n          push,\n          get current () { return lastOf(stack) },\n          apply: depth => {\n            const deltaDepth = depth - (stack.length - 1)\n            for (let i = 0; i < -deltaDepth; i++) pop()\n            for (let i = 0; i < deltaDepth; i++) push()\n          }\n        }\n      })()\n\n      // Render every children\n      await walk(root, async (element, depth, index) => {\n        if (ignore && element !== root && element.matches(ignore)) return\n        Context.apply(depth)\n\n        // Extract geometric and style data from element\n        const style = window.getComputedStyle(element)\n        const matrix = element !== root && parseTransform(style.getPropertyValue('transform'))\n        const opacity = style.getPropertyValue('opacity')\n        const clipPath = style.getPropertyValue('clip-path')\n        const overflow = style.getPropertyValue('overflow')\n\n        // Temporarily remove transformation to simplify coordinates calc\n        if (matrix) {\n          // WARNING this will cause issues with concurent renderings:\n          // <renderer>#cleanup is called before to ensure purity\n          detransformed.set(element, element.style.transform)\n          element.style.transform = 'none'\n        }\n\n        const { x, y, width, height } = element.getBoundingClientRect()\n\n        // Create a new context\n        if (\n          +opacity !== 1 ||\n          matrix ||\n          overflow === 'hidden' ||\n          clipPath !== 'none'\n        ) Context.push()\n\n        // Handle opacity\n        if (+opacity !== 1) {\n          Context.current.setAttribute('opacity', opacity)\n        }\n\n        // Handle transformation\n        if (matrix) {\n          Context.current.setAttribute('transform', matrix.toSVGTransform({\n            x: x - viewBox.x,\n            y: y - viewBox.y,\n            origin: style.getPropertyValue('transform-origin')\n              .split(' ')\n              .map(v => parseFloat(v))\n          }))\n        }\n\n        // Handle overflow: hidden\n        if (overflow === 'hidden') {\n          const clipPath = $('clipPath', { id: 'clip_' + uid() }, defs, [\n            $('rect', {\n              x: x - viewBox.x,\n              y: y - viewBox.y,\n              width,\n              height\n            })\n          ])\n\n          Context.current.setAttribute('clip-path', `url(#${clipPath.id})`)\n        }\n\n        // Handle CSS clip-path property\n        if (clipPath !== 'none') {\n          // WARNING: CSS clip-path implementation is not done yet on arnaudjuracek/svg-to-pdf\n          Context.current.setAttribute('style', `clip-path: ${clipPath.replace(/\"/g, \"'\")}`)\n        }\n\n        // Render element\n        const render = renderers[element.tagName] ?? renderers.div\n        let rendered = await render(element, {\n          x: x - viewBox.x,\n          y: y - viewBox.y,\n          width,\n          height,\n          style,\n          viewBox,\n          defs\n        }, options)\n\n        if (transform) rendered = await transform(element, rendered)\n        if (rendered) Context.current.appendChild(rendered)\n\n        // Render text nodes inside the element\n        const g = $('g', { class: 'text' })\n        for (const { rect, fragment } of getTextFragments(element) ?? []) {\n          try {\n            let text = await renderers.text(fragment.textContent.trimEnd(), {\n              x: rect.x - viewBox.x,\n              y: rect.y - viewBox.y,\n              width: rect.width,\n              height: rect.height,\n              style\n            }, options)\n\n            if (transform) text = await transform(element, text)\n            if (text) g.appendChild(text)\n          } catch (error) {\n            // TODO[improve] error handling\n            console.warn(new Error(`Rendering failed for the following text: '${fragment.textContent}'`, { cause: error }))\n            console.warn(error)\n          }\n        }\n\n        if (g.children.length) Context.current.appendChild(g)\n      }, {\n        sort: (a, b) => {\n          a.zIndex ??= getZIndex(a)\n          b.zIndex ??= getZIndex(b)\n          return a.zIndex - b.zIndex\n        }\n      })\n\n      cleanup()\n      return svg\n    }\n  }\n}\n"],"names":["_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","walk","element","callback","_temp2","depth","index","_ref","_ref$sort","sort","Promise","resolve","children","Array","from","_temp","_forTo","e","reject","prototype","onFulfilled","onRejected","result","_this","_isSettledPact","thenable","array","body","check","i","_cycle","length","el","zindex","window","getComputedStyle","getPropertyValue","parseInt","node","text","innerText","textContent","range","document","createRange","rects","_rects$index","setStart","setEnd","clientRects","getClientRects","rect","charAt","map","fragment","DocumentFragment","childNodes","fragments","_iterator","_createForOfIteratorHelperLoose","_step","done","nodeType","Node","TEXT_NODE","test","splitText","concat","matrix","Transform","fromString","_Transform$decomposeT","decomposeTSR","translate","scale","rotation","raw","toSVGTransform","_translate$tx","_translate$ty","_scale$sx","_ref2","_scale$sy","_rotation$angle","_ref$x","x","_ref$y","y","_ref$origin","origin","cx","cy","toString","compose","tx","ty","sx","sy","rotate","angle","arr","name","props","parent","NS","createElementNS","setAttributeNS","key","undefined","setAttribute","appendChild","_children","child","width","height","$","href","toDataURL","kebabToCamel","replace","toUpperCase","isTransparent","color","startsWith","rgba","match","parseBorders","borders","_i","_arr","_borders","dir","style","isNaN","defs","_style$getPropertyVal","_style$getPropertyVal2","_parseInt","backgroundColor","backgroundImage","boxShadow","borderRadius","g","fill","rx","_parseGradient$","_parseGradient","_ref3","parseGradient","colorStops","orientation","type","gradient","id","uid","gradientUnits","gradientTransform","parseFloat","colorStop","stop","offset","filter","REGEX_SHADOW_DECLARATION","REGEX_SHADOW_DECLARATION_PARSER","_boxShadow$match","shadowString","_shadowString$match","offx","offy","blur","spread","stdDeviation","shadow","prepend","_loop","_Object$entries$_i","_Object$entries","_i2","border","geom","x1","x2","y1","y2","_extends","stroke","join","Object","entries","top","src","_iteratorSymbol","Symbol","iterator","SpanRenderer","debug","fonts","options","viewBox","_temp3","_getTextFragments","renderDiv","DivRenderer","_forOf","getTextFragments","rendered","renderSpan","_appendChild","_renderSpan","call","target","step","next","return","_fixup","TypeError","values","push","cache","_temp5","_ref3$rasterizeNested","rasterizeNestedSVG","_temp4","btoa","XMLSerializer","serializeToString","svg","viewbox","innerHTML","querySelectorAll","image","get","getAttribute","has","request","XMLHttpRequest","open","responseType","onload","response","send","blob","reader","FileReader","readAsDataURL","dataURL","set","matchFont","_s$getPropertyValue","_s$getPropertyValue2","_s$getPropertyValue3","family","_ref$style","_ref$weight","weight","string","_ref4","_ref4$splitText","line","title","_ref5","_ref5$orientation","_ref5$stroke","font","find","Error","unitsPerEm","opentype","ascender","tables","hhea","descender","letterSpacing","fontSize","lineBox","leading","Math","abs","ls","c","d","getPath","toPathData","getAdvanceWidth","features","liga","rlig","_catch","recover","_ref$debug","_ref$ignore","ignore","_ref$fonts","Map","detransformed","renderers","k","RENDERERS","cleanup","_step$value","transform","preload","Opentype","load","url","error","_Promise","destroy","clear","_iterator2","_step2","render","root","getBoundingClientRect","preserveAspectRatio","Context","stack","pop","lastOf","current","apply","deltaDepth","_renderers$element$ta","matches","parseTransform","opacity","clipPath","overflow","_element$getBoundingC","split","tagName","div","_temp9","_temp7","_temp6","trimEnd","_transform2","console","warn","cause","_temp8","_transform","a","b","_a$zIndex","_b$zIndex","zIndex","getZIndex"],"mappings":"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"}